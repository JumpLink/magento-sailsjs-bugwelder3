sails-magento: registerCollection: function(collection, cb)

cb: 
function () {
            if (called) throw new Error("Callback was already called.");
            called = true;
            fn.apply(root, arguments);
        }

collection: 
{ syncable: true,
  defaults: { port: 6060, migrate: 'alter', adapter: 'sails-magento' },
  registerCollection: [Function],
  teardown: [Function],
  define: [Function],
  describe: [Function],
  drop: [Function],
  alter: [Function],
  create: [Function],
  findOne: [Function],
  findAll: [Function],
  find: [Function],
  update: [Function],
  destroy: [Function],
  stream: [Function],
  product_items: [Function],
  store_tree: [Function],
  config: { port: 6060, migrate: 'alter', adapter: 'sails-magento' },
  definition: 
   { id: { type: 'integer', index: true },
     name: { type: 'string' },
     attributes: { type: 'json' },
     createdAt: { type: 'datetime', default: 'NOW' },
     updatedAt: { type: 'datetime', default: 'NOW' } },
  identity: 'attributeset' }
sails-magento: describe: function(attributeset, function afterDescribe(err, attrs) {
      if(err) return cb(err);

      // if it doesn't go ahead and add it and get out
      if(!attrs) return self.define(cb);

      // Otherwise, if it *DOES* exist, we'll try and guess what changes need to be made
      self.alter(function(err) {
        if(err) return cb(err);
        cb();
      });
    })
sails-magento: describe: function(attributeset, function (err, existingAttributes) {
      if(err) return cb(err);
      if(existingAttributes) return cb(new Error("Trying to define a collection (" + self.collection + ") which already exists."));

      self.adapter.define(self.collection, self.query._schema.schema, cb);
    })
sails-magento: define: function(attributeset, [object Object], function (err) {
      if(err) return cb(err);
      cb();
    })
sails-magento: registerCollection: function(collection, cb)

cb: 
function () {
            if (called) throw new Error("Callback was already called.");
            called = true;
            fn.apply(root, arguments);
        }

collection: 
{ syncable: true,
  defaults: { port: 6060, migrate: 'alter', adapter: 'sails-magento' },
  registerCollection: [Function],
  teardown: [Function],
  define: [Function],
  describe: [Function],
  drop: [Function],
  alter: [Function],
  create: [Function],
  findOne: [Function],
  findAll: [Function],
  find: [Function],
  update: [Function],
  destroy: [Function],
  stream: [Function],
  product_items: [Function],
  store_tree: [Function],
  config: { port: 6060, migrate: 'alter', adapter: 'sails-magento' },
  definition: 
   { id: 
      { type: 'integer',
        autoIncrement: true,
        defaultsTo: 'AUTO_INCREMENT',
        primaryKey: true,
        unique: true },
     createdAt: { type: 'datetime', default: 'NOW' },
     updatedAt: { type: 'datetime', default: 'NOW' } },
  identity: 'category' }
sails-magento: describe: function(category, function afterDescribe(err, attrs) {
      if(err) return cb(err);

      // if it doesn't go ahead and add it and get out
      if(!attrs) return self.define(cb);

      // Otherwise, if it *DOES* exist, we'll try and guess what changes need to be made
      self.alter(function(err) {
        if(err) return cb(err);
        cb();
      });
    })
sails-magento: describe: function(category, function (err, existingAttributes) {
      if(err) return cb(err);
      if(existingAttributes) return cb(new Error("Trying to define a collection (" + self.collection + ") which already exists."));

      self.adapter.define(self.collection, self.query._schema.schema, cb);
    })
sails-magento: define: function(category, [object Object], function (err) {
      if(err) return cb(err);
      cb();
    })
sails-magento: registerCollection: function(collection, cb)

cb: 
function () {
            if (called) throw new Error("Callback was already called.");
            called = true;
            fn.apply(root, arguments);
        }

collection: 
{ syncable: true,
  defaults: { port: 6060, migrate: 'alter', adapter: 'sails-magento' },
  registerCollection: [Function],
  teardown: [Function],
  define: [Function],
  describe: [Function],
  drop: [Function],
  alter: [Function],
  create: [Function],
  findOne: [Function],
  findAll: [Function],
  find: [Function],
  update: [Function],
  destroy: [Function],
  stream: [Function],
  product_items: [Function],
  store_tree: [Function],
  config: { port: 6060, migrate: 'alter', adapter: 'sails-magento' },
  definition: 
   { customer_id: { type: 'integer', unique: true },
     email: { type: 'string', unique: true },
     firstname: { type: 'string' },
     lastname: { type: 'string' },
     store_id: { type: 'integer' },
     website_id: { type: 'integer' },
     disable_auto_group_change: { type: 'boolean' },
     group_id: { type: 'integer' },
     updated_at: { type: 'date' },
     created_at: { type: 'date' },
     created_in: { type: 'string' },
     password_hash: { type: 'string' },
     id: 
      { type: 'integer',
        autoIncrement: true,
        defaultsTo: 'AUTO_INCREMENT',
        primaryKey: true,
        unique: true },
     createdAt: { type: 'datetime', default: 'NOW' },
     updatedAt: { type: 'datetime', default: 'NOW' } },
  identity: 'customer' }
sails-magento: describe: function(customer, function afterDescribe(err, attrs) {
      if(err) return cb(err);

      // if it doesn't go ahead and add it and get out
      if(!attrs) return self.define(cb);

      // Otherwise, if it *DOES* exist, we'll try and guess what changes need to be made
      self.alter(function(err) {
        if(err) return cb(err);
        cb();
      });
    })
sails-magento: describe: function(customer, function (err, existingAttributes) {
      if(err) return cb(err);
      if(existingAttributes) return cb(new Error("Trying to define a collection (" + self.collection + ") which already exists."));

      self.adapter.define(self.collection, self.query._schema.schema, cb);
    })
sails-magento: define: function(customer, [object Object], function (err) {
      if(err) return cb(err);
      cb();
    })
sails-magento: registerCollection: function(collection, cb)

cb: 
function () {
            if (called) throw new Error("Callback was already called.");
            called = true;
            fn.apply(root, arguments);
        }

collection: 
{ syncable: true,
  defaults: { port: 6060, migrate: 'alter', adapter: 'sails-magento' },
  registerCollection: [Function],
  teardown: [Function],
  define: [Function],
  describe: [Function],
  drop: [Function],
  alter: [Function],
  create: [Function],
  findOne: [Function],
  findAll: [Function],
  find: [Function],
  update: [Function],
  destroy: [Function],
  stream: [Function],
  product_items: [Function],
  store_tree: [Function],
  config: { port: 6060, migrate: 'alter', adapter: 'sails-magento' },
  definition: 
   { name: { type: 'string' },
     sku: { type: 'string' },
     short_description: { type: 'text' },
     description: { type: 'text' },
     fittinginfo: { type: 'text' },
     old_id: { type: 'string' },
     applications: { type: 'text' },
     metrics: { type: 'text' },
     weight: { type: 'string' },
     weight_rounded: { type: 'string' },
     news_from_date: { type: 'date' },
     url_path: { type: 'string' },
     news_to_date: { type: 'date' },
     status: { type: 'string' },
     category_ids: { type: 'array' },
     url_key: { type: 'string' },
     required_options: { type: 'string' },
     visibility: { type: 'string' },
     country_of_manufacture: { type: 'string' },
     has_options: { type: 'string' },
     supplier_internal: { type: 'string' },
     image_label: { type: 'string' },
     delivery_time: { type: 'string' },
     small_image_label: { type: 'string' },
     manufacturer: { type: 'string' },
     thumbnail_label: { type: 'string' },
     quality: { type: 'string' },
     created_at: { type: 'string' },
     updated_at: { type: 'string' },
     price_type: { type: 'string' },
     sku_type: { type: 'string' },
     weight_type: { type: 'string' },
     shipment_type: { type: 'string' },
     links_purchased_separately: { type: 'string' },
     samples_title: { type: 'string' },
     links_title: { type: 'string' },
     links_exist: { type: 'string' },
     price: { type: 'string' },
     group_price: { type: 'string' },
     special_price: { type: 'string' },
     special_from_date: { type: 'date' },
     special_to_date: { type: 'date' },
     cost: { type: 'string' },
     tier_price: { type: 'string' },
     minimal_price: { type: 'string' },
     msrp_enabled: { type: 'string' },
     msrp_display_actual_price_type: { type: 'string' },
     msrp: { type: 'string' },
     enable_googlecheckout: { type: 'string' },
     tax_class_id: { type: 'string' },
     price_view: { type: 'string' },
     cost_price: { type: 'string' },
     vwheritage_price_pound: { type: 'string' },
     recommend_price: { type: 'string' },
     recommend_price_netto: { type: 'string' },
     meta_title: { type: 'string' },
     meta_keyword: { type: 'text' },
     meta_description: { type: 'text' },
     meta_autogenerate: { type: 'string' },
     is_recurring: { type: 'string' },
     recurring_profile: { type: 'string' },
     custom_design: { type: 'string' },
     custom_design_from: { type: 'date' },
     custom_design_to: { type: 'date' },
     custom_layout_update: { type: 'text' },
     page_layout: { type: 'string' },
     options_container: { type: 'string' },
     gift_message_available: { type: 'string' },
     package_id: { type: 'string' },
     superstageshow: { type: 'boolean' },
     stock_vwheritage_qty: { type: 'integer' },
     stock_vwheritage_messagecode: { type: 'string' },
     stock_vwheritage_dueweeks: { type: 'string' },
     stock_strichweg_qty: { type: 'integer' },
     stock_strichweg_range: { type: 'string' },
     stock_strichweg_row: { type: 'string' },
     special_order: { type: 'boolean' },
     cloth_sizes: { type: 'string' },
     core_engine: { type: 'string' },
     size_clothes: { type: 'string' },
     colour_narrowweave: { type: 'string' },
     benzinhahn: { type: 'string' },
     carpet_floopan: { type: 'string' },
     carpet_footrest: { type: 'string' },
     carpet_mod_sill: { type: 'string' },
     stock_data: { type: 'json' },
     product_id: { type: 'integer', index: true },
     id: { type: 'integer', index: true },
     createdAt: { type: 'datetime', default: 'NOW' },
     updatedAt: { type: 'datetime', default: 'NOW' } },
  identity: 'product' }
sails-magento: describe: function(product, function afterDescribe(err, attrs) {
      if(err) return cb(err);

      // if it doesn't go ahead and add it and get out
      if(!attrs) return self.define(cb);

      // Otherwise, if it *DOES* exist, we'll try and guess what changes need to be made
      self.alter(function(err) {
        if(err) return cb(err);
        cb();
      });
    })
sails-magento: describe: function(product, function (err, existingAttributes) {
      if(err) return cb(err);
      if(existingAttributes) return cb(new Error("Trying to define a collection (" + self.collection + ") which already exists."));

      self.adapter.define(self.collection, self.query._schema.schema, cb);
    })
sails-magento: define: function(product, [object Object], function (err) {
      if(err) return cb(err);
      cb();
    })
sails-magento: registerCollection: function(collection, cb)

cb: 
function () {
            if (called) throw new Error("Callback was already called.");
            called = true;
            fn.apply(root, arguments);
        }

collection: 
{ syncable: true,
  defaults: { port: 6060, migrate: 'alter', adapter: 'sails-magento' },
  registerCollection: [Function],
  teardown: [Function],
  define: [Function],
  describe: [Function],
  drop: [Function],
  alter: [Function],
  create: [Function],
  findOne: [Function],
  findAll: [Function],
  find: [Function],
  update: [Function],
  destroy: [Function],
  stream: [Function],
  product_items: [Function],
  store_tree: [Function],
  config: { port: 6060, migrate: 'alter', adapter: 'sails-magento' },
  definition: 
   { id: { type: 'integer', unique: true, index: true },
     code: { type: 'string' },
     website_id: { type: 'integer' },
     group_id: { type: 'integer' },
     name: { type: 'string' },
     sort_order: { type: 'integer' },
     is_active: { type: 'boolean' },
     createdAt: { type: 'datetime', default: 'NOW' },
     updatedAt: { type: 'datetime', default: 'NOW' } },
  identity: 'store' }
sails-magento: describe: function(store, function afterDescribe(err, attrs) {
      if(err) return cb(err);

      // if it doesn't go ahead and add it and get out
      if(!attrs) return self.define(cb);

      // Otherwise, if it *DOES* exist, we'll try and guess what changes need to be made
      self.alter(function(err) {
        if(err) return cb(err);
        cb();
      });
    })
sails-magento: describe: function(store, function (err, existingAttributes) {
      if(err) return cb(err);
      if(existingAttributes) return cb(new Error("Trying to define a collection (" + self.collection + ") which already exists."));

      self.adapter.define(self.collection, self.query._schema.schema, cb);
    })
sails-magento: define: function(store, [object Object], function (err) {
      if(err) return cb(err);
      cb();
    })
[32minfo[39m: { childProcesses: 
   [ { domain: null,
       _events: [Object],
       _maxListeners: 10,
       _closesNeeded: 4,
       _closesGot: 0,
       connected: true,
       signalCode: null,
       exitCode: null,
       killed: false,
       _handle: [Object],
       pid: 5087,
       stdin: [Object],
       stdout: [Object],
       stderr: [Object],
       stdio: [Object],
       _channel: [Object],
       _handleQueue: null,
       send: [Function],
       disconnect: [Function] } ],
  util: 
   { format: [Function],
     deprecate: [Function],
     print: [Function],
     puts: [Function],
     debug: [Function],
     error: [Function],
     inspect: { [Function: inspect] colors: [Object], styles: [Object] },
     isArray: [Function: isArray],
     isRegExp: [Function: isRegExp],
     isDate: [Function: isDate],
     isError: [Function],
     p: [Function: deprecated],
     log: [Function],
     exec: [Function: deprecated],
     pump: [Function: deprecated],
     inherits: [Function],
     _extend: [Function],
     support: { fastBind: false },
     templateSettings: 
      { escape: /<%-([\s\S]+?)%>/g,
        evaluate: /<%([\s\S]+?)%>/g,
        interpolate: /<%=([\s\S]+?)%>/g,
        variable: '',
        imports: [Object] },
     after: [Function: after],
     assign: [Function],
     at: [Function: at],
     bind: [Function: bind],
     bindAll: [Function: bindAll],
     bindKey: [Function: bindKey],
     compact: [Function: compact],
     compose: [Function: compose],
     countBy: [Function: countBy],
     createCallback: [Function: createCallback],
     debounce: [Function: debounce],
     defaults: [Function],
     defer: [Function: bound],
     delay: [Function: delay],
     difference: [Function: difference],
     filter: [Function: filter],
     flatten: [Function: flatten],
     forEach: [Function: forEach],
     forIn: [Function],
     forOwn: [Function],
     functions: [Function: functions],
     groupBy: [Function: groupBy],
     initial: [Function: initial],
     intersection: [Function: intersection],
     invert: [Function: invert],
     invoke: [Function: invoke],
     keys: [Function],
     map: [Function: map],
     max: [Function: max],
     memoize: [Function: memoize],
     merge: [Function: merge],
     min: [Function: min],
     omit: [Function: omit],
     once: [Function: once],
     pairs: [Function: pairs],
     partial: [Function: partial],
     partialRight: [Function: partialRight],
     pick: [Function: pick],
     pluck: [Function: pluck],
     range: [Function: range],
     reject: [Function: reject],
     rest: [Function: rest],
     shuffle: [Function: shuffle],
     sortBy: [Function: sortBy],
     tap: [Function: tap],
     throttle: [Function: throttle],
     times: [Function: times],
     toArray: [Function: toArray],
     union: [Function: union],
     uniq: [Function: uniq],
     unzip: [Function: unzip],
     values: [Function: values],
     where: [Function: filter],
     without: [Function: without],
     wrap: [Function: wrap],
     zip: [Function: zip],
     zipObject: [Function: zipObject],
     collect: [Function: map],
     drop: [Function: rest],
     each: [Function: forEach],
     extend: [Function],
     methods: [Function: functions],
     object: [Function: zipObject],
     select: [Function: filter],
     tail: [Function: rest],
     unique: [Function: uniq],
     clone: [Function: clone],
     cloneDeep: [Function: cloneDeep],
     contains: [Function: contains],
     escape: [Function: escape],
     every: [Function: every],
     find: [Function: find],
     findIndex: [Function: findIndex],
     findKey: [Function: findKey],
     has: [Function: has],
     identity: [Function: identity],
     indexOf: [Function: indexOf],
     isArguments: [Function: isArguments],
     isBoolean: [Function: isBoolean],
     isElement: [Function: isElement],
     isEmpty: [Function: isEmpty],
     isEqual: [Function: isEqual],
     isFinite: [Function: isFinite],
     isFunction: [Function: isFunction],
     isNaN: [Function: isNaN],
     isNull: [Function: isNull],
     isNumber: [Function: isNumber],
     isObject: [Function: isObject],
     isPlainObject: [Function],
     isString: [Function: isString],
     isUndefined: [Function: isUndefined],
     lastIndexOf: [Function: lastIndexOf],
     mixin: [Function: mixin],
     noConflict: [Function: noConflict],
     parseInt: [Function],
     random: [Function: random],
     reduce: [Function: reduce],
     reduceRight: [Function: reduceRight],
     result: [Function: result],
     runInContext: [Function: runInContext],
     size: [Function: size],
     some: [Function: some],
     sortedIndex: [Function: sortedIndex],
     template: [Function: template],
     unescape: [Function: unescape],
     uniqueId: [Function: uniqueId],
     all: [Function: every],
     any: [Function: some],
     detect: [Function: find],
     foldl: [Function: reduce],
     foldr: [Function: reduceRight],
     include: [Function: contains],
     inject: [Function: reduce],
     first: [Function: first],
     last: [Function: last],
     take: [Function: first],
     head: [Function: first],
     VERSION: '1.2.1',
     _: 
      { [Function: lodash]
        support: [Object],
        templateSettings: [Object],
        after: [Function: after],
        assign: [Function],
        at: [Function: at],
        bind: [Function: bind],
        bindAll: [Function: bindAll],
        bindKey: [Function: bindKey],
        compact: [Function: compact],
        compose: [Function: compose],
        countBy: [Function: countBy],
        createCallback: [Function: createCallback],
        debounce: [Function: debounce],
        defaults: [Function],
        defer: [Function: bound],
        delay: [Function: delay],
        difference: [Function: difference],
        filter: [Function: filter],
        flatten: [Function: flatten],
        forEach: [Function: forEach],
        forIn: [Function],
        forOwn: [Function],
        functions: [Function: functions],
        groupBy: [Function: groupBy],
        initial: [Function: initial],
        intersection: [Function: intersection],
        invert: [Function: invert],
        invoke: [Function: invoke],
        keys: [Function],
        map: [Function: map],
        max: [Function: max],
        memoize: [Function: memoize],
        merge: [Function: merge],
        min: [Function: min],
        omit: [Function: omit],
        once: [Function: once],
        pairs: [Function: pairs],
        partial: [Function: partial],
        partialRight: [Function: partialRight],
        pick: [Function: pick],
        pluck: [Function: pluck],
        range: [Function: range],
        reject: [Function: reject],
        rest: [Function: rest],
        shuffle: [Function: shuffle],
        sortBy: [Function: sortBy],
        tap: [Function: tap],
        throttle: [Function: throttle],
        times: [Function: times],
        toArray: [Function: toArray],
        union: [Function: union],
        uniq: [Function: uniq],
        unzip: [Function: unzip],
        values: [Function: values],
        where: [Function: filter],
        without: [Function: without],
        wrap: [Function: wrap],
        zip: [Function: zip],
        zipObject: [Function: zipObject],
        collect: [Function: map],
        drop: [Function: rest],
        each: [Function: forEach],
        extend: [Function],
        methods: [Function: functions],
        object: [Function: zipObject],
        select: [Function: filter],
        tail: [Function: rest],
        unique: [Function: uniq],
        clone: [Function: clone],
        cloneDeep: [Function: cloneDeep],
        contains: [Function: contains],
        escape: [Function: escape],
        every: [Function: every],
        find: [Function: find],
        findIndex: [Function: findIndex],
        findKey: [Function: findKey],
        has: [Function: has],
        identity: [Function: identity],
        indexOf: [Function: indexOf],
        isArguments: [Function: isArguments],
        isArray: [Function: isArray],
        isBoolean: [Function: isBoolean],
        isDate: [Function: isDate],
        isElement: [Function: isElement],
        isEmpty: [Function: isEmpty],
        isEqual: [Function: isEqual],
        isFinite: [Function: isFinite],
        isFunction: [Function: isFunction],
        isNaN: [Function: isNaN],
        isNull: [Function: isNull],
        isNumber: [Function: isNumber],
        isObject: [Function: isObject],
        isPlainObject: [Function],
        isRegExp: [Function: isRegExp],
        isString: [Function: isString],
        isUndefined: [Function: isUndefined],
        lastIndexOf: [Function: lastIndexOf],
        mixin: [Function: mixin],
        noConflict: [Function: noConflict],
        parseInt: [Function],
        random: [Function: random],
        reduce: [Function: reduce],
        reduceRight: [Function: reduceRight],
        result: [Function: result],
        runInContext: [Function: runInContext],
        size: [Function: size],
        some: [Function: some],
        sortedIndex: [Function: sortedIndex],
        template: [Function: template],
        unescape: [Function: unescape],
        uniqueId: [Function: uniqueId],
        all: [Function: every],
        any: [Function: some],
        detect: [Function: find],
        foldl: [Function: reduce],
        foldr: [Function: reduceRight],
        include: [Function: contains],
        inject: [Function: reduce],
        first: [Function: first],
        last: [Function: last],
        take: [Function: first],
        head: [Function: first],
        VERSION: '1.2.1',
        _: [Circular],
        str: [Object] },
     str: 
      { VERSION: '2.3.0',
        isBlank: [Function],
        stripTags: [Function],
        capitalize: [Function],
        chop: [Function],
        clean: [Function],
        count: [Function],
        chars: [Function],
        swapCase: [Function],
        escapeHTML: [Function],
        unescapeHTML: [Function],
        escapeRegExp: [Function],
        splice: [Function],
        insert: [Function],
        include: [Function],
        join: [Function],
        lines: [Function],
        reverse: [Function],
        startsWith: [Function],
        endsWith: [Function],
        succ: [Function],
        titleize: [Function],
        camelize: [Function],
        underscored: [Function],
        dasherize: [Function],
        classify: [Function],
        humanize: [Function],
        trim: [Function],
        ltrim: [Function],
        rtrim: [Function],
        truncate: [Function],
        prune: [Function],
        words: [Function],
        pad: [Function],
        lpad: [Function],
        rpad: [Function],
        lrpad: [Function],
        sprintf: [Object],
        vsprintf: [Function],
        toNumber: [Function],
        numberFormat: [Function],
        strRight: [Function],
        strRightBack: [Function],
        strLeft: [Function],
        strLeftBack: [Function],
        toSentence: [Function],
        toSentenceSerial: [Function],
        slugify: [Function],
        surround: [Function],
        quote: [Function],
        exports: [Function],
        repeat: [Function],
        levenshtein: [Function],
        strip: [Function],
        lstrip: [Function],
        rstrip: [Function],
        center: [Function],
        rjust: [Function],
        ljust: [Function],
        contains: [Function],
        q: [Function] },
     normalizeControllerId: [Function: normalizeControllerId],
     normalizeId: [Function: normalizeId],
     normalizeErrors: [Function: normalizeErrors],
     deepMerge: [Function: deepMerge],
     detectVerb: [Function],
     parsePath: [Function],
     parseStringRoute: [Function],
     pluralize: [Function: pluralize],
     safeToEval: [Function],
     isJSON: [Function],
     isJSONish: [Function],
     unprefix: [Function: cbok],
     preface: [Function: preface],
     isDictionary: [Function: isDictionary],
     optional: [Function: wrapOptionalCallback],
     isSameOrigin: [Function: isSameOrigin],
     shout: [Function],
     fileExtension: [Function],
     th: [Function],
     objMap: [Function],
     objFilter: [Function],
     objReject: [Function],
     objInvoke: [Function],
     getParamNames: [Function] },
  load: [Function: bound],
  initialize: [Function: bound],
  lift: [Function: bound],
  lower: [Function: bound],
  build: [Function: bound],
  addListener: [Function: bound],
  constructor: [Function: bound],
  emit: [Function: bound],
  listeners: [Function: bound],
  on: [Function: bound],
  once: [Function: bound],
  removeAllListeners: [Function: bound],
  removeListener: [Function: bound],
  setMaxListeners: [Function: bound],
  modules: 
   { required: [Function],
     optional: [Function],
     exists: [Function],
     aggregate: [Function] },
  config: 
   { '400': [Function: badRequest],
     '403': [Function: badRequest],
     '404': [Function: pageNotFound],
     '500': [Function: serverErrorOccurred],
     _: [ 'lift' ],
     '$0': 'sails',
     appPath: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs',
     paths: 
      { config: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs/config',
        tmp: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs/.tmp',
        controllers: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs/api/controllers',
        models: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs/api/models',
        services: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs/api/services',
        policies: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs/api/policies',
        adapters: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs/api/adapters',
        hooks: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs/api/hooks',
        public: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs/.tmp/public',
        templates: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs/assets/templates',
        dependencies: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs/dependencies',
        views: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs/views',
        layout: '/media/sf_jumplink/Projekte/git/magento-sails-angularjs/views/layout.ejs' },
     port: 1337,
     host: 'localhost',
     environment: 'development',
     globals: 
      { _: true,
        async: true,
        sails: true,
        services: true,
        adapters: true,
        models: true },
     hooks: 
      { request: [Function],
        orm: [Function],
        views: [Function],
        controllers: [Function],
        sockets: [Function],
        pubsub: [Function],
        policies: [Function],
        csrf: [Function],
        cors: [Function],
        i18n: [Function],
        http: [Function] },
     controllers: { blueprints: [Object], jsonp: false, expectIntegerId: false },
     views: { engine: [Object], layout: 'layout.jade' },
     i18n: 
      { locales: [Object],
        defaultLocale: 'en',
        localesDirectory: '/config/locales' },
     csrf: false,
     cors: 
      { origin: '*',
        credentials: true,
        methods: 'GET, POST, PUT, DELETE, OPTIONS, HEAD',
        headers: 'content-type',
        allRoutes: false },
     fileUpload: { maxMB: 10 },
     model: { connections: 'mongo' },
     connections: 
      { devDb: [Object],
        disk: [Object],
        mongo: [Object],
        'magento-dnode': [Object],
        vwheritage: [Object] },
     cache: { maxAge: 31557600000 },
     session: 
      { adapter: 'memory',
        key: 'sails.sid',
        secret: '352da9e97510b4e8a5e44291e6d9d73a',
        store: [Object] },
     log: 
      { level: 'info',
        maxSize: 10000000,
        maxFiles: 10,
        json: false,
        colorize: true },
     appName: 'Sails',
     policies: 
      { '*': true,
        IndexController: [Object],
        SessionController: [Object],
        ProductCache: [Object],
        VWHeritageProduct: [Object],
        VWHeritageImage: [Object] },
     routes: { '/': [Object], '/user/create': [Function] },
     express: 
      { serverOptions: false,
        customMiddleware: false,
        bodyParser: [Function: bodyParser],
        retryBodyParserWithJSON: true,
        cookieParser: [Function: cookieParser],
        methodOverride: [Function: methodOverride] },
     sockets: 
      { adapter: 'memory',
        transports: [Object],
        origins: '*:*',
        heartbeats: true,
        'close timeout': 60,
        'heartbeat timeout': 60,
        'heartbeat interval': 25,
        'polling duration': 20,
        'flash policy server': false,
        'flash policy port': 10843,
        'destroy buffer size': '10E7',
        'destroy upgrade': true,
        'browser client': true,
        'browser client cache': true,
        'browser client minification': false,
        'browser client etag': false,
        'browser client expires': 315360000,
        'browser client gzip': false,
        'browser client handler': false,
        'match origin protocol': false,
        authorization: true,
        onConnect: [Function],
        store: undefined,
        logger: undefined,
        'log level': undefined,
        'log colors': undefined,
        static: undefined,
        resource: '/socket.io',
        onDisconnect: [Function] },
     ssl: {},
     adapters: 
      { default: 'mongo',
        disk: [Object],
        mongo: [Object],
        'magento-dnode': [Object],
        vwheritage: [Object] },
     bootstrap: [Function],
     dnode: { port: 7070 },
     vwheritage: 
      { api_url: 'https://api.vwheritage.com/index.cfm',
        image_info_url: '/images',
        image_info_query: 'L_IITEMID',
        product_list_url: '/partnums',
        product_info_url: '/parts',
        product_info_query: 'l_sPartCode',
        sToken: 'DSAFUIHNASJDF_ASDHGFFF-123FG' } },
  log: 
   { [Function]
     log: [Function],
     debug: [Function],
     verbose: [Function],
     info: [Function],
     warn: [Function],
     error: [Function],
     ship: [Function] },
  version: '0.9.7',
  majorVersion: '0',
  minorVersion: '9',
  dependencies: 
   { waterline: '~0.9.4',
     'sails-disk': '~0.9.0',
     express: '3.4.0',
     'socket.io': '0.9.14',
     'connect-redis': '1.4.5',
     'connect-mongo': '0.3.2',
     async: '0.2.9',
     winston: '0.7.1',
     i18n: '0.4.1',
     optimist: '0.3.4',
     'fs-extra': '0.5.0',
     lodash: '1.2.1',
     glob: '3.1.14',
     'underscore.string': '2.3.0',
     'include-all': '0.1.2',
     inflection: '1.2.5',
     'node-uuid': '1.4.0',
     grunt: '0.4.1',
     'grunt-cli': '0.1.9',
     'grunt-contrib-copy': '0.4.1',
     'grunt-contrib-clean': '0.4.1',
     'grunt-contrib-concat': '0.3.0',
     'grunt-sails-linker': 'git://github.com/Zolmeister/grunt-sails-linker.git',
     'grunt-contrib-jst': '0.5.0',
     'grunt-contrib-watch': '0.4.4',
     'grunt-contrib-uglify': '0.2.2',
     'grunt-contrib-cssmin': '0.6.1',
     'grunt-contrib-less': '0.5.2',
     'grunt-contrib-coffee': '~0.7.0',
     ejs: '0.8.4',
     'ejs-locals': '1.0.2',
     'connect-flash': '0.1.1',
     pluralize: '0.0.5',
     'coffee-script': '1.6.2' },
  defaultAdapterModule: 'sails-disk',
  session: 
   { generateSecret: [Function],
     initialize: [Function],
     get: [Function],
     set: [Function],
     fromSocket: [Function] },
  express: 
   { app: 
      { [Function: app]
        use: [Function],
        handle: [Function],
        listen: [Function],
        setMaxListeners: [Function],
        emit: [Function],
        addListener: [Function],
        on: [Function],
        once: [Function],
        removeListener: [Function],
        removeAllListeners: [Function],
        listeners: [Function],
        route: '/',
        stack: [Object],
        init: [Function],
        defaultConfiguration: [Function],
        engine: [Function],
        param: [Function],
        set: [Function],
        path: [Function],
        enabled: [Function],
        disabled: [Function],
        enable: [Function],
        disable: [Function],
        configure: [Function],
        get: [Function],
        post: [Function],
        put: [Function],
        head: [Function],
        delete: [Function],
        options: [Function],
        trace: [Function],
        copy: [Function],
        lock: [Function],
        mkcol: [Function],
        move: [Function],
        propfind: [Function],
        proppatch: [Function],
        unlock: [Function],
        report: [Function],
        mkactivity: [Function],
        checkout: [Function],
        merge: [Function],
        'm-search': [Function],
        notify: [Function],
        subscribe: [Function],
        unsubscribe: [Function],
        patch: [Function],
        all: [Function],
        del: [Function],
        render: [Function],
        request: [Object],
        response: [Object],
        cache: {},
        settings: [Object],
        engines: [Object],
        _events: [Object],
        _router: [Object],
        routes: [Object],
        router: [Getter],
        locals: [Object],
        _usedRouter: true },
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 0,
        connections: [Getter/Setter],
        _handle: null,
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000 } },
  http: 
   { app: 
      { [Function: app]
        use: [Function],
        handle: [Function],
        listen: [Function],
        setMaxListeners: [Function],
        emit: [Function],
        addListener: [Function],
        on: [Function],
        once: [Function],
        removeListener: [Function],
        removeAllListeners: [Function],
        listeners: [Function],
        route: '/',
        stack: [Object],
        init: [Function],
        defaultConfiguration: [Function],
        engine: [Function],
        param: [Function],
        set: [Function],
        path: [Function],
        enabled: [Function],
        disabled: [Function],
        enable: [Function],
        disable: [Function],
        configure: [Function],
        get: [Function],
        post: [Function],
        put: [Function],
        head: [Function],
        delete: [Function],
        options: [Function],
        trace: [Function],
        copy: [Function],
        lock: [Function],
        mkcol: [Function],
        move: [Function],
        propfind: [Function],
        proppatch: [Function],
        unlock: [Function],
        report: [Function],
        mkactivity: [Function],
        checkout: [Function],
        merge: [Function],
        'm-search': [Function],
        notify: [Function],
        subscribe: [Function],
        unsubscribe: [Function],
        patch: [Function],
        all: [Function],
        del: [Function],
        render: [Function],
        request: [Object],
        response: [Object],
        cache: {},
        settings: [Object],
        engines: [Object],
        _events: [Object],
        _router: [Object],
        routes: [Object],
        router: [Getter],
        locals: [Object],
        _usedRouter: true },
     server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 0,
        connections: [Getter/Setter],
        _handle: null,
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000 } },
  hooks: 
   { request: 
      { config: [Object],
        middleware: {},
        routes: [Object],
        ready: true,
        initialize: [Function: bound],
        load: [Function] },
     orm: 
      { config: [Object],
        middleware: {},
        routes: [Object],
        ready: true,
        initialize: [Function: bound],
        normalizeModelDef: [Function: bound],
        startORM: [Function: bound],
        exposeModels: [Function: bound],
        load: [Function] },
     views: 
      { config: [Object],
        middleware: [Object],
        routes: [Object],
        ready: true,
        initialize: [Function: bound],
        implementEjsLayouts: [Function: bound],
        detectAndPrepareViews: [Function: bound],
        glob: [Function: bound],
        _createMiddleware: [Function: bound],
        _serveView: [Function: bound],
        load: [Function] },
     controllers: 
      { config: [Object],
        middleware: [Object],
        routes: [Object],
        ready: true,
        initialize: [Function: bound],
        bindActionRoutes: [Function: bound],
        bindCRUDRoutes: [Function: bound],
        loadMiddleware: [Function: bound],
        load: [Function] },
     sockets: 
      { config: [Object],
        middleware: {},
        routes: [Object],
        ready: true,
        initialize: [Function: bound],
        load: [Function] },
     pubsub: 
      { config: [Object],
        middleware: {},
        routes: [Object],
        ready: true,
        initialize: [Function: bound],
        load: [Function] },
     policies: 
      { config: [Object],
        middleware: [Object],
        routes: [Object],
        ready: true,
        initialize: [Function: bound],
        loadMiddleware: [Function: bound],
        bindPolicies: [Function: bound],
        buildPolicyMap: [Function: bound],
        normalizePolicy: [Function: bound],
        bindDirectlyToRoute: [Function: bound],
        lookupFn: [Function: bound],
        load: [Function],
        mapping: [Object] },
     csrf: 
      { config: [Object],
        middleware: {},
        routes: [Object],
        ready: true,
        load: [Function] },
     cors: 
      { config: [Object],
        middleware: {},
        routes: [Object],
        ready: true,
        initialize: [Function: bound],
        load: [Function] },
     i18n: 
      { config: [Object],
        middleware: {},
        routes: [Object],
        ready: true,
        initialize: [Function: bound],
        load: [Function] },
     http: 
      { config: [Object],
        middleware: {},
        routes: [Object],
        ready: true,
        initialize: [Function: bound],
        load: [Function] } },
  _mixinLocals: [Function: _mixinLocals],
  _mixinServerMetadata: [Function: _mixinServerMetadata],
  _mixinReqQualifiers: [Function: _mixinReqQualifiers],
  _mixinResView: [Function: _addResViewMethod],
  models: 
   { attributeset: 
      { identity: 'attributeset',
        adapter: [Object],
        attributes: [Object],
        _cast: [Object],
        _schema: [Object],
        _validator: [Object],
        _callbacks: [Object],
        _instanceMethods: {},
        autoPK: true,
        autoCreatedAt: true,
        autoUpdatedAt: true,
        hasSchema: true,
        migrate: 'alter',
        _model: [Object],
        _transformer: [Object],
        _tableName: 'attributeset',
        _adapterDefs: [Object],
        _adapter: [Object],
        syncable: [Function],
        defaults: [Function],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        product_items: [Function],
        store_tree: [Function],
        config: [Function],
        findOneById: [Function: dynamicMethod],
        findOneByIdIn: [Function: dynamicMethod],
        findOneByIdLike: [Function: dynamicMethod],
        findById: [Function: dynamicMethod],
        findByIdIn: [Function: dynamicMethod],
        findByIdLike: [Function: dynamicMethod],
        countById: [Function: dynamicMethod],
        countByIdIn: [Function: dynamicMethod],
        countByIdLike: [Function: dynamicMethod],
        idStartsWith: [Function: dynamicMethod],
        idContains: [Function: dynamicMethod],
        idEndsWith: [Function: dynamicMethod],
        findOneByName: [Function: dynamicMethod],
        findOneByNameIn: [Function: dynamicMethod],
        findOneByNameLike: [Function: dynamicMethod],
        findByName: [Function: dynamicMethod],
        findByNameIn: [Function: dynamicMethod],
        findByNameLike: [Function: dynamicMethod],
        countByName: [Function: dynamicMethod],
        countByNameIn: [Function: dynamicMethod],
        countByNameLike: [Function: dynamicMethod],
        nameStartsWith: [Function: dynamicMethod],
        nameContains: [Function: dynamicMethod],
        nameEndsWith: [Function: dynamicMethod],
        findOneByAttributes: [Function: dynamicMethod],
        findOneByAttributesIn: [Function: dynamicMethod],
        findOneByAttributesLike: [Function: dynamicMethod],
        findByAttributes: [Function: dynamicMethod],
        findByAttributesIn: [Function: dynamicMethod],
        findByAttributesLike: [Function: dynamicMethod],
        countByAttributes: [Function: dynamicMethod],
        countByAttributesIn: [Function: dynamicMethod],
        countByAttributesLike: [Function: dynamicMethod],
        attributesStartsWith: [Function: dynamicMethod],
        attributesContains: [Function: dynamicMethod],
        attributesEndsWith: [Function: dynamicMethod],
        findOneByCreatedAt: [Function: dynamicMethod],
        findOneByCreatedAtIn: [Function: dynamicMethod],
        findOneByCreatedAtLike: [Function: dynamicMethod],
        findByCreatedAt: [Function: dynamicMethod],
        findByCreatedAtIn: [Function: dynamicMethod],
        findByCreatedAtLike: [Function: dynamicMethod],
        countByCreatedAt: [Function: dynamicMethod],
        countByCreatedAtIn: [Function: dynamicMethod],
        countByCreatedAtLike: [Function: dynamicMethod],
        createdAtStartsWith: [Function: dynamicMethod],
        createdAtContains: [Function: dynamicMethod],
        createdAtEndsWith: [Function: dynamicMethod],
        findOneByUpdatedAt: [Function: dynamicMethod],
        findOneByUpdatedAtIn: [Function: dynamicMethod],
        findOneByUpdatedAtLike: [Function: dynamicMethod],
        findByUpdatedAt: [Function: dynamicMethod],
        findByUpdatedAtIn: [Function: dynamicMethod],
        findByUpdatedAtLike: [Function: dynamicMethod],
        countByUpdatedAt: [Function: dynamicMethod],
        countByUpdatedAtIn: [Function: dynamicMethod],
        countByUpdatedAtLike: [Function: dynamicMethod],
        updatedAtStartsWith: [Function: dynamicMethod],
        updatedAtContains: [Function: dynamicMethod],
        updatedAtEndsWith: [Function: dynamicMethod] },
     attributesetcache: 
      { identity: 'attributesetcache',
        adapter: [Object],
        attributes: [Object],
        _cast: [Object],
        _schema: [Object],
        _validator: [Object],
        _callbacks: [Object],
        _instanceMethods: {},
        autoPK: true,
        autoCreatedAt: true,
        autoUpdatedAt: true,
        hasSchema: false,
        migrate: 'alter',
        _model: [Object],
        _transformer: [Object],
        _tableName: 'attributesetcache',
        _adapterDefs: [Object],
        _adapter: [Object],
        syncable: [Function],
        defaults: [Function],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        native: [Function],
        config: [Function],
        findOneById: [Function: dynamicMethod],
        findOneByIdIn: [Function: dynamicMethod],
        findOneByIdLike: [Function: dynamicMethod],
        findById: [Function: dynamicMethod],
        findByIdIn: [Function: dynamicMethod],
        findByIdLike: [Function: dynamicMethod],
        countById: [Function: dynamicMethod],
        countByIdIn: [Function: dynamicMethod],
        countByIdLike: [Function: dynamicMethod],
        idStartsWith: [Function: dynamicMethod],
        idContains: [Function: dynamicMethod],
        idEndsWith: [Function: dynamicMethod],
        findOneByName: [Function: dynamicMethod],
        findOneByNameIn: [Function: dynamicMethod],
        findOneByNameLike: [Function: dynamicMethod],
        findByName: [Function: dynamicMethod],
        findByNameIn: [Function: dynamicMethod],
        findByNameLike: [Function: dynamicMethod],
        countByName: [Function: dynamicMethod],
        countByNameIn: [Function: dynamicMethod],
        countByNameLike: [Function: dynamicMethod],
        nameStartsWith: [Function: dynamicMethod],
        nameContains: [Function: dynamicMethod],
        nameEndsWith: [Function: dynamicMethod],
        findOneByAttributes: [Function: dynamicMethod],
        findOneByAttributesIn: [Function: dynamicMethod],
        findOneByAttributesLike: [Function: dynamicMethod],
        findByAttributes: [Function: dynamicMethod],
        findByAttributesIn: [Function: dynamicMethod],
        findByAttributesLike: [Function: dynamicMethod],
        countByAttributes: [Function: dynamicMethod],
        countByAttributesIn: [Function: dynamicMethod],
        countByAttributesLike: [Function: dynamicMethod],
        attributesStartsWith: [Function: dynamicMethod],
        attributesContains: [Function: dynamicMethod],
        attributesEndsWith: [Function: dynamicMethod],
        findOneByCreatedAt: [Function: dynamicMethod],
        findOneByCreatedAtIn: [Function: dynamicMethod],
        findOneByCreatedAtLike: [Function: dynamicMethod],
        findByCreatedAt: [Function: dynamicMethod],
        findByCreatedAtIn: [Function: dynamicMethod],
        findByCreatedAtLike: [Function: dynamicMethod],
        countByCreatedAt: [Function: dynamicMethod],
        countByCreatedAtIn: [Function: dynamicMethod],
        countByCreatedAtLike: [Function: dynamicMethod],
        createdAtStartsWith: [Function: dynamicMethod],
        createdAtContains: [Function: dynamicMethod],
        createdAtEndsWith: [Function: dynamicMethod],
        findOneByUpdatedAt: [Function: dynamicMethod],
        findOneByUpdatedAtIn: [Function: dynamicMethod],
        findOneByUpdatedAtLike: [Function: dynamicMethod],
        findByUpdatedAt: [Function: dynamicMethod],
        findByUpdatedAtIn: [Function: dynamicMethod],
        findByUpdatedAtLike: [Function: dynamicMethod],
        countByUpdatedAt: [Function: dynamicMethod],
        countByUpdatedAtIn: [Function: dynamicMethod],
        countByUpdatedAtLike: [Function: dynamicMethod],
        updatedAtStartsWith: [Function: dynamicMethod],
        updatedAtContains: [Function: dynamicMethod],
        updatedAtEndsWith: [Function: dynamicMethod] },
     category: 
      { identity: 'category',
        adapter: [Object],
        attributes: {},
        _cast: [Object],
        _schema: [Object],
        _validator: [Object],
        _callbacks: [Object],
        _instanceMethods: {},
        autoPK: true,
        autoCreatedAt: true,
        autoUpdatedAt: true,
        hasSchema: true,
        migrate: 'alter',
        _model: [Object],
        _transformer: [Object],
        _tableName: 'category',
        _adapterDefs: [Object],
        _adapter: [Object],
        syncable: [Function],
        defaults: [Function],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        product_items: [Function],
        store_tree: [Function],
        config: [Function],
        findOneById: [Function: dynamicMethod],
        findOneByIdIn: [Function: dynamicMethod],
        findOneByIdLike: [Function: dynamicMethod],
        findById: [Function: dynamicMethod],
        findByIdIn: [Function: dynamicMethod],
        findByIdLike: [Function: dynamicMethod],
        countById: [Function: dynamicMethod],
        countByIdIn: [Function: dynamicMethod],
        countByIdLike: [Function: dynamicMethod],
        idStartsWith: [Function: dynamicMethod],
        idContains: [Function: dynamicMethod],
        idEndsWith: [Function: dynamicMethod],
        findOneByCreatedAt: [Function: dynamicMethod],
        findOneByCreatedAtIn: [Function: dynamicMethod],
        findOneByCreatedAtLike: [Function: dynamicMethod],
        findByCreatedAt: [Function: dynamicMethod],
        findByCreatedAtIn: [Function: dynamicMethod],
        findByCreatedAtLike: [Function: dynamicMethod],
        countByCreatedAt: [Function: dynamicMethod],
        countByCreatedAtIn: [Function: dynamicMethod],
        countByCreatedAtLike: [Function: dynamicMethod],
        createdAtStartsWith: [Function: dynamicMethod],
        createdAtContains: [Function: dynamicMethod],
        createdAtEndsWith: [Function: dynamicMethod],
        findOneByUpdatedAt: [Function: dynamicMethod],
        findOneByUpdatedAtIn: [Function: dynamicMethod],
        findOneByUpdatedAtLike: [Function: dynamicMethod],
        findByUpdatedAt: [Function: dynamicMethod],
        findByUpdatedAtIn: [Function: dynamicMethod],
        findByUpdatedAtLike: [Function: dynamicMethod],
        countByUpdatedAt: [Function: dynamicMethod],
        countByUpdatedAtIn: [Function: dynamicMethod],
        countByUpdatedAtLike: [Function: dynamicMethod],
        updatedAtStartsWith: [Function: dynamicMethod],
        updatedAtContains: [Function: dynamicMethod],
        updatedAtEndsWith: [Function: dynamicMethod] },
     customer: 
      { identity: 'customer',
        adapter: [Object],
        attributes: [Object],
        _cast: [Object],
        _schema: [Object],
        _validator: [Object],
        _callbacks: [Object],
        _instanceMethods: {},
        autoPK: true,
        autoCreatedAt: true,
        autoUpdatedAt: true,
        hasSchema: true,
        migrate: 'alter',
        _model: [Object],
        _transformer: [Object],
        _tableName: 'customer',
        _adapterDefs: [Object],
        _adapter: [Object],
        syncable: [Function],
        defaults: [Function],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        product_items: [Function],
        store_tree: [Function],
        config: [Function],
        findOneByCustomer_id: [Function: dynamicMethod],
        findOneByCustomer_idIn: [Function: dynamicMethod],
        findOneByCustomer_idLike: [Function: dynamicMethod],
        findByCustomer_id: [Function: dynamicMethod],
        findByCustomer_idIn: [Function: dynamicMethod],
        findByCustomer_idLike: [Function: dynamicMethod],
        countByCustomer_id: [Function: dynamicMethod],
        countByCustomer_idIn: [Function: dynamicMethod],
        countByCustomer_idLike: [Function: dynamicMethod],
        customer_idStartsWith: [Function: dynamicMethod],
        customer_idContains: [Function: dynamicMethod],
        customer_idEndsWith: [Function: dynamicMethod],
        findOneByEmail: [Function: dynamicMethod],
        findOneByEmailIn: [Function: dynamicMethod],
        findOneByEmailLike: [Function: dynamicMethod],
        findByEmail: [Function: dynamicMethod],
        findByEmailIn: [Function: dynamicMethod],
        findByEmailLike: [Function: dynamicMethod],
        countByEmail: [Function: dynamicMethod],
        countByEmailIn: [Function: dynamicMethod],
        countByEmailLike: [Function: dynamicMethod],
        emailStartsWith: [Function: dynamicMethod],
        emailContains: [Function: dynamicMethod],
        emailEndsWith: [Function: dynamicMethod],
        findOneByFirstname: [Function: dynamicMethod],
        findOneByFirstnameIn: [Function: dynamicMethod],
        findOneByFirstnameLike: [Function: dynamicMethod],
        findByFirstname: [Function: dynamicMethod],
        findByFirstnameIn: [Function: dynamicMethod],
        findByFirstnameLike: [Function: dynamicMethod],
        countByFirstname: [Function: dynamicMethod],
        countByFirstnameIn: [Function: dynamicMethod],
        countByFirstnameLike: [Function: dynamicMethod],
        firstnameStartsWith: [Function: dynamicMethod],
        firstnameContains: [Function: dynamicMethod],
        firstnameEndsWith: [Function: dynamicMethod],
        findOneByLastname: [Function: dynamicMethod],
        findOneByLastnameIn: [Function: dynamicMethod],
        findOneByLastnameLike: [Function: dynamicMethod],
        findByLastname: [Function: dynamicMethod],
        findByLastnameIn: [Function: dynamicMethod],
        findByLastnameLike: [Function: dynamicMethod],
        countByLastname: [Function: dynamicMethod],
        countByLastnameIn: [Function: dynamicMethod],
        countByLastnameLike: [Function: dynamicMethod],
        lastnameStartsWith: [Function: dynamicMethod],
        lastnameContains: [Function: dynamicMethod],
        lastnameEndsWith: [Function: dynamicMethod],
        findOneByStore_id: [Function: dynamicMethod],
        findOneByStore_idIn: [Function: dynamicMethod],
        findOneByStore_idLike: [Function: dynamicMethod],
        findByStore_id: [Function: dynamicMethod],
        findByStore_idIn: [Function: dynamicMethod],
        findByStore_idLike: [Function: dynamicMethod],
        countByStore_id: [Function: dynamicMethod],
        countByStore_idIn: [Function: dynamicMethod],
        countByStore_idLike: [Function: dynamicMethod],
        store_idStartsWith: [Function: dynamicMethod],
        store_idContains: [Function: dynamicMethod],
        store_idEndsWith: [Function: dynamicMethod],
        findOneByWebsite_id: [Function: dynamicMethod],
        findOneByWebsite_idIn: [Function: dynamicMethod],
        findOneByWebsite_idLike: [Function: dynamicMethod],
        findByWebsite_id: [Function: dynamicMethod],
        findByWebsite_idIn: [Function: dynamicMethod],
        findByWebsite_idLike: [Function: dynamicMethod],
        countByWebsite_id: [Function: dynamicMethod],
        countByWebsite_idIn: [Function: dynamicMethod],
        countByWebsite_idLike: [Function: dynamicMethod],
        website_idStartsWith: [Function: dynamicMethod],
        website_idContains: [Function: dynamicMethod],
        website_idEndsWith: [Function: dynamicMethod],
        findOneByDisable_auto_group_change: [Function: dynamicMethod],
        findOneByDisable_auto_group_changeIn: [Function: dynamicMethod],
        findOneByDisable_auto_group_changeLike: [Function: dynamicMethod],
        findByDisable_auto_group_change: [Function: dynamicMethod],
        findByDisable_auto_group_changeIn: [Function: dynamicMethod],
        findByDisable_auto_group_changeLike: [Function: dynamicMethod],
        countByDisable_auto_group_change: [Function: dynamicMethod],
        countByDisable_auto_group_changeIn: [Function: dynamicMethod],
        countByDisable_auto_group_changeLike: [Function: dynamicMethod],
        disable_auto_group_changeStartsWith: [Function: dynamicMethod],
        disable_auto_group_changeContains: [Function: dynamicMethod],
        disable_auto_group_changeEndsWith: [Function: dynamicMethod],
        findOneByGroup_id: [Function: dynamicMethod],
        findOneByGroup_idIn: [Function: dynamicMethod],
        findOneByGroup_idLike: [Function: dynamicMethod],
        findByGroup_id: [Function: dynamicMethod],
        findByGroup_idIn: [Function: dynamicMethod],
        findByGroup_idLike: [Function: dynamicMethod],
        countByGroup_id: [Function: dynamicMethod],
        countByGroup_idIn: [Function: dynamicMethod],
        countByGroup_idLike: [Function: dynamicMethod],
        group_idStartsWith: [Function: dynamicMethod],
        group_idContains: [Function: dynamicMethod],
        group_idEndsWith: [Function: dynamicMethod],
        findOneByUpdated_at: [Function: dynamicMethod],
        findOneByUpdated_atIn: [Function: dynamicMethod],
        findOneByUpdated_atLike: [Function: dynamicMethod],
        findByUpdated_at: [Function: dynamicMethod],
        findByUpdated_atIn: [Function: dynamicMethod],
        findByUpdated_atLike: [Function: dynamicMethod],
        countByUpdated_at: [Function: dynamicMethod],
        countByUpdated_atIn: [Function: dynamicMethod],
        countByUpdated_atLike: [Function: dynamicMethod],
        updated_atStartsWith: [Function: dynamicMethod],
        updated_atContains: [Function: dynamicMethod],
        updated_atEndsWith: [Function: dynamicMethod],
        findOneByCreated_at: [Function: dynamicMethod],
        findOneByCreated_atIn: [Function: dynamicMethod],
        findOneByCreated_atLike: [Function: dynamicMethod],
        findByCreated_at: [Function: dynamicMethod],
        findByCreated_atIn: [Function: dynamicMethod],
        findByCreated_atLike: [Function: dynamicMethod],
        countByCreated_at: [Function: dynamicMethod],
        countByCreated_atIn: [Function: dynamicMethod],
        countByCreated_atLike: [Function: dynamicMethod],
        created_atStartsWith: [Function: dynamicMethod],
        created_atContains: [Function: dynamicMethod],
        created_atEndsWith: [Function: dynamicMethod],
        findOneByCreated_in: [Function: dynamicMethod],
        findOneByCreated_inIn: [Function: dynamicMethod],
        findOneByCreated_inLike: [Function: dynamicMethod],
        findByCreated_in: [Function: dynamicMethod],
        findByCreated_inIn: [Function: dynamicMethod],
        findByCreated_inLike: [Function: dynamicMethod],
        countByCreated_in: [Function: dynamicMethod],
        countByCreated_inIn: [Function: dynamicMethod],
        countByCreated_inLike: [Function: dynamicMethod],
        created_inStartsWith: [Function: dynamicMethod],
        created_inContains: [Function: dynamicMethod],
        created_inEndsWith: [Function: dynamicMethod],
        findOneByPassword_hash: [Function: dynamicMethod],
        findOneByPassword_hashIn: [Function: dynamicMethod],
        findOneByPassword_hashLike: [Function: dynamicMethod],
        findByPassword_hash: [Function: dynamicMethod],
        findByPassword_hashIn: [Function: dynamicMethod],
        findByPassword_hashLike: [Function: dynamicMethod],
        countByPassword_hash: [Function: dynamicMethod],
        countByPassword_hashIn: [Function: dynamicMethod],
        countByPassword_hashLike: [Function: dynamicMethod],
        password_hashStartsWith: [Function: dynamicMethod],
        password_hashContains: [Function: dynamicMethod],
        password_hashEndsWith: [Function: dynamicMethod],
        findOneById: [Function: dynamicMethod],
        findOneByIdIn: [Function: dynamicMethod],
        findOneByIdLike: [Function: dynamicMethod],
        findById: [Function: dynamicMethod],
        findByIdIn: [Function: dynamicMethod],
        findByIdLike: [Function: dynamicMethod],
        countById: [Function: dynamicMethod],
        countByIdIn: [Function: dynamicMethod],
        countByIdLike: [Function: dynamicMethod],
        idStartsWith: [Function: dynamicMethod],
        idContains: [Function: dynamicMethod],
        idEndsWith: [Function: dynamicMethod],
        findOneByCreatedAt: [Function: dynamicMethod],
        findOneByCreatedAtIn: [Function: dynamicMethod],
        findOneByCreatedAtLike: [Function: dynamicMethod],
        findByCreatedAt: [Function: dynamicMethod],
        findByCreatedAtIn: [Function: dynamicMethod],
        findByCreatedAtLike: [Function: dynamicMethod],
        countByCreatedAt: [Function: dynamicMethod],
        countByCreatedAtIn: [Function: dynamicMethod],
        countByCreatedAtLike: [Function: dynamicMethod],
        createdAtStartsWith: [Function: dynamicMethod],
        createdAtContains: [Function: dynamicMethod],
        createdAtEndsWith: [Function: dynamicMethod],
        findOneByUpdatedAt: [Function: dynamicMethod],
        findOneByUpdatedAtIn: [Function: dynamicMethod],
        findOneByUpdatedAtLike: [Function: dynamicMethod],
        findByUpdatedAt: [Function: dynamicMethod],
        findByUpdatedAtIn: [Function: dynamicMethod],
        findByUpdatedAtLike: [Function: dynamicMethod],
        countByUpdatedAt: [Function: dynamicMethod],
        countByUpdatedAtIn: [Function: dynamicMethod],
        countByUpdatedAtLike: [Function: dynamicMethod],
        updatedAtStartsWith: [Function: dynamicMethod],
        updatedAtContains: [Function: dynamicMethod],
        updatedAtEndsWith: [Function: dynamicMethod] },
     product: 
      { identity: 'product',
        adapter: [Object],
        attributes: [Object],
        _cast: [Object],
        _schema: [Object],
        _validator: [Object],
        _callbacks: [Object],
        _instanceMethods: {},
        autoPK: true,
        autoCreatedAt: true,
        autoUpdatedAt: true,
        hasSchema: true,
        migrate: 'alter',
        _model: [Object],
        _transformer: [Object],
        _tableName: 'product',
        _adapterDefs: [Object],
        _adapter: [Object],
        syncable: [Function],
        defaults: [Function],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        product_items: [Function],
        store_tree: [Function],
        config: [Function],
        findOneByName: [Function: dynamicMethod],
        findOneByNameIn: [Function: dynamicMethod],
        findOneByNameLike: [Function: dynamicMethod],
        findByName: [Function: dynamicMethod],
        findByNameIn: [Function: dynamicMethod],
        findByNameLike: [Function: dynamicMethod],
        countByName: [Function: dynamicMethod],
        countByNameIn: [Function: dynamicMethod],
        countByNameLike: [Function: dynamicMethod],
        nameStartsWith: [Function: dynamicMethod],
        nameContains: [Function: dynamicMethod],
        nameEndsWith: [Function: dynamicMethod],
        findOneBySku: [Function: dynamicMethod],
        findOneBySkuIn: [Function: dynamicMethod],
        findOneBySkuLike: [Function: dynamicMethod],
        findBySku: [Function: dynamicMethod],
        findBySkuIn: [Function: dynamicMethod],
        findBySkuLike: [Function: dynamicMethod],
        countBySku: [Function: dynamicMethod],
        countBySkuIn: [Function: dynamicMethod],
        countBySkuLike: [Function: dynamicMethod],
        skuStartsWith: [Function: dynamicMethod],
        skuContains: [Function: dynamicMethod],
        skuEndsWith: [Function: dynamicMethod],
        findOneByShort_description: [Function: dynamicMethod],
        findOneByShort_descriptionIn: [Function: dynamicMethod],
        findOneByShort_descriptionLike: [Function: dynamicMethod],
        findByShort_description: [Function: dynamicMethod],
        findByShort_descriptionIn: [Function: dynamicMethod],
        findByShort_descriptionLike: [Function: dynamicMethod],
        countByShort_description: [Function: dynamicMethod],
        countByShort_descriptionIn: [Function: dynamicMethod],
        countByShort_descriptionLike: [Function: dynamicMethod],
        short_descriptionStartsWith: [Function: dynamicMethod],
        short_descriptionContains: [Function: dynamicMethod],
        short_descriptionEndsWith: [Function: dynamicMethod],
        findOneByDescription: [Function: dynamicMethod],
        findOneByDescriptionIn: [Function: dynamicMethod],
        findOneByDescriptionLike: [Function: dynamicMethod],
        findByDescription: [Function: dynamicMethod],
        findByDescriptionIn: [Function: dynamicMethod],
        findByDescriptionLike: [Function: dynamicMethod],
        countByDescription: [Function: dynamicMethod],
        countByDescriptionIn: [Function: dynamicMethod],
        countByDescriptionLike: [Function: dynamicMethod],
        descriptionStartsWith: [Function: dynamicMethod],
        descriptionContains: [Function: dynamicMethod],
        descriptionEndsWith: [Function: dynamicMethod],
        findOneByFittinginfo: [Function: dynamicMethod],
        findOneByFittinginfoIn: [Function: dynamicMethod],
        findOneByFittinginfoLike: [Function: dynamicMethod],
        findByFittinginfo: [Function: dynamicMethod],
        findByFittinginfoIn: [Function: dynamicMethod],
        findByFittinginfoLike: [Function: dynamicMethod],
        countByFittinginfo: [Function: dynamicMethod],
        countByFittinginfoIn: [Function: dynamicMethod],
        countByFittinginfoLike: [Function: dynamicMethod],
        fittinginfoStartsWith: [Function: dynamicMethod],
        fittinginfoContains: [Function: dynamicMethod],
        fittinginfoEndsWith: [Function: dynamicMethod],
        findOneByOld_id: [Function: dynamicMethod],
        findOneByOld_idIn: [Function: dynamicMethod],
        findOneByOld_idLike: [Function: dynamicMethod],
        findByOld_id: [Function: dynamicMethod],
        findByOld_idIn: [Function: dynamicMethod],
        findByOld_idLike: [Function: dynamicMethod],
        countByOld_id: [Function: dynamicMethod],
        countByOld_idIn: [Function: dynamicMethod],
        countByOld_idLike: [Function: dynamicMethod],
        old_idStartsWith: [Function: dynamicMethod],
        old_idContains: [Function: dynamicMethod],
        old_idEndsWith: [Function: dynamicMethod],
        findOneByApplications: [Function: dynamicMethod],
        findOneByApplicationsIn: [Function: dynamicMethod],
        findOneByApplicationsLike: [Function: dynamicMethod],
        findByApplications: [Function: dynamicMethod],
        findByApplicationsIn: [Function: dynamicMethod],
        findByApplicationsLike: [Function: dynamicMethod],
        countByApplications: [Function: dynamicMethod],
        countByApplicationsIn: [Function: dynamicMethod],
        countByApplicationsLike: [Function: dynamicMethod],
        applicationsStartsWith: [Function: dynamicMethod],
        applicationsContains: [Function: dynamicMethod],
        applicationsEndsWith: [Function: dynamicMethod],
        findOneByMetrics: [Function: dynamicMethod],
        findOneByMetricsIn: [Function: dynamicMethod],
        findOneByMetricsLike: [Function: dynamicMethod],
        findByMetrics: [Function: dynamicMethod],
        findByMetricsIn: [Function: dynamicMethod],
        findByMetricsLike: [Function: dynamicMethod],
        countByMetrics: [Function: dynamicMethod],
        countByMetricsIn: [Function: dynamicMethod],
        countByMetricsLike: [Function: dynamicMethod],
        metricsStartsWith: [Function: dynamicMethod],
        metricsContains: [Function: dynamicMethod],
        metricsEndsWith: [Function: dynamicMethod],
        findOneByWeight: [Function: dynamicMethod],
        findOneByWeightIn: [Function: dynamicMethod],
        findOneByWeightLike: [Function: dynamicMethod],
        findByWeight: [Function: dynamicMethod],
        findByWeightIn: [Function: dynamicMethod],
        findByWeightLike: [Function: dynamicMethod],
        countByWeight: [Function: dynamicMethod],
        countByWeightIn: [Function: dynamicMethod],
        countByWeightLike: [Function: dynamicMethod],
        weightStartsWith: [Function: dynamicMethod],
        weightContains: [Function: dynamicMethod],
        weightEndsWith: [Function: dynamicMethod],
        findOneByWeight_rounded: [Function: dynamicMethod],
        findOneByWeight_roundedIn: [Function: dynamicMethod],
        findOneByWeight_roundedLike: [Function: dynamicMethod],
        findByWeight_rounded: [Function: dynamicMethod],
        findByWeight_roundedIn: [Function: dynamicMethod],
        findByWeight_roundedLike: [Function: dynamicMethod],
        countByWeight_rounded: [Function: dynamicMethod],
        countByWeight_roundedIn: [Function: dynamicMethod],
        countByWeight_roundedLike: [Function: dynamicMethod],
        weight_roundedStartsWith: [Function: dynamicMethod],
        weight_roundedContains: [Function: dynamicMethod],
        weight_roundedEndsWith: [Function: dynamicMethod],
        findOneByNews_from_date: [Function: dynamicMethod],
        findOneByNews_from_dateIn: [Function: dynamicMethod],
        findOneByNews_from_dateLike: [Function: dynamicMethod],
        findByNews_from_date: [Function: dynamicMethod],
        findByNews_from_dateIn: [Function: dynamicMethod],
        findByNews_from_dateLike: [Function: dynamicMethod],
        countByNews_from_date: [Function: dynamicMethod],
        countByNews_from_dateIn: [Function: dynamicMethod],
        countByNews_from_dateLike: [Function: dynamicMethod],
        news_from_dateStartsWith: [Function: dynamicMethod],
        news_from_dateContains: [Function: dynamicMethod],
        news_from_dateEndsWith: [Function: dynamicMethod],
        findOneByUrl_path: [Function: dynamicMethod],
        findOneByUrl_pathIn: [Function: dynamicMethod],
        findOneByUrl_pathLike: [Function: dynamicMethod],
        findByUrl_path: [Function: dynamicMethod],
        findByUrl_pathIn: [Function: dynamicMethod],
        findByUrl_pathLike: [Function: dynamicMethod],
        countByUrl_path: [Function: dynamicMethod],
        countByUrl_pathIn: [Function: dynamicMethod],
        countByUrl_pathLike: [Function: dynamicMethod],
        url_pathStartsWith: [Function: dynamicMethod],
        url_pathContains: [Function: dynamicMethod],
        url_pathEndsWith: [Function: dynamicMethod],
        findOneByNews_to_date: [Function: dynamicMethod],
        findOneByNews_to_dateIn: [Function: dynamicMethod],
        findOneByNews_to_dateLike: [Function: dynamicMethod],
        findByNews_to_date: [Function: dynamicMethod],
        findByNews_to_dateIn: [Function: dynamicMethod],
        findByNews_to_dateLike: [Function: dynamicMethod],
        countByNews_to_date: [Function: dynamicMethod],
        countByNews_to_dateIn: [Function: dynamicMethod],
        countByNews_to_dateLike: [Function: dynamicMethod],
        news_to_dateStartsWith: [Function: dynamicMethod],
        news_to_dateContains: [Function: dynamicMethod],
        news_to_dateEndsWith: [Function: dynamicMethod],
        findOneByStatus: [Function: dynamicMethod],
        findOneByStatusIn: [Function: dynamicMethod],
        findOneByStatusLike: [Function: dynamicMethod],
        findByStatus: [Function: dynamicMethod],
        findByStatusIn: [Function: dynamicMethod],
        findByStatusLike: [Function: dynamicMethod],
        countByStatus: [Function: dynamicMethod],
        countByStatusIn: [Function: dynamicMethod],
        countByStatusLike: [Function: dynamicMethod],
        statusStartsWith: [Function: dynamicMethod],
        statusContains: [Function: dynamicMethod],
        statusEndsWith: [Function: dynamicMethod],
        findOneByCategory_ids: [Function: dynamicMethod],
        findOneByCategory_idsIn: [Function: dynamicMethod],
        findOneByCategory_idsLike: [Function: dynamicMethod],
        findByCategory_ids: [Function: dynamicMethod],
        findByCategory_idsIn: [Function: dynamicMethod],
        findByCategory_idsLike: [Function: dynamicMethod],
        countByCategory_ids: [Function: dynamicMethod],
        countByCategory_idsIn: [Function: dynamicMethod],
        countByCategory_idsLike: [Function: dynamicMethod],
        category_idsStartsWith: [Function: dynamicMethod],
        category_idsContains: [Function: dynamicMethod],
        category_idsEndsWith: [Function: dynamicMethod],
        findOneByUrl_key: [Function: dynamicMethod],
        findOneByUrl_keyIn: [Function: dynamicMethod],
        findOneByUrl_keyLike: [Function: dynamicMethod],
        findByUrl_key: [Function: dynamicMethod],
        findByUrl_keyIn: [Function: dynamicMethod],
        findByUrl_keyLike: [Function: dynamicMethod],
        countByUrl_key: [Function: dynamicMethod],
        countByUrl_keyIn: [Function: dynamicMethod],
        countByUrl_keyLike: [Function: dynamicMethod],
        url_keyStartsWith: [Function: dynamicMethod],
        url_keyContains: [Function: dynamicMethod],
        url_keyEndsWith: [Function: dynamicMethod],
        findOneByRequired_options: [Function: dynamicMethod],
        findOneByRequired_optionsIn: [Function: dynamicMethod],
        findOneByRequired_optionsLike: [Function: dynamicMethod],
        findByRequired_options: [Function: dynamicMethod],
        findByRequired_optionsIn: [Function: dynamicMethod],
        findByRequired_optionsLike: [Function: dynamicMethod],
        countByRequired_options: [Function: dynamicMethod],
        countByRequired_optionsIn: [Function: dynamicMethod],
        countByRequired_optionsLike: [Function: dynamicMethod],
        required_optionsStartsWith: [Function: dynamicMethod],
        required_optionsContains: [Function: dynamicMethod],
        required_optionsEndsWith: [Function: dynamicMethod],
        findOneByVisibility: [Function: dynamicMethod],
        findOneByVisibilityIn: [Function: dynamicMethod],
        findOneByVisibilityLike: [Function: dynamicMethod],
        findByVisibility: [Function: dynamicMethod],
        findByVisibilityIn: [Function: dynamicMethod],
        findByVisibilityLike: [Function: dynamicMethod],
        countByVisibility: [Function: dynamicMethod],
        countByVisibilityIn: [Function: dynamicMethod],
        countByVisibilityLike: [Function: dynamicMethod],
        visibilityStartsWith: [Function: dynamicMethod],
        visibilityContains: [Function: dynamicMethod],
        visibilityEndsWith: [Function: dynamicMethod],
        findOneByCountry_of_manufacture: [Function: dynamicMethod],
        findOneByCountry_of_manufactureIn: [Function: dynamicMethod],
        findOneByCountry_of_manufactureLike: [Function: dynamicMethod],
        findByCountry_of_manufacture: [Function: dynamicMethod],
        findByCountry_of_manufactureIn: [Function: dynamicMethod],
        findByCountry_of_manufactureLike: [Function: dynamicMethod],
        countByCountry_of_manufacture: [Function: dynamicMethod],
        countByCountry_of_manufactureIn: [Function: dynamicMethod],
        countByCountry_of_manufactureLike: [Function: dynamicMethod],
        country_of_manufactureStartsWith: [Function: dynamicMethod],
        country_of_manufactureContains: [Function: dynamicMethod],
        country_of_manufactureEndsWith: [Function: dynamicMethod],
        findOneByHas_options: [Function: dynamicMethod],
        findOneByHas_optionsIn: [Function: dynamicMethod],
        findOneByHas_optionsLike: [Function: dynamicMethod],
        findByHas_options: [Function: dynamicMethod],
        findByHas_optionsIn: [Function: dynamicMethod],
        findByHas_optionsLike: [Function: dynamicMethod],
        countByHas_options: [Function: dynamicMethod],
        countByHas_optionsIn: [Function: dynamicMethod],
        countByHas_optionsLike: [Function: dynamicMethod],
        has_optionsStartsWith: [Function: dynamicMethod],
        has_optionsContains: [Function: dynamicMethod],
        has_optionsEndsWith: [Function: dynamicMethod],
        findOneBySupplier_internal: [Function: dynamicMethod],
        findOneBySupplier_internalIn: [Function: dynamicMethod],
        findOneBySupplier_internalLike: [Function: dynamicMethod],
        findBySupplier_internal: [Function: dynamicMethod],
        findBySupplier_internalIn: [Function: dynamicMethod],
        findBySupplier_internalLike: [Function: dynamicMethod],
        countBySupplier_internal: [Function: dynamicMethod],
        countBySupplier_internalIn: [Function: dynamicMethod],
        countBySupplier_internalLike: [Function: dynamicMethod],
        supplier_internalStartsWith: [Function: dynamicMethod],
        supplier_internalContains: [Function: dynamicMethod],
        supplier_internalEndsWith: [Function: dynamicMethod],
        findOneByImage_label: [Function: dynamicMethod],
        findOneByImage_labelIn: [Function: dynamicMethod],
        findOneByImage_labelLike: [Function: dynamicMethod],
        findByImage_label: [Function: dynamicMethod],
        findByImage_labelIn: [Function: dynamicMethod],
        findByImage_labelLike: [Function: dynamicMethod],
        countByImage_label: [Function: dynamicMethod],
        countByImage_labelIn: [Function: dynamicMethod],
        countByImage_labelLike: [Function: dynamicMethod],
        image_labelStartsWith: [Function: dynamicMethod],
        image_labelContains: [Function: dynamicMethod],
        image_labelEndsWith: [Function: dynamicMethod],
        findOneByDelivery_time: [Function: dynamicMethod],
        findOneByDelivery_timeIn: [Function: dynamicMethod],
        findOneByDelivery_timeLike: [Function: dynamicMethod],
        findByDelivery_time: [Function: dynamicMethod],
        findByDelivery_timeIn: [Function: dynamicMethod],
        findByDelivery_timeLike: [Function: dynamicMethod],
        countByDelivery_time: [Function: dynamicMethod],
        countByDelivery_timeIn: [Function: dynamicMethod],
        countByDelivery_timeLike: [Function: dynamicMethod],
        delivery_timeStartsWith: [Function: dynamicMethod],
        delivery_timeContains: [Function: dynamicMethod],
        delivery_timeEndsWith: [Function: dynamicMethod],
        findOneBySmall_image_label: [Function: dynamicMethod],
        findOneBySmall_image_labelIn: [Function: dynamicMethod],
        findOneBySmall_image_labelLike: [Function: dynamicMethod],
        findBySmall_image_label: [Function: dynamicMethod],
        findBySmall_image_labelIn: [Function: dynamicMethod],
        findBySmall_image_labelLike: [Function: dynamicMethod],
        countBySmall_image_label: [Function: dynamicMethod],
        countBySmall_image_labelIn: [Function: dynamicMethod],
        countBySmall_image_labelLike: [Function: dynamicMethod],
        small_image_labelStartsWith: [Function: dynamicMethod],
        small_image_labelContains: [Function: dynamicMethod],
        small_image_labelEndsWith: [Function: dynamicMethod],
        findOneByManufacturer: [Function: dynamicMethod],
        findOneByManufacturerIn: [Function: dynamicMethod],
        findOneByManufacturerLike: [Function: dynamicMethod],
        findByManufacturer: [Function: dynamicMethod],
        findByManufacturerIn: [Function: dynamicMethod],
        findByManufacturerLike: [Function: dynamicMethod],
        countByManufacturer: [Function: dynamicMethod],
        countByManufacturerIn: [Function: dynamicMethod],
        countByManufacturerLike: [Function: dynamicMethod],
        manufacturerStartsWith: [Function: dynamicMethod],
        manufacturerContains: [Function: dynamicMethod],
        manufacturerEndsWith: [Function: dynamicMethod],
        findOneByThumbnail_label: [Function: dynamicMethod],
        findOneByThumbnail_labelIn: [Function: dynamicMethod],
        findOneByThumbnail_labelLike: [Function: dynamicMethod],
        findByThumbnail_label: [Function: dynamicMethod],
        findByThumbnail_labelIn: [Function: dynamicMethod],
        findByThumbnail_labelLike: [Function: dynamicMethod],
        countByThumbnail_label: [Function: dynamicMethod],
        countByThumbnail_labelIn: [Function: dynamicMethod],
        countByThumbnail_labelLike: [Function: dynamicMethod],
        thumbnail_labelStartsWith: [Function: dynamicMethod],
        thumbnail_labelContains: [Function: dynamicMethod],
        thumbnail_labelEndsWith: [Function: dynamicMethod],
        findOneByQuality: [Function: dynamicMethod],
        findOneByQualityIn: [Function: dynamicMethod],
        findOneByQualityLike: [Function: dynamicMethod],
        findByQuality: [Function: dynamicMethod],
        findByQualityIn: [Function: dynamicMethod],
        findByQualityLike: [Function: dynamicMethod],
        countByQuality: [Function: dynamicMethod],
        countByQualityIn: [Function: dynamicMethod],
        countByQualityLike: [Function: dynamicMethod],
        qualityStartsWith: [Function: dynamicMethod],
        qualityContains: [Function: dynamicMethod],
        qualityEndsWith: [Function: dynamicMethod],
        findOneByCreated_at: [Function: dynamicMethod],
        findOneByCreated_atIn: [Function: dynamicMethod],
        findOneByCreated_atLike: [Function: dynamicMethod],
        findByCreated_at: [Function: dynamicMethod],
        findByCreated_atIn: [Function: dynamicMethod],
        findByCreated_atLike: [Function: dynamicMethod],
        countByCreated_at: [Function: dynamicMethod],
        countByCreated_atIn: [Function: dynamicMethod],
        countByCreated_atLike: [Function: dynamicMethod],
        created_atStartsWith: [Function: dynamicMethod],
        created_atContains: [Function: dynamicMethod],
        created_atEndsWith: [Function: dynamicMethod],
        findOneByUpdated_at: [Function: dynamicMethod],
        findOneByUpdated_atIn: [Function: dynamicMethod],
        findOneByUpdated_atLike: [Function: dynamicMethod],
        findByUpdated_at: [Function: dynamicMethod],
        findByUpdated_atIn: [Function: dynamicMethod],
        findByUpdated_atLike: [Function: dynamicMethod],
        countByUpdated_at: [Function: dynamicMethod],
        countByUpdated_atIn: [Function: dynamicMethod],
        countByUpdated_atLike: [Function: dynamicMethod],
        updated_atStartsWith: [Function: dynamicMethod],
        updated_atContains: [Function: dynamicMethod],
        updated_atEndsWith: [Function: dynamicMethod],
        findOneByPrice_type: [Function: dynamicMethod],
        findOneByPrice_typeIn: [Function: dynamicMethod],
        findOneByPrice_typeLike: [Function: dynamicMethod],
        findByPrice_type: [Function: dynamicMethod],
        findByPrice_typeIn: [Function: dynamicMethod],
        findByPrice_typeLike: [Function: dynamicMethod],
        countByPrice_type: [Function: dynamicMethod],
        countByPrice_typeIn: [Function: dynamicMethod],
        countByPrice_typeLike: [Function: dynamicMethod],
        price_typeStartsWith: [Function: dynamicMethod],
        price_typeContains: [Function: dynamicMethod],
        price_typeEndsWith: [Function: dynamicMethod],
        findOneBySku_type: [Function: dynamicMethod],
        findOneBySku_typeIn: [Function: dynamicMethod],
        findOneBySku_typeLike: [Function: dynamicMethod],
        findBySku_type: [Function: dynamicMethod],
        findBySku_typeIn: [Function: dynamicMethod],
        findBySku_typeLike: [Function: dynamicMethod],
        countBySku_type: [Function: dynamicMethod],
        countBySku_typeIn: [Function: dynamicMethod],
        countBySku_typeLike: [Function: dynamicMethod],
        sku_typeStartsWith: [Function: dynamicMethod],
        sku_typeContains: [Function: dynamicMethod],
        sku_typeEndsWith: [Function: dynamicMethod],
        findOneByWeight_type: [Function: dynamicMethod],
        findOneByWeight_typeIn: [Function: dynamicMethod],
        findOneByWeight_typeLike: [Function: dynamicMethod],
        findByWeight_type: [Function: dynamicMethod],
        findByWeight_typeIn: [Function: dynamicMethod],
        findByWeight_typeLike: [Function: dynamicMethod],
        countByWeight_type: [Function: dynamicMethod],
        countByWeight_typeIn: [Function: dynamicMethod],
        countByWeight_typeLike: [Function: dynamicMethod],
        weight_typeStartsWith: [Function: dynamicMethod],
        weight_typeContains: [Function: dynamicMethod],
        weight_typeEndsWith: [Function: dynamicMethod],
        findOneByShipment_type: [Function: dynamicMethod],
        findOneByShipment_typeIn: [Function: dynamicMethod],
        findOneByShipment_typeLike: [Function: dynamicMethod],
        findByShipment_type: [Function: dynamicMethod],
        findByShipment_typeIn: [Function: dynamicMethod],
        findByShipment_typeLike: [Function: dynamicMethod],
        countByShipment_type: [Function: dynamicMethod],
        countByShipment_typeIn: [Function: dynamicMethod],
        countByShipment_typeLike: [Function: dynamicMethod],
        shipment_typeStartsWith: [Function: dynamicMethod],
        shipment_typeContains: [Function: dynamicMethod],
        shipment_typeEndsWith: [Function: dynamicMethod],
        findOneByLinks_purchased_separately: [Function: dynamicMethod],
        findOneByLinks_purchased_separatelyIn: [Function: dynamicMethod],
        findOneByLinks_purchased_separatelyLike: [Function: dynamicMethod],
        findByLinks_purchased_separately: [Function: dynamicMethod],
        findByLinks_purchased_separatelyIn: [Function: dynamicMethod],
        findByLinks_purchased_separatelyLike: [Function: dynamicMethod],
        countByLinks_purchased_separately: [Function: dynamicMethod],
        countByLinks_purchased_separatelyIn: [Function: dynamicMethod],
        countByLinks_purchased_separatelyLike: [Function: dynamicMethod],
        links_purchased_separatelyStartsWith: [Function: dynamicMethod],
        links_purchased_separatelyContains: [Function: dynamicMethod],
        links_purchased_separatelyEndsWith: [Function: dynamicMethod],
        findOneBySamples_title: [Function: dynamicMethod],
        findOneBySamples_titleIn: [Function: dynamicMethod],
        findOneBySamples_titleLike: [Function: dynamicMethod],
        findBySamples_title: [Function: dynamicMethod],
        findBySamples_titleIn: [Function: dynamicMethod],
        findBySamples_titleLike: [Function: dynamicMethod],
        countBySamples_title: [Function: dynamicMethod],
        countBySamples_titleIn: [Function: dynamicMethod],
        countBySamples_titleLike: [Function: dynamicMethod],
        samples_titleStartsWith: [Function: dynamicMethod],
        samples_titleContains: [Function: dynamicMethod],
        samples_titleEndsWith: [Function: dynamicMethod],
        findOneByLinks_title: [Function: dynamicMethod],
        findOneByLinks_titleIn: [Function: dynamicMethod],
        findOneByLinks_titleLike: [Function: dynamicMethod],
        findByLinks_title: [Function: dynamicMethod],
        findByLinks_titleIn: [Function: dynamicMethod],
        findByLinks_titleLike: [Function: dynamicMethod],
        countByLinks_title: [Function: dynamicMethod],
        countByLinks_titleIn: [Function: dynamicMethod],
        countByLinks_titleLike: [Function: dynamicMethod],
        links_titleStartsWith: [Function: dynamicMethod],
        links_titleContains: [Function: dynamicMethod],
        links_titleEndsWith: [Function: dynamicMethod],
        findOneByLinks_exist: [Function: dynamicMethod],
        findOneByLinks_existIn: [Function: dynamicMethod],
        findOneByLinks_existLike: [Function: dynamicMethod],
        findByLinks_exist: [Function: dynamicMethod],
        findByLinks_existIn: [Function: dynamicMethod],
        findByLinks_existLike: [Function: dynamicMethod],
        countByLinks_exist: [Function: dynamicMethod],
        countByLinks_existIn: [Function: dynamicMethod],
        countByLinks_existLike: [Function: dynamicMethod],
        links_existStartsWith: [Function: dynamicMethod],
        links_existContains: [Function: dynamicMethod],
        links_existEndsWith: [Function: dynamicMethod],
        findOneByPrice: [Function: dynamicMethod],
        findOneByPriceIn: [Function: dynamicMethod],
        findOneByPriceLike: [Function: dynamicMethod],
        findByPrice: [Function: dynamicMethod],
        findByPriceIn: [Function: dynamicMethod],
        findByPriceLike: [Function: dynamicMethod],
        countByPrice: [Function: dynamicMethod],
        countByPriceIn: [Function: dynamicMethod],
        countByPriceLike: [Function: dynamicMethod],
        priceStartsWith: [Function: dynamicMethod],
        priceContains: [Function: dynamicMethod],
        priceEndsWith: [Function: dynamicMethod],
        findOneByGroup_price: [Function: dynamicMethod],
        findOneByGroup_priceIn: [Function: dynamicMethod],
        findOneByGroup_priceLike: [Function: dynamicMethod],
        findByGroup_price: [Function: dynamicMethod],
        findByGroup_priceIn: [Function: dynamicMethod],
        findByGroup_priceLike: [Function: dynamicMethod],
        countByGroup_price: [Function: dynamicMethod],
        countByGroup_priceIn: [Function: dynamicMethod],
        countByGroup_priceLike: [Function: dynamicMethod],
        group_priceStartsWith: [Function: dynamicMethod],
        group_priceContains: [Function: dynamicMethod],
        group_priceEndsWith: [Function: dynamicMethod],
        findOneBySpecial_price: [Function: dynamicMethod],
        findOneBySpecial_priceIn: [Function: dynamicMethod],
        findOneBySpecial_priceLike: [Function: dynamicMethod],
        findBySpecial_price: [Function: dynamicMethod],
        findBySpecial_priceIn: [Function: dynamicMethod],
        findBySpecial_priceLike: [Function: dynamicMethod],
        countBySpecial_price: [Function: dynamicMethod],
        countBySpecial_priceIn: [Function: dynamicMethod],
        countBySpecial_priceLike: [Function: dynamicMethod],
        special_priceStartsWith: [Function: dynamicMethod],
        special_priceContains: [Function: dynamicMethod],
        special_priceEndsWith: [Function: dynamicMethod],
        findOneBySpecial_from_date: [Function: dynamicMethod],
        findOneBySpecial_from_dateIn: [Function: dynamicMethod],
        findOneBySpecial_from_dateLike: [Function: dynamicMethod],
        findBySpecial_from_date: [Function: dynamicMethod],
        findBySpecial_from_dateIn: [Function: dynamicMethod],
        findBySpecial_from_dateLike: [Function: dynamicMethod],
        countBySpecial_from_date: [Function: dynamicMethod],
        countBySpecial_from_dateIn: [Function: dynamicMethod],
        countBySpecial_from_dateLike: [Function: dynamicMethod],
        special_from_dateStartsWith: [Function: dynamicMethod],
        special_from_dateContains: [Function: dynamicMethod],
        special_from_dateEndsWith: [Function: dynamicMethod],
        findOneBySpecial_to_date: [Function: dynamicMethod],
        findOneBySpecial_to_dateIn: [Function: dynamicMethod],
        findOneBySpecial_to_dateLike: [Function: dynamicMethod],
        findBySpecial_to_date: [Function: dynamicMethod],
        findBySpecial_to_dateIn: [Function: dynamicMethod],
        findBySpecial_to_dateLike: [Function: dynamicMethod],
        countBySpecial_to_date: [Function: dynamicMethod],
        countBySpecial_to_dateIn: [Function: dynamicMethod],
        countBySpecial_to_dateLike: [Function: dynamicMethod],
        special_to_dateStartsWith: [Function: dynamicMethod],
        special_to_dateContains: [Function: dynamicMethod],
        special_to_dateEndsWith: [Function: dynamicMethod],
        findOneByCost: [Function: dynamicMethod],
        findOneByCostIn: [Function: dynamicMethod],
        findOneByCostLike: [Function: dynamicMethod],
        findByCost: [Function: dynamicMethod],
        findByCostIn: [Function: dynamicMethod],
        findByCostLike: [Function: dynamicMethod],
        countByCost: [Function: dynamicMethod],
        countByCostIn: [Function: dynamicMethod],
        countByCostLike: [Function: dynamicMethod],
        costStartsWith: [Function: dynamicMethod],
        costContains: [Function: dynamicMethod],
        costEndsWith: [Function: dynamicMethod],
        findOneByTier_price: [Function: dynamicMethod],
        findOneByTier_priceIn: [Function: dynamicMethod],
        findOneByTier_priceLike: [Function: dynamicMethod],
        findByTier_price: [Function: dynamicMethod],
        findByTier_priceIn: [Function: dynamicMethod],
        findByTier_priceLike: [Function: dynamicMethod],
        countByTier_price: [Function: dynamicMethod],
        countByTier_priceIn: [Function: dynamicMethod],
        countByTier_priceLike: [Function: dynamicMethod],
        tier_priceStartsWith: [Function: dynamicMethod],
        tier_priceContains: [Function: dynamicMethod],
        tier_priceEndsWith: [Function: dynamicMethod],
        findOneByMinimal_price: [Function: dynamicMethod],
        findOneByMinimal_priceIn: [Function: dynamicMethod],
        findOneByMinimal_priceLike: [Function: dynamicMethod],
        findByMinimal_price: [Function: dynamicMethod],
        findByMinimal_priceIn: [Function: dynamicMethod],
        findByMinimal_priceLike: [Function: dynamicMethod],
        countByMinimal_price: [Function: dynamicMethod],
        countByMinimal_priceIn: [Function: dynamicMethod],
        countByMinimal_priceLike: [Function: dynamicMethod],
        minimal_priceStartsWith: [Function: dynamicMethod],
        minimal_priceContains: [Function: dynamicMethod],
        minimal_priceEndsWith: [Function: dynamicMethod],
        findOneByMsrp_enabled: [Function: dynamicMethod],
        findOneByMsrp_enabledIn: [Function: dynamicMethod],
        findOneByMsrp_enabledLike: [Function: dynamicMethod],
        findByMsrp_enabled: [Function: dynamicMethod],
        findByMsrp_enabledIn: [Function: dynamicMethod],
        findByMsrp_enabledLike: [Function: dynamicMethod],
        countByMsrp_enabled: [Function: dynamicMethod],
        countByMsrp_enabledIn: [Function: dynamicMethod],
        countByMsrp_enabledLike: [Function: dynamicMethod],
        msrp_enabledStartsWith: [Function: dynamicMethod],
        msrp_enabledContains: [Function: dynamicMethod],
        msrp_enabledEndsWith: [Function: dynamicMethod],
        findOneByMsrp_display_actual_price_type: [Function: dynamicMethod],
        findOneByMsrp_display_actual_price_typeIn: [Function: dynamicMethod],
        findOneByMsrp_display_actual_price_typeLike: [Function: dynamicMethod],
        findByMsrp_display_actual_price_type: [Function: dynamicMethod],
        findByMsrp_display_actual_price_typeIn: [Function: dynamicMethod],
        findByMsrp_display_actual_price_typeLike: [Function: dynamicMethod],
        countByMsrp_display_actual_price_type: [Function: dynamicMethod],
        countByMsrp_display_actual_price_typeIn: [Function: dynamicMethod],
        countByMsrp_display_actual_price_typeLike: [Function: dynamicMethod],
        msrp_display_actual_price_typeStartsWith: [Function: dynamicMethod],
        msrp_display_actual_price_typeContains: [Function: dynamicMethod],
        msrp_display_actual_price_typeEndsWith: [Function: dynamicMethod],
        findOneByMsrp: [Function: dynamicMethod],
        findOneByMsrpIn: [Function: dynamicMethod],
        findOneByMsrpLike: [Function: dynamicMethod],
        findByMsrp: [Function: dynamicMethod],
        findByMsrpIn: [Function: dynamicMethod],
        findByMsrpLike: [Function: dynamicMethod],
        countByMsrp: [Function: dynamicMethod],
        countByMsrpIn: [Function: dynamicMethod],
        countByMsrpLike: [Function: dynamicMethod],
        msrpStartsWith: [Function: dynamicMethod],
        msrpContains: [Function: dynamicMethod],
        msrpEndsWith: [Function: dynamicMethod],
        findOneByEnable_googlecheckout: [Function: dynamicMethod],
        findOneByEnable_googlecheckoutIn: [Function: dynamicMethod],
        findOneByEnable_googlecheckoutLike: [Function: dynamicMethod],
        findByEnable_googlecheckout: [Function: dynamicMethod],
        findByEnable_googlecheckoutIn: [Function: dynamicMethod],
        findByEnable_googlecheckoutLike: [Function: dynamicMethod],
        countByEnable_googlecheckout: [Function: dynamicMethod],
        countByEnable_googlecheckoutIn: [Function: dynamicMethod],
        countByEnable_googlecheckoutLike: [Function: dynamicMethod],
        enable_googlecheckoutStartsWith: [Function: dynamicMethod],
        enable_googlecheckoutContains: [Function: dynamicMethod],
        enable_googlecheckoutEndsWith: [Function: dynamicMethod],
        findOneByTax_class_id: [Function: dynamicMethod],
        findOneByTax_class_idIn: [Function: dynamicMethod],
        findOneByTax_class_idLike: [Function: dynamicMethod],
        findByTax_class_id: [Function: dynamicMethod],
        findByTax_class_idIn: [Function: dynamicMethod],
        findByTax_class_idLike: [Function: dynamicMethod],
        countByTax_class_id: [Function: dynamicMethod],
        countByTax_class_idIn: [Function: dynamicMethod],
        countByTax_class_idLike: [Function: dynamicMethod],
        tax_class_idStartsWith: [Function: dynamicMethod],
        tax_class_idContains: [Function: dynamicMethod],
        tax_class_idEndsWith: [Function: dynamicMethod],
        findOneByPrice_view: [Function: dynamicMethod],
        findOneByPrice_viewIn: [Function: dynamicMethod],
        findOneByPrice_viewLike: [Function: dynamicMethod],
        findByPrice_view: [Function: dynamicMethod],
        findByPrice_viewIn: [Function: dynamicMethod],
        findByPrice_viewLike: [Function: dynamicMethod],
        countByPrice_view: [Function: dynamicMethod],
        countByPrice_viewIn: [Function: dynamicMethod],
        countByPrice_viewLike: [Function: dynamicMethod],
        price_viewStartsWith: [Function: dynamicMethod],
        price_viewContains: [Function: dynamicMethod],
        price_viewEndsWith: [Function: dynamicMethod],
        findOneByCost_price: [Function: dynamicMethod],
        findOneByCost_priceIn: [Function: dynamicMethod],
        findOneByCost_priceLike: [Function: dynamicMethod],
        findByCost_price: [Function: dynamicMethod],
        findByCost_priceIn: [Function: dynamicMethod],
        findByCost_priceLike: [Function: dynamicMethod],
        countByCost_price: [Function: dynamicMethod],
        countByCost_priceIn: [Function: dynamicMethod],
        countByCost_priceLike: [Function: dynamicMethod],
        cost_priceStartsWith: [Function: dynamicMethod],
        cost_priceContains: [Function: dynamicMethod],
        cost_priceEndsWith: [Function: dynamicMethod],
        findOneByVwheritage_price_pound: [Function: dynamicMethod],
        findOneByVwheritage_price_poundIn: [Function: dynamicMethod],
        findOneByVwheritage_price_poundLike: [Function: dynamicMethod],
        findByVwheritage_price_pound: [Function: dynamicMethod],
        findByVwheritage_price_poundIn: [Function: dynamicMethod],
        findByVwheritage_price_poundLike: [Function: dynamicMethod],
        countByVwheritage_price_pound: [Function: dynamicMethod],
        countByVwheritage_price_poundIn: [Function: dynamicMethod],
        countByVwheritage_price_poundLike: [Function: dynamicMethod],
        vwheritage_price_poundStartsWith: [Function: dynamicMethod],
        vwheritage_price_poundContains: [Function: dynamicMethod],
        vwheritage_price_poundEndsWith: [Function: dynamicMethod],
        findOneByRecommend_price: [Function: dynamicMethod],
        findOneByRecommend_priceIn: [Function: dynamicMethod],
        findOneByRecommend_priceLike: [Function: dynamicMethod],
        findByRecommend_price: [Function: dynamicMethod],
        findByRecommend_priceIn: [Function: dynamicMethod],
        findByRecommend_priceLike: [Function: dynamicMethod],
        countByRecommend_price: [Function: dynamicMethod],
        countByRecommend_priceIn: [Function: dynamicMethod],
        countByRecommend_priceLike: [Function: dynamicMethod],
        recommend_priceStartsWith: [Function: dynamicMethod],
        recommend_priceContains: [Function: dynamicMethod],
        recommend_priceEndsWith: [Function: dynamicMethod],
        findOneByRecommend_price_netto: [Function: dynamicMethod],
        findOneByRecommend_price_nettoIn: [Function: dynamicMethod],
        findOneByRecommend_price_nettoLike: [Function: dynamicMethod],
        findByRecommend_price_netto: [Function: dynamicMethod],
        findByRecommend_price_nettoIn: [Function: dynamicMethod],
        findByRecommend_price_nettoLike: [Function: dynamicMethod],
        countByRecommend_price_netto: [Function: dynamicMethod],
        countByRecommend_price_nettoIn: [Function: dynamicMethod],
        countByRecommend_price_nettoLike: [Function: dynamicMethod],
        recommend_price_nettoStartsWith: [Function: dynamicMethod],
        recommend_price_nettoContains: [Function: dynamicMethod],
        recommend_price_nettoEndsWith: [Function: dynamicMethod],
        findOneByMeta_title: [Function: dynamicMethod],
        findOneByMeta_titleIn: [Function: dynamicMethod],
        findOneByMeta_titleLike: [Function: dynamicMethod],
        findByMeta_title: [Function: dynamicMethod],
        findByMeta_titleIn: [Function: dynamicMethod],
        findByMeta_titleLike: [Function: dynamicMethod],
        countByMeta_title: [Function: dynamicMethod],
        countByMeta_titleIn: [Function: dynamicMethod],
        countByMeta_titleLike: [Function: dynamicMethod],
        meta_titleStartsWith: [Function: dynamicMethod],
        meta_titleContains: [Function: dynamicMethod],
        meta_titleEndsWith: [Function: dynamicMethod],
        findOneByMeta_keyword: [Function: dynamicMethod],
        findOneByMeta_keywordIn: [Function: dynamicMethod],
        findOneByMeta_keywordLike: [Function: dynamicMethod],
        findByMeta_keyword: [Function: dynamicMethod],
        findByMeta_keywordIn: [Function: dynamicMethod],
        findByMeta_keywordLike: [Function: dynamicMethod],
        countByMeta_keyword: [Function: dynamicMethod],
        countByMeta_keywordIn: [Function: dynamicMethod],
        countByMeta_keywordLike: [Function: dynamicMethod],
        meta_keywordStartsWith: [Function: dynamicMethod],
        meta_keywordContains: [Function: dynamicMethod],
        meta_keywordEndsWith: [Function: dynamicMethod],
        findOneByMeta_description: [Function: dynamicMethod],
        findOneByMeta_descriptionIn: [Function: dynamicMethod],
        findOneByMeta_descriptionLike: [Function: dynamicMethod],
        findByMeta_description: [Function: dynamicMethod],
        findByMeta_descriptionIn: [Function: dynamicMethod],
        findByMeta_descriptionLike: [Function: dynamicMethod],
        countByMeta_description: [Function: dynamicMethod],
        countByMeta_descriptionIn: [Function: dynamicMethod],
        countByMeta_descriptionLike: [Function: dynamicMethod],
        meta_descriptionStartsWith: [Function: dynamicMethod],
        meta_descriptionContains: [Function: dynamicMethod],
        meta_descriptionEndsWith: [Function: dynamicMethod],
        findOneByMeta_autogenerate: [Function: dynamicMethod],
        findOneByMeta_autogenerateIn: [Function: dynamicMethod],
        findOneByMeta_autogenerateLike: [Function: dynamicMethod],
        findByMeta_autogenerate: [Function: dynamicMethod],
        findByMeta_autogenerateIn: [Function: dynamicMethod],
        findByMeta_autogenerateLike: [Function: dynamicMethod],
        countByMeta_autogenerate: [Function: dynamicMethod],
        countByMeta_autogenerateIn: [Function: dynamicMethod],
        countByMeta_autogenerateLike: [Function: dynamicMethod],
        meta_autogenerateStartsWith: [Function: dynamicMethod],
        meta_autogenerateContains: [Function: dynamicMethod],
        meta_autogenerateEndsWith: [Function: dynamicMethod],
        findOneByIs_recurring: [Function: dynamicMethod],
        findOneByIs_recurringIn: [Function: dynamicMethod],
        findOneByIs_recurringLike: [Function: dynamicMethod],
        findByIs_recurring: [Function: dynamicMethod],
        findByIs_recurringIn: [Function: dynamicMethod],
        findByIs_recurringLike: [Function: dynamicMethod],
        countByIs_recurring: [Function: dynamicMethod],
        countByIs_recurringIn: [Function: dynamicMethod],
        countByIs_recurringLike: [Function: dynamicMethod],
        is_recurringStartsWith: [Function: dynamicMethod],
        is_recurringContains: [Function: dynamicMethod],
        is_recurringEndsWith: [Function: dynamicMethod],
        findOneByRecurring_profile: [Function: dynamicMethod],
        findOneByRecurring_profileIn: [Function: dynamicMethod],
        findOneByRecurring_profileLike: [Function: dynamicMethod],
        findByRecurring_profile: [Function: dynamicMethod],
        findByRecurring_profileIn: [Function: dynamicMethod],
        findByRecurring_profileLike: [Function: dynamicMethod],
        countByRecurring_profile: [Function: dynamicMethod],
        countByRecurring_profileIn: [Function: dynamicMethod],
        countByRecurring_profileLike: [Function: dynamicMethod],
        recurring_profileStartsWith: [Function: dynamicMethod],
        recurring_profileContains: [Function: dynamicMethod],
        recurring_profileEndsWith: [Function: dynamicMethod],
        findOneByCustom_design: [Function: dynamicMethod],
        findOneByCustom_designIn: [Function: dynamicMethod],
        findOneByCustom_designLike: [Function: dynamicMethod],
        findByCustom_design: [Function: dynamicMethod],
        findByCustom_designIn: [Function: dynamicMethod],
        findByCustom_designLike: [Function: dynamicMethod],
        countByCustom_design: [Function: dynamicMethod],
        countByCustom_designIn: [Function: dynamicMethod],
        countByCustom_designLike: [Function: dynamicMethod],
        custom_designStartsWith: [Function: dynamicMethod],
        custom_designContains: [Function: dynamicMethod],
        custom_designEndsWith: [Function: dynamicMethod],
        findOneByCustom_design_from: [Function: dynamicMethod],
        findOneByCustom_design_fromIn: [Function: dynamicMethod],
        findOneByCustom_design_fromLike: [Function: dynamicMethod],
        findByCustom_design_from: [Function: dynamicMethod],
        findByCustom_design_fromIn: [Function: dynamicMethod],
        findByCustom_design_fromLike: [Function: dynamicMethod],
        countByCustom_design_from: [Function: dynamicMethod],
        countByCustom_design_fromIn: [Function: dynamicMethod],
        countByCustom_design_fromLike: [Function: dynamicMethod],
        custom_design_fromStartsWith: [Function: dynamicMethod],
        custom_design_fromContains: [Function: dynamicMethod],
        custom_design_fromEndsWith: [Function: dynamicMethod],
        findOneByCustom_design_to: [Function: dynamicMethod],
        findOneByCustom_design_toIn: [Function: dynamicMethod],
        findOneByCustom_design_toLike: [Function: dynamicMethod],
        findByCustom_design_to: [Function: dynamicMethod],
        findByCustom_design_toIn: [Function: dynamicMethod],
        findByCustom_design_toLike: [Function: dynamicMethod],
        countByCustom_design_to: [Function: dynamicMethod],
        countByCustom_design_toIn: [Function: dynamicMethod],
        countByCustom_design_toLike: [Function: dynamicMethod],
        custom_design_toStartsWith: [Function: dynamicMethod],
        custom_design_toContains: [Function: dynamicMethod],
        custom_design_toEndsWith: [Function: dynamicMethod],
        findOneByCustom_layout_update: [Function: dynamicMethod],
        findOneByCustom_layout_updateIn: [Function: dynamicMethod],
        findOneByCustom_layout_updateLike: [Function: dynamicMethod],
        findByCustom_layout_update: [Function: dynamicMethod],
        findByCustom_layout_updateIn: [Function: dynamicMethod],
        findByCustom_layout_updateLike: [Function: dynamicMethod],
        countByCustom_layout_update: [Function: dynamicMethod],
        countByCustom_layout_updateIn: [Function: dynamicMethod],
        countByCustom_layout_updateLike: [Function: dynamicMethod],
        custom_layout_updateStartsWith: [Function: dynamicMethod],
        custom_layout_updateContains: [Function: dynamicMethod],
        custom_layout_updateEndsWith: [Function: dynamicMethod],
        findOneByPage_layout: [Function: dynamicMethod],
        findOneByPage_layoutIn: [Function: dynamicMethod],
        findOneByPage_layoutLike: [Function: dynamicMethod],
        findByPage_layout: [Function: dynamicMethod],
        findByPage_layoutIn: [Function: dynamicMethod],
        findByPage_layoutLike: [Function: dynamicMethod],
        countByPage_layout: [Function: dynamicMethod],
        countByPage_layoutIn: [Function: dynamicMethod],
        countByPage_layoutLike: [Function: dynamicMethod],
        page_layoutStartsWith: [Function: dynamicMethod],
        page_layoutContains: [Function: dynamicMethod],
        page_layoutEndsWith: [Function: dynamicMethod],
        findOneByOptions_container: [Function: dynamicMethod],
        findOneByOptions_containerIn: [Function: dynamicMethod],
        findOneByOptions_containerLike: [Function: dynamicMethod],
        findByOptions_container: [Function: dynamicMethod],
        findByOptions_containerIn: [Function: dynamicMethod],
        findByOptions_containerLike: [Function: dynamicMethod],
        countByOptions_container: [Function: dynamicMethod],
        countByOptions_containerIn: [Function: dynamicMethod],
        countByOptions_containerLike: [Function: dynamicMethod],
        options_containerStartsWith: [Function: dynamicMethod],
        options_containerContains: [Function: dynamicMethod],
        options_containerEndsWith: [Function: dynamicMethod],
        findOneByGift_message_available: [Function: dynamicMethod],
        findOneByGift_message_availableIn: [Function: dynamicMethod],
        findOneByGift_message_availableLike: [Function: dynamicMethod],
        findByGift_message_available: [Function: dynamicMethod],
        findByGift_message_availableIn: [Function: dynamicMethod],
        findByGift_message_availableLike: [Function: dynamicMethod],
        countByGift_message_available: [Function: dynamicMethod],
        countByGift_message_availableIn: [Function: dynamicMethod],
        countByGift_message_availableLike: [Function: dynamicMethod],
        gift_message_availableStartsWith: [Function: dynamicMethod],
        gift_message_availableContains: [Function: dynamicMethod],
        gift_message_availableEndsWith: [Function: dynamicMethod],
        findOneByPackage_id: [Function: dynamicMethod],
        findOneByPackage_idIn: [Function: dynamicMethod],
        findOneByPackage_idLike: [Function: dynamicMethod],
        findByPackage_id: [Function: dynamicMethod],
        findByPackage_idIn: [Function: dynamicMethod],
        findByPackage_idLike: [Function: dynamicMethod],
        countByPackage_id: [Function: dynamicMethod],
        countByPackage_idIn: [Function: dynamicMethod],
        countByPackage_idLike: [Function: dynamicMethod],
        package_idStartsWith: [Function: dynamicMethod],
        package_idContains: [Function: dynamicMethod],
        package_idEndsWith: [Function: dynamicMethod],
        findOneBySuperstageshow: [Function: dynamicMethod],
        findOneBySuperstageshowIn: [Function: dynamicMethod],
        findOneBySuperstageshowLike: [Function: dynamicMethod],
        findBySuperstageshow: [Function: dynamicMethod],
        findBySuperstageshowIn: [Function: dynamicMethod],
        findBySuperstageshowLike: [Function: dynamicMethod],
        countBySuperstageshow: [Function: dynamicMethod],
        countBySuperstageshowIn: [Function: dynamicMethod],
        countBySuperstageshowLike: [Function: dynamicMethod],
        superstageshowStartsWith: [Function: dynamicMethod],
        superstageshowContains: [Function: dynamicMethod],
        superstageshowEndsWith: [Function: dynamicMethod],
        findOneByStock_vwheritage_qty: [Function: dynamicMethod],
        findOneByStock_vwheritage_qtyIn: [Function: dynamicMethod],
        findOneByStock_vwheritage_qtyLike: [Function: dynamicMethod],
        findByStock_vwheritage_qty: [Function: dynamicMethod],
        findByStock_vwheritage_qtyIn: [Function: dynamicMethod],
        findByStock_vwheritage_qtyLike: [Function: dynamicMethod],
        countByStock_vwheritage_qty: [Function: dynamicMethod],
        countByStock_vwheritage_qtyIn: [Function: dynamicMethod],
        countByStock_vwheritage_qtyLike: [Function: dynamicMethod],
        stock_vwheritage_qtyStartsWith: [Function: dynamicMethod],
        stock_vwheritage_qtyContains: [Function: dynamicMethod],
        stock_vwheritage_qtyEndsWith: [Function: dynamicMethod],
        findOneByStock_vwheritage_messagecode: [Function: dynamicMethod],
        findOneByStock_vwheritage_messagecodeIn: [Function: dynamicMethod],
        findOneByStock_vwheritage_messagecodeLike: [Function: dynamicMethod],
        findByStock_vwheritage_messagecode: [Function: dynamicMethod],
        findByStock_vwheritage_messagecodeIn: [Function: dynamicMethod],
        findByStock_vwheritage_messagecodeLike: [Function: dynamicMethod],
        countByStock_vwheritage_messagecode: [Function: dynamicMethod],
        countByStock_vwheritage_messagecodeIn: [Function: dynamicMethod],
        countByStock_vwheritage_messagecodeLike: [Function: dynamicMethod],
        stock_vwheritage_messagecodeStartsWith: [Function: dynamicMethod],
        stock_vwheritage_messagecodeContains: [Function: dynamicMethod],
        stock_vwheritage_messagecodeEndsWith: [Function: dynamicMethod],
        findOneByStock_vwheritage_dueweeks: [Function: dynamicMethod],
        findOneByStock_vwheritage_dueweeksIn: [Function: dynamicMethod],
        findOneByStock_vwheritage_dueweeksLike: [Function: dynamicMethod],
        findByStock_vwheritage_dueweeks: [Function: dynamicMethod],
        findByStock_vwheritage_dueweeksIn: [Function: dynamicMethod],
        findByStock_vwheritage_dueweeksLike: [Function: dynamicMethod],
        countByStock_vwheritage_dueweeks: [Function: dynamicMethod],
        countByStock_vwheritage_dueweeksIn: [Function: dynamicMethod],
        countByStock_vwheritage_dueweeksLike: [Function: dynamicMethod],
        stock_vwheritage_dueweeksStartsWith: [Function: dynamicMethod],
        stock_vwheritage_dueweeksContains: [Function: dynamicMethod],
        stock_vwheritage_dueweeksEndsWith: [Function: dynamicMethod],
        findOneByStock_strichweg_qty: [Function: dynamicMethod],
        findOneByStock_strichweg_qtyIn: [Function: dynamicMethod],
        findOneByStock_strichweg_qtyLike: [Function: dynamicMethod],
        findByStock_strichweg_qty: [Function: dynamicMethod],
        findByStock_strichweg_qtyIn: [Function: dynamicMethod],
        findByStock_strichweg_qtyLike: [Function: dynamicMethod],
        countByStock_strichweg_qty: [Function: dynamicMethod],
        countByStock_strichweg_qtyIn: [Function: dynamicMethod],
        countByStock_strichweg_qtyLike: [Function: dynamicMethod],
        stock_strichweg_qtyStartsWith: [Function: dynamicMethod],
        stock_strichweg_qtyContains: [Function: dynamicMethod],
        stock_strichweg_qtyEndsWith: [Function: dynamicMethod],
        findOneByStock_strichweg_range: [Function: dynamicMethod],
        findOneByStock_strichweg_rangeIn: [Function: dynamicMethod],
        findOneByStock_strichweg_rangeLike: [Function: dynamicMethod],
        findByStock_strichweg_range: [Function: dynamicMethod],
        findByStock_strichweg_rangeIn: [Function: dynamicMethod],
        findByStock_strichweg_rangeLike: [Function: dynamicMethod],
        countByStock_strichweg_range: [Function: dynamicMethod],
        countByStock_strichweg_rangeIn: [Function: dynamicMethod],
        countByStock_strichweg_rangeLike: [Function: dynamicMethod],
        stock_strichweg_rangeStartsWith: [Function: dynamicMethod],
        stock_strichweg_rangeContains: [Function: dynamicMethod],
        stock_strichweg_rangeEndsWith: [Function: dynamicMethod],
        findOneByStock_strichweg_row: [Function: dynamicMethod],
        findOneByStock_strichweg_rowIn: [Function: dynamicMethod],
        findOneByStock_strichweg_rowLike: [Function: dynamicMethod],
        findByStock_strichweg_row: [Function: dynamicMethod],
        findByStock_strichweg_rowIn: [Function: dynamicMethod],
        findByStock_strichweg_rowLike: [Function: dynamicMethod],
        countByStock_strichweg_row: [Function: dynamicMethod],
        countByStock_strichweg_rowIn: [Function: dynamicMethod],
        countByStock_strichweg_rowLike: [Function: dynamicMethod],
        stock_strichweg_rowStartsWith: [Function: dynamicMethod],
        stock_strichweg_rowContains: [Function: dynamicMethod],
        stock_strichweg_rowEndsWith: [Function: dynamicMethod],
        findOneBySpecial_order: [Function: dynamicMethod],
        findOneBySpecial_orderIn: [Function: dynamicMethod],
        findOneBySpecial_orderLike: [Function: dynamicMethod],
        findBySpecial_order: [Function: dynamicMethod],
        findBySpecial_orderIn: [Function: dynamicMethod],
        findBySpecial_orderLike: [Function: dynamicMethod],
        countBySpecial_order: [Function: dynamicMethod],
        countBySpecial_orderIn: [Function: dynamicMethod],
        countBySpecial_orderLike: [Function: dynamicMethod],
        special_orderStartsWith: [Function: dynamicMethod],
        special_orderContains: [Function: dynamicMethod],
        special_orderEndsWith: [Function: dynamicMethod],
        findOneByCloth_sizes: [Function: dynamicMethod],
        findOneByCloth_sizesIn: [Function: dynamicMethod],
        findOneByCloth_sizesLike: [Function: dynamicMethod],
        findByCloth_sizes: [Function: dynamicMethod],
        findByCloth_sizesIn: [Function: dynamicMethod],
        findByCloth_sizesLike: [Function: dynamicMethod],
        countByCloth_sizes: [Function: dynamicMethod],
        countByCloth_sizesIn: [Function: dynamicMethod],
        countByCloth_sizesLike: [Function: dynamicMethod],
        cloth_sizesStartsWith: [Function: dynamicMethod],
        cloth_sizesContains: [Function: dynamicMethod],
        cloth_sizesEndsWith: [Function: dynamicMethod],
        findOneByCore_engine: [Function: dynamicMethod],
        findOneByCore_engineIn: [Function: dynamicMethod],
        findOneByCore_engineLike: [Function: dynamicMethod],
        findByCore_engine: [Function: dynamicMethod],
        findByCore_engineIn: [Function: dynamicMethod],
        findByCore_engineLike: [Function: dynamicMethod],
        countByCore_engine: [Function: dynamicMethod],
        countByCore_engineIn: [Function: dynamicMethod],
        countByCore_engineLike: [Function: dynamicMethod],
        core_engineStartsWith: [Function: dynamicMethod],
        core_engineContains: [Function: dynamicMethod],
        core_engineEndsWith: [Function: dynamicMethod],
        findOneBySize_clothes: [Function: dynamicMethod],
        findOneBySize_clothesIn: [Function: dynamicMethod],
        findOneBySize_clothesLike: [Function: dynamicMethod],
        findBySize_clothes: [Function: dynamicMethod],
        findBySize_clothesIn: [Function: dynamicMethod],
        findBySize_clothesLike: [Function: dynamicMethod],
        countBySize_clothes: [Function: dynamicMethod],
        countBySize_clothesIn: [Function: dynamicMethod],
        countBySize_clothesLike: [Function: dynamicMethod],
        size_clothesStartsWith: [Function: dynamicMethod],
        size_clothesContains: [Function: dynamicMethod],
        size_clothesEndsWith: [Function: dynamicMethod],
        findOneByColour_narrowweave: [Function: dynamicMethod],
        findOneByColour_narrowweaveIn: [Function: dynamicMethod],
        findOneByColour_narrowweaveLike: [Function: dynamicMethod],
        findByColour_narrowweave: [Function: dynamicMethod],
        findByColour_narrowweaveIn: [Function: dynamicMethod],
        findByColour_narrowweaveLike: [Function: dynamicMethod],
        countByColour_narrowweave: [Function: dynamicMethod],
        countByColour_narrowweaveIn: [Function: dynamicMethod],
        countByColour_narrowweaveLike: [Function: dynamicMethod],
        colour_narrowweaveStartsWith: [Function: dynamicMethod],
        colour_narrowweaveContains: [Function: dynamicMethod],
        colour_narrowweaveEndsWith: [Function: dynamicMethod],
        findOneByBenzinhahn: [Function: dynamicMethod],
        findOneByBenzinhahnIn: [Function: dynamicMethod],
        findOneByBenzinhahnLike: [Function: dynamicMethod],
        findByBenzinhahn: [Function: dynamicMethod],
        findByBenzinhahnIn: [Function: dynamicMethod],
        findByBenzinhahnLike: [Function: dynamicMethod],
        countByBenzinhahn: [Function: dynamicMethod],
        countByBenzinhahnIn: [Function: dynamicMethod],
        countByBenzinhahnLike: [Function: dynamicMethod],
        benzinhahnStartsWith: [Function: dynamicMethod],
        benzinhahnContains: [Function: dynamicMethod],
        benzinhahnEndsWith: [Function: dynamicMethod],
        findOneByCarpet_floopan: [Function: dynamicMethod],
        findOneByCarpet_floopanIn: [Function: dynamicMethod],
        findOneByCarpet_floopanLike: [Function: dynamicMethod],
        findByCarpet_floopan: [Function: dynamicMethod],
        findByCarpet_floopanIn: [Function: dynamicMethod],
        findByCarpet_floopanLike: [Function: dynamicMethod],
        countByCarpet_floopan: [Function: dynamicMethod],
        countByCarpet_floopanIn: [Function: dynamicMethod],
        countByCarpet_floopanLike: [Function: dynamicMethod],
        carpet_floopanStartsWith: [Function: dynamicMethod],
        carpet_floopanContains: [Function: dynamicMethod],
        carpet_floopanEndsWith: [Function: dynamicMethod],
        findOneByCarpet_footrest: [Function: dynamicMethod],
        findOneByCarpet_footrestIn: [Function: dynamicMethod],
        findOneByCarpet_footrestLike: [Function: dynamicMethod],
        findByCarpet_footrest: [Function: dynamicMethod],
        findByCarpet_footrestIn: [Function: dynamicMethod],
        findByCarpet_footrestLike: [Function: dynamicMethod],
        countByCarpet_footrest: [Function: dynamicMethod],
        countByCarpet_footrestIn: [Function: dynamicMethod],
        countByCarpet_footrestLike: [Function: dynamicMethod],
        carpet_footrestStartsWith: [Function: dynamicMethod],
        carpet_footrestContains: [Function: dynamicMethod],
        carpet_footrestEndsWith: [Function: dynamicMethod],
        findOneByCarpet_mod_sill: [Function: dynamicMethod],
        findOneByCarpet_mod_sillIn: [Function: dynamicMethod],
        findOneByCarpet_mod_sillLike: [Function: dynamicMethod],
        findByCarpet_mod_sill: [Function: dynamicMethod],
        findByCarpet_mod_sillIn: [Function: dynamicMethod],
        findByCarpet_mod_sillLike: [Function: dynamicMethod],
        countByCarpet_mod_sill: [Function: dynamicMethod],
        countByCarpet_mod_sillIn: [Function: dynamicMethod],
        countByCarpet_mod_sillLike: [Function: dynamicMethod],
        carpet_mod_sillStartsWith: [Function: dynamicMethod],
        carpet_mod_sillContains: [Function: dynamicMethod],
        carpet_mod_sillEndsWith: [Function: dynamicMethod],
        findOneByStock_data: [Function: dynamicMethod],
        findOneByStock_dataIn: [Function: dynamicMethod],
        findOneByStock_dataLike: [Function: dynamicMethod],
        findByStock_data: [Function: dynamicMethod],
        findByStock_dataIn: [Function: dynamicMethod],
        findByStock_dataLike: [Function: dynamicMethod],
        countByStock_data: [Function: dynamicMethod],
        countByStock_dataIn: [Function: dynamicMethod],
        countByStock_dataLike: [Function: dynamicMethod],
        stock_dataStartsWith: [Function: dynamicMethod],
        stock_dataContains: [Function: dynamicMethod],
        stock_dataEndsWith: [Function: dynamicMethod],
        findOneByProduct_id: [Function: dynamicMethod],
        findOneByProduct_idIn: [Function: dynamicMethod],
        findOneByProduct_idLike: [Function: dynamicMethod],
        findByProduct_id: [Function: dynamicMethod],
        findByProduct_idIn: [Function: dynamicMethod],
        findByProduct_idLike: [Function: dynamicMethod],
        countByProduct_id: [Function: dynamicMethod],
        countByProduct_idIn: [Function: dynamicMethod],
        countByProduct_idLike: [Function: dynamicMethod],
        product_idStartsWith: [Function: dynamicMethod],
        product_idContains: [Function: dynamicMethod],
        product_idEndsWith: [Function: dynamicMethod],
        findOneById: [Function: dynamicMethod],
        findOneByIdIn: [Function: dynamicMethod],
        findOneByIdLike: [Function: dynamicMethod],
        findById: [Function: dynamicMethod],
        findByIdIn: [Function: dynamicMethod],
        findByIdLike: [Function: dynamicMethod],
        countById: [Function: dynamicMethod],
        countByIdIn: [Function: dynamicMethod],
        countByIdLike: [Function: dynamicMethod],
        idStartsWith: [Function: dynamicMethod],
        idContains: [Function: dynamicMethod],
        idEndsWith: [Function: dynamicMethod],
        findOneByCreatedAt: [Function: dynamicMethod],
        findOneByCreatedAtIn: [Function: dynamicMethod],
        findOneByCreatedAtLike: [Function: dynamicMethod],
        findByCreatedAt: [Function: dynamicMethod],
        findByCreatedAtIn: [Function: dynamicMethod],
        findByCreatedAtLike: [Function: dynamicMethod],
        countByCreatedAt: [Function: dynamicMethod],
        countByCreatedAtIn: [Function: dynamicMethod],
        countByCreatedAtLike: [Function: dynamicMethod],
        createdAtStartsWith: [Function: dynamicMethod],
        createdAtContains: [Function: dynamicMethod],
        createdAtEndsWith: [Function: dynamicMethod],
        findOneByUpdatedAt: [Function: dynamicMethod],
        findOneByUpdatedAtIn: [Function: dynamicMethod],
        findOneByUpdatedAtLike: [Function: dynamicMethod],
        findByUpdatedAt: [Function: dynamicMethod],
        findByUpdatedAtIn: [Function: dynamicMethod],
        findByUpdatedAtLike: [Function: dynamicMethod],
        countByUpdatedAt: [Function: dynamicMethod],
        countByUpdatedAtIn: [Function: dynamicMethod],
        countByUpdatedAtLike: [Function: dynamicMethod],
        updatedAtStartsWith: [Function: dynamicMethod],
        updatedAtContains: [Function: dynamicMethod],
        updatedAtEndsWith: [Function: dynamicMethod] },
     productattribute: 
      { identity: 'productattribute',
        adapter: [Object],
        attributes: {},
        _cast: [Object],
        _schema: [Object],
        _validator: [Object],
        _callbacks: [Object],
        _instanceMethods: {},
        autoPK: true,
        autoCreatedAt: true,
        autoUpdatedAt: true,
        hasSchema: false,
        migrate: 'alter',
        _model: [Object],
        _transformer: [Object],
        _tableName: 'productattribute',
        _adapterDefs: [Object],
        _adapter: [Object],
        syncable: [Function],
        defaults: [Function],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        native: [Function],
        config: [Function],
        findOneById: [Function: dynamicMethod],
        findOneByIdIn: [Function: dynamicMethod],
        findOneByIdLike: [Function: dynamicMethod],
        findById: [Function: dynamicMethod],
        findByIdIn: [Function: dynamicMethod],
        findByIdLike: [Function: dynamicMethod],
        countById: [Function: dynamicMethod],
        countByIdIn: [Function: dynamicMethod],
        countByIdLike: [Function: dynamicMethod],
        idStartsWith: [Function: dynamicMethod],
        idContains: [Function: dynamicMethod],
        idEndsWith: [Function: dynamicMethod],
        findOneByCreatedAt: [Function: dynamicMethod],
        findOneByCreatedAtIn: [Function: dynamicMethod],
        findOneByCreatedAtLike: [Function: dynamicMethod],
        findByCreatedAt: [Function: dynamicMethod],
        findByCreatedAtIn: [Function: dynamicMethod],
        findByCreatedAtLike: [Function: dynamicMethod],
        countByCreatedAt: [Function: dynamicMethod],
        countByCreatedAtIn: [Function: dynamicMethod],
        countByCreatedAtLike: [Function: dynamicMethod],
        createdAtStartsWith: [Function: dynamicMethod],
        createdAtContains: [Function: dynamicMethod],
        createdAtEndsWith: [Function: dynamicMethod],
        findOneByUpdatedAt: [Function: dynamicMethod],
        findOneByUpdatedAtIn: [Function: dynamicMethod],
        findOneByUpdatedAtLike: [Function: dynamicMethod],
        findByUpdatedAt: [Function: dynamicMethod],
        findByUpdatedAtIn: [Function: dynamicMethod],
        findByUpdatedAtLike: [Function: dynamicMethod],
        countByUpdatedAt: [Function: dynamicMethod],
        countByUpdatedAtIn: [Function: dynamicMethod],
        countByUpdatedAtLike: [Function: dynamicMethod],
        updatedAtStartsWith: [Function: dynamicMethod],
        updatedAtContains: [Function: dynamicMethod],
        updatedAtEndsWith: [Function: dynamicMethod] },
     productcache: 
      { identity: 'productcache',
        adapter: [Object],
        attributes: [Object],
        _cast: [Object],
        _schema: [Object],
        _validator: [Object],
        _callbacks: [Object],
        _instanceMethods: {},
        autoPK: true,
        autoCreatedAt: true,
        autoUpdatedAt: true,
        hasSchema: false,
        migrate: 'alter',
        _model: [Object],
        _transformer: [Object],
        _tableName: 'productcache',
        _adapterDefs: [Object],
        _adapter: [Object],
        syncable: [Function],
        defaults: [Function],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        native: [Function],
        config: [Function],
        findOneByName: [Function: dynamicMethod],
        findOneByNameIn: [Function: dynamicMethod],
        findOneByNameLike: [Function: dynamicMethod],
        findByName: [Function: dynamicMethod],
        findByNameIn: [Function: dynamicMethod],
        findByNameLike: [Function: dynamicMethod],
        countByName: [Function: dynamicMethod],
        countByNameIn: [Function: dynamicMethod],
        countByNameLike: [Function: dynamicMethod],
        nameStartsWith: [Function: dynamicMethod],
        nameContains: [Function: dynamicMethod],
        nameEndsWith: [Function: dynamicMethod],
        findOneBySku: [Function: dynamicMethod],
        findOneBySkuIn: [Function: dynamicMethod],
        findOneBySkuLike: [Function: dynamicMethod],
        findBySku: [Function: dynamicMethod],
        findBySkuIn: [Function: dynamicMethod],
        findBySkuLike: [Function: dynamicMethod],
        countBySku: [Function: dynamicMethod],
        countBySkuIn: [Function: dynamicMethod],
        countBySkuLike: [Function: dynamicMethod],
        skuStartsWith: [Function: dynamicMethod],
        skuContains: [Function: dynamicMethod],
        skuEndsWith: [Function: dynamicMethod],
        findOneByShort_description: [Function: dynamicMethod],
        findOneByShort_descriptionIn: [Function: dynamicMethod],
        findOneByShort_descriptionLike: [Function: dynamicMethod],
        findByShort_description: [Function: dynamicMethod],
        findByShort_descriptionIn: [Function: dynamicMethod],
        findByShort_descriptionLike: [Function: dynamicMethod],
        countByShort_description: [Function: dynamicMethod],
        countByShort_descriptionIn: [Function: dynamicMethod],
        countByShort_descriptionLike: [Function: dynamicMethod],
        short_descriptionStartsWith: [Function: dynamicMethod],
        short_descriptionContains: [Function: dynamicMethod],
        short_descriptionEndsWith: [Function: dynamicMethod],
        findOneByDescription: [Function: dynamicMethod],
        findOneByDescriptionIn: [Function: dynamicMethod],
        findOneByDescriptionLike: [Function: dynamicMethod],
        findByDescription: [Function: dynamicMethod],
        findByDescriptionIn: [Function: dynamicMethod],
        findByDescriptionLike: [Function: dynamicMethod],
        countByDescription: [Function: dynamicMethod],
        countByDescriptionIn: [Function: dynamicMethod],
        countByDescriptionLike: [Function: dynamicMethod],
        descriptionStartsWith: [Function: dynamicMethod],
        descriptionContains: [Function: dynamicMethod],
        descriptionEndsWith: [Function: dynamicMethod],
        findOneByFittinginfo: [Function: dynamicMethod],
        findOneByFittinginfoIn: [Function: dynamicMethod],
        findOneByFittinginfoLike: [Function: dynamicMethod],
        findByFittinginfo: [Function: dynamicMethod],
        findByFittinginfoIn: [Function: dynamicMethod],
        findByFittinginfoLike: [Function: dynamicMethod],
        countByFittinginfo: [Function: dynamicMethod],
        countByFittinginfoIn: [Function: dynamicMethod],
        countByFittinginfoLike: [Function: dynamicMethod],
        fittinginfoStartsWith: [Function: dynamicMethod],
        fittinginfoContains: [Function: dynamicMethod],
        fittinginfoEndsWith: [Function: dynamicMethod],
        findOneByOld_id: [Function: dynamicMethod],
        findOneByOld_idIn: [Function: dynamicMethod],
        findOneByOld_idLike: [Function: dynamicMethod],
        findByOld_id: [Function: dynamicMethod],
        findByOld_idIn: [Function: dynamicMethod],
        findByOld_idLike: [Function: dynamicMethod],
        countByOld_id: [Function: dynamicMethod],
        countByOld_idIn: [Function: dynamicMethod],
        countByOld_idLike: [Function: dynamicMethod],
        old_idStartsWith: [Function: dynamicMethod],
        old_idContains: [Function: dynamicMethod],
        old_idEndsWith: [Function: dynamicMethod],
        findOneByApplications: [Function: dynamicMethod],
        findOneByApplicationsIn: [Function: dynamicMethod],
        findOneByApplicationsLike: [Function: dynamicMethod],
        findByApplications: [Function: dynamicMethod],
        findByApplicationsIn: [Function: dynamicMethod],
        findByApplicationsLike: [Function: dynamicMethod],
        countByApplications: [Function: dynamicMethod],
        countByApplicationsIn: [Function: dynamicMethod],
        countByApplicationsLike: [Function: dynamicMethod],
        applicationsStartsWith: [Function: dynamicMethod],
        applicationsContains: [Function: dynamicMethod],
        applicationsEndsWith: [Function: dynamicMethod],
        findOneByMetrics: [Function: dynamicMethod],
        findOneByMetricsIn: [Function: dynamicMethod],
        findOneByMetricsLike: [Function: dynamicMethod],
        findByMetrics: [Function: dynamicMethod],
        findByMetricsIn: [Function: dynamicMethod],
        findByMetricsLike: [Function: dynamicMethod],
        countByMetrics: [Function: dynamicMethod],
        countByMetricsIn: [Function: dynamicMethod],
        countByMetricsLike: [Function: dynamicMethod],
        metricsStartsWith: [Function: dynamicMethod],
        metricsContains: [Function: dynamicMethod],
        metricsEndsWith: [Function: dynamicMethod],
        findOneByWeight: [Function: dynamicMethod],
        findOneByWeightIn: [Function: dynamicMethod],
        findOneByWeightLike: [Function: dynamicMethod],
        findByWeight: [Function: dynamicMethod],
        findByWeightIn: [Function: dynamicMethod],
        findByWeightLike: [Function: dynamicMethod],
        countByWeight: [Function: dynamicMethod],
        countByWeightIn: [Function: dynamicMethod],
        countByWeightLike: [Function: dynamicMethod],
        weightStartsWith: [Function: dynamicMethod],
        weightContains: [Function: dynamicMethod],
        weightEndsWith: [Function: dynamicMethod],
        findOneByWeight_rounded: [Function: dynamicMethod],
        findOneByWeight_roundedIn: [Function: dynamicMethod],
        findOneByWeight_roundedLike: [Function: dynamicMethod],
        findByWeight_rounded: [Function: dynamicMethod],
        findByWeight_roundedIn: [Function: dynamicMethod],
        findByWeight_roundedLike: [Function: dynamicMethod],
        countByWeight_rounded: [Function: dynamicMethod],
        countByWeight_roundedIn: [Function: dynamicMethod],
        countByWeight_roundedLike: [Function: dynamicMethod],
        weight_roundedStartsWith: [Function: dynamicMethod],
        weight_roundedContains: [Function: dynamicMethod],
        weight_roundedEndsWith: [Function: dynamicMethod],
        findOneByNews_from_date: [Function: dynamicMethod],
        findOneByNews_from_dateIn: [Function: dynamicMethod],
        findOneByNews_from_dateLike: [Function: dynamicMethod],
        findByNews_from_date: [Function: dynamicMethod],
        findByNews_from_dateIn: [Function: dynamicMethod],
        findByNews_from_dateLike: [Function: dynamicMethod],
        countByNews_from_date: [Function: dynamicMethod],
        countByNews_from_dateIn: [Function: dynamicMethod],
        countByNews_from_dateLike: [Function: dynamicMethod],
        news_from_dateStartsWith: [Function: dynamicMethod],
        news_from_dateContains: [Function: dynamicMethod],
        news_from_dateEndsWith: [Function: dynamicMethod],
        findOneByUrl_path: [Function: dynamicMethod],
        findOneByUrl_pathIn: [Function: dynamicMethod],
        findOneByUrl_pathLike: [Function: dynamicMethod],
        findByUrl_path: [Function: dynamicMethod],
        findByUrl_pathIn: [Function: dynamicMethod],
        findByUrl_pathLike: [Function: dynamicMethod],
        countByUrl_path: [Function: dynamicMethod],
        countByUrl_pathIn: [Function: dynamicMethod],
        countByUrl_pathLike: [Function: dynamicMethod],
        url_pathStartsWith: [Function: dynamicMethod],
        url_pathContains: [Function: dynamicMethod],
        url_pathEndsWith: [Function: dynamicMethod],
        findOneByNews_to_date: [Function: dynamicMethod],
        findOneByNews_to_dateIn: [Function: dynamicMethod],
        findOneByNews_to_dateLike: [Function: dynamicMethod],
        findByNews_to_date: [Function: dynamicMethod],
        findByNews_to_dateIn: [Function: dynamicMethod],
        findByNews_to_dateLike: [Function: dynamicMethod],
        countByNews_to_date: [Function: dynamicMethod],
        countByNews_to_dateIn: [Function: dynamicMethod],
        countByNews_to_dateLike: [Function: dynamicMethod],
        news_to_dateStartsWith: [Function: dynamicMethod],
        news_to_dateContains: [Function: dynamicMethod],
        news_to_dateEndsWith: [Function: dynamicMethod],
        findOneByStatus: [Function: dynamicMethod],
        findOneByStatusIn: [Function: dynamicMethod],
        findOneByStatusLike: [Function: dynamicMethod],
        findByStatus: [Function: dynamicMethod],
        findByStatusIn: [Function: dynamicMethod],
        findByStatusLike: [Function: dynamicMethod],
        countByStatus: [Function: dynamicMethod],
        countByStatusIn: [Function: dynamicMethod],
        countByStatusLike: [Function: dynamicMethod],
        statusStartsWith: [Function: dynamicMethod],
        statusContains: [Function: dynamicMethod],
        statusEndsWith: [Function: dynamicMethod],
        findOneByCategory_ids: [Function: dynamicMethod],
        findOneByCategory_idsIn: [Function: dynamicMethod],
        findOneByCategory_idsLike: [Function: dynamicMethod],
        findByCategory_ids: [Function: dynamicMethod],
        findByCategory_idsIn: [Function: dynamicMethod],
        findByCategory_idsLike: [Function: dynamicMethod],
        countByCategory_ids: [Function: dynamicMethod],
        countByCategory_idsIn: [Function: dynamicMethod],
        countByCategory_idsLike: [Function: dynamicMethod],
        category_idsStartsWith: [Function: dynamicMethod],
        category_idsContains: [Function: dynamicMethod],
        category_idsEndsWith: [Function: dynamicMethod],
        findOneByUrl_key: [Function: dynamicMethod],
        findOneByUrl_keyIn: [Function: dynamicMethod],
        findOneByUrl_keyLike: [Function: dynamicMethod],
        findByUrl_key: [Function: dynamicMethod],
        findByUrl_keyIn: [Function: dynamicMethod],
        findByUrl_keyLike: [Function: dynamicMethod],
        countByUrl_key: [Function: dynamicMethod],
        countByUrl_keyIn: [Function: dynamicMethod],
        countByUrl_keyLike: [Function: dynamicMethod],
        url_keyStartsWith: [Function: dynamicMethod],
        url_keyContains: [Function: dynamicMethod],
        url_keyEndsWith: [Function: dynamicMethod],
        findOneByRequired_options: [Function: dynamicMethod],
        findOneByRequired_optionsIn: [Function: dynamicMethod],
        findOneByRequired_optionsLike: [Function: dynamicMethod],
        findByRequired_options: [Function: dynamicMethod],
        findByRequired_optionsIn: [Function: dynamicMethod],
        findByRequired_optionsLike: [Function: dynamicMethod],
        countByRequired_options: [Function: dynamicMethod],
        countByRequired_optionsIn: [Function: dynamicMethod],
        countByRequired_optionsLike: [Function: dynamicMethod],
        required_optionsStartsWith: [Function: dynamicMethod],
        required_optionsContains: [Function: dynamicMethod],
        required_optionsEndsWith: [Function: dynamicMethod],
        findOneByVisibility: [Function: dynamicMethod],
        findOneByVisibilityIn: [Function: dynamicMethod],
        findOneByVisibilityLike: [Function: dynamicMethod],
        findByVisibility: [Function: dynamicMethod],
        findByVisibilityIn: [Function: dynamicMethod],
        findByVisibilityLike: [Function: dynamicMethod],
        countByVisibility: [Function: dynamicMethod],
        countByVisibilityIn: [Function: dynamicMethod],
        countByVisibilityLike: [Function: dynamicMethod],
        visibilityStartsWith: [Function: dynamicMethod],
        visibilityContains: [Function: dynamicMethod],
        visibilityEndsWith: [Function: dynamicMethod],
        findOneByCountry_of_manufacture: [Function: dynamicMethod],
        findOneByCountry_of_manufactureIn: [Function: dynamicMethod],
        findOneByCountry_of_manufactureLike: [Function: dynamicMethod],
        findByCountry_of_manufacture: [Function: dynamicMethod],
        findByCountry_of_manufactureIn: [Function: dynamicMethod],
        findByCountry_of_manufactureLike: [Function: dynamicMethod],
        countByCountry_of_manufacture: [Function: dynamicMethod],
        countByCountry_of_manufactureIn: [Function: dynamicMethod],
        countByCountry_of_manufactureLike: [Function: dynamicMethod],
        country_of_manufactureStartsWith: [Function: dynamicMethod],
        country_of_manufactureContains: [Function: dynamicMethod],
        country_of_manufactureEndsWith: [Function: dynamicMethod],
        findOneByHas_options: [Function: dynamicMethod],
        findOneByHas_optionsIn: [Function: dynamicMethod],
        findOneByHas_optionsLike: [Function: dynamicMethod],
        findByHas_options: [Function: dynamicMethod],
        findByHas_optionsIn: [Function: dynamicMethod],
        findByHas_optionsLike: [Function: dynamicMethod],
        countByHas_options: [Function: dynamicMethod],
        countByHas_optionsIn: [Function: dynamicMethod],
        countByHas_optionsLike: [Function: dynamicMethod],
        has_optionsStartsWith: [Function: dynamicMethod],
        has_optionsContains: [Function: dynamicMethod],
        has_optionsEndsWith: [Function: dynamicMethod],
        findOneBySupplier_internal: [Function: dynamicMethod],
        findOneBySupplier_internalIn: [Function: dynamicMethod],
        findOneBySupplier_internalLike: [Function: dynamicMethod],
        findBySupplier_internal: [Function: dynamicMethod],
        findBySupplier_internalIn: [Function: dynamicMethod],
        findBySupplier_internalLike: [Function: dynamicMethod],
        countBySupplier_internal: [Function: dynamicMethod],
        countBySupplier_internalIn: [Function: dynamicMethod],
        countBySupplier_internalLike: [Function: dynamicMethod],
        supplier_internalStartsWith: [Function: dynamicMethod],
        supplier_internalContains: [Function: dynamicMethod],
        supplier_internalEndsWith: [Function: dynamicMethod],
        findOneByImage_label: [Function: dynamicMethod],
        findOneByImage_labelIn: [Function: dynamicMethod],
        findOneByImage_labelLike: [Function: dynamicMethod],
        findByImage_label: [Function: dynamicMethod],
        findByImage_labelIn: [Function: dynamicMethod],
        findByImage_labelLike: [Function: dynamicMethod],
        countByImage_label: [Function: dynamicMethod],
        countByImage_labelIn: [Function: dynamicMethod],
        countByImage_labelLike: [Function: dynamicMethod],
        image_labelStartsWith: [Function: dynamicMethod],
        image_labelContains: [Function: dynamicMethod],
        image_labelEndsWith: [Function: dynamicMethod],
        findOneByDelivery_time: [Function: dynamicMethod],
        findOneByDelivery_timeIn: [Function: dynamicMethod],
        findOneByDelivery_timeLike: [Function: dynamicMethod],
        findByDelivery_time: [Function: dynamicMethod],
        findByDelivery_timeIn: [Function: dynamicMethod],
        findByDelivery_timeLike: [Function: dynamicMethod],
        countByDelivery_time: [Function: dynamicMethod],
        countByDelivery_timeIn: [Function: dynamicMethod],
        countByDelivery_timeLike: [Function: dynamicMethod],
        delivery_timeStartsWith: [Function: dynamicMethod],
        delivery_timeContains: [Function: dynamicMethod],
        delivery_timeEndsWith: [Function: dynamicMethod],
        findOneBySmall_image_label: [Function: dynamicMethod],
        findOneBySmall_image_labelIn: [Function: dynamicMethod],
        findOneBySmall_image_labelLike: [Function: dynamicMethod],
        findBySmall_image_label: [Function: dynamicMethod],
        findBySmall_image_labelIn: [Function: dynamicMethod],
        findBySmall_image_labelLike: [Function: dynamicMethod],
        countBySmall_image_label: [Function: dynamicMethod],
        countBySmall_image_labelIn: [Function: dynamicMethod],
        countBySmall_image_labelLike: [Function: dynamicMethod],
        small_image_labelStartsWith: [Function: dynamicMethod],
        small_image_labelContains: [Function: dynamicMethod],
        small_image_labelEndsWith: [Function: dynamicMethod],
        findOneByManufacturer: [Function: dynamicMethod],
        findOneByManufacturerIn: [Function: dynamicMethod],
        findOneByManufacturerLike: [Function: dynamicMethod],
        findByManufacturer: [Function: dynamicMethod],
        findByManufacturerIn: [Function: dynamicMethod],
        findByManufacturerLike: [Function: dynamicMethod],
        countByManufacturer: [Function: dynamicMethod],
        countByManufacturerIn: [Function: dynamicMethod],
        countByManufacturerLike: [Function: dynamicMethod],
        manufacturerStartsWith: [Function: dynamicMethod],
        manufacturerContains: [Function: dynamicMethod],
        manufacturerEndsWith: [Function: dynamicMethod],
        findOneByThumbnail_label: [Function: dynamicMethod],
        findOneByThumbnail_labelIn: [Function: dynamicMethod],
        findOneByThumbnail_labelLike: [Function: dynamicMethod],
        findByThumbnail_label: [Function: dynamicMethod],
        findByThumbnail_labelIn: [Function: dynamicMethod],
        findByThumbnail_labelLike: [Function: dynamicMethod],
        countByThumbnail_label: [Function: dynamicMethod],
        countByThumbnail_labelIn: [Function: dynamicMethod],
        countByThumbnail_labelLike: [Function: dynamicMethod],
        thumbnail_labelStartsWith: [Function: dynamicMethod],
        thumbnail_labelContains: [Function: dynamicMethod],
        thumbnail_labelEndsWith: [Function: dynamicMethod],
        findOneByQuality: [Function: dynamicMethod],
        findOneByQualityIn: [Function: dynamicMethod],
        findOneByQualityLike: [Function: dynamicMethod],
        findByQuality: [Function: dynamicMethod],
        findByQualityIn: [Function: dynamicMethod],
        findByQualityLike: [Function: dynamicMethod],
        countByQuality: [Function: dynamicMethod],
        countByQualityIn: [Function: dynamicMethod],
        countByQualityLike: [Function: dynamicMethod],
        qualityStartsWith: [Function: dynamicMethod],
        qualityContains: [Function: dynamicMethod],
        qualityEndsWith: [Function: dynamicMethod],
        findOneByCreated_at: [Function: dynamicMethod],
        findOneByCreated_atIn: [Function: dynamicMethod],
        findOneByCreated_atLike: [Function: dynamicMethod],
        findByCreated_at: [Function: dynamicMethod],
        findByCreated_atIn: [Function: dynamicMethod],
        findByCreated_atLike: [Function: dynamicMethod],
        countByCreated_at: [Function: dynamicMethod],
        countByCreated_atIn: [Function: dynamicMethod],
        countByCreated_atLike: [Function: dynamicMethod],
        created_atStartsWith: [Function: dynamicMethod],
        created_atContains: [Function: dynamicMethod],
        created_atEndsWith: [Function: dynamicMethod],
        findOneByUpdated_at: [Function: dynamicMethod],
        findOneByUpdated_atIn: [Function: dynamicMethod],
        findOneByUpdated_atLike: [Function: dynamicMethod],
        findByUpdated_at: [Function: dynamicMethod],
        findByUpdated_atIn: [Function: dynamicMethod],
        findByUpdated_atLike: [Function: dynamicMethod],
        countByUpdated_at: [Function: dynamicMethod],
        countByUpdated_atIn: [Function: dynamicMethod],
        countByUpdated_atLike: [Function: dynamicMethod],
        updated_atStartsWith: [Function: dynamicMethod],
        updated_atContains: [Function: dynamicMethod],
        updated_atEndsWith: [Function: dynamicMethod],
        findOneByPrice_type: [Function: dynamicMethod],
        findOneByPrice_typeIn: [Function: dynamicMethod],
        findOneByPrice_typeLike: [Function: dynamicMethod],
        findByPrice_type: [Function: dynamicMethod],
        findByPrice_typeIn: [Function: dynamicMethod],
        findByPrice_typeLike: [Function: dynamicMethod],
        countByPrice_type: [Function: dynamicMethod],
        countByPrice_typeIn: [Function: dynamicMethod],
        countByPrice_typeLike: [Function: dynamicMethod],
        price_typeStartsWith: [Function: dynamicMethod],
        price_typeContains: [Function: dynamicMethod],
        price_typeEndsWith: [Function: dynamicMethod],
        findOneBySku_type: [Function: dynamicMethod],
        findOneBySku_typeIn: [Function: dynamicMethod],
        findOneBySku_typeLike: [Function: dynamicMethod],
        findBySku_type: [Function: dynamicMethod],
        findBySku_typeIn: [Function: dynamicMethod],
        findBySku_typeLike: [Function: dynamicMethod],
        countBySku_type: [Function: dynamicMethod],
        countBySku_typeIn: [Function: dynamicMethod],
        countBySku_typeLike: [Function: dynamicMethod],
        sku_typeStartsWith: [Function: dynamicMethod],
        sku_typeContains: [Function: dynamicMethod],
        sku_typeEndsWith: [Function: dynamicMethod],
        findOneByWeight_type: [Function: dynamicMethod],
        findOneByWeight_typeIn: [Function: dynamicMethod],
        findOneByWeight_typeLike: [Function: dynamicMethod],
        findByWeight_type: [Function: dynamicMethod],
        findByWeight_typeIn: [Function: dynamicMethod],
        findByWeight_typeLike: [Function: dynamicMethod],
        countByWeight_type: [Function: dynamicMethod],
        countByWeight_typeIn: [Function: dynamicMethod],
        countByWeight_typeLike: [Function: dynamicMethod],
        weight_typeStartsWith: [Function: dynamicMethod],
        weight_typeContains: [Function: dynamicMethod],
        weight_typeEndsWith: [Function: dynamicMethod],
        findOneByShipment_type: [Function: dynamicMethod],
        findOneByShipment_typeIn: [Function: dynamicMethod],
        findOneByShipment_typeLike: [Function: dynamicMethod],
        findByShipment_type: [Function: dynamicMethod],
        findByShipment_typeIn: [Function: dynamicMethod],
        findByShipment_typeLike: [Function: dynamicMethod],
        countByShipment_type: [Function: dynamicMethod],
        countByShipment_typeIn: [Function: dynamicMethod],
        countByShipment_typeLike: [Function: dynamicMethod],
        shipment_typeStartsWith: [Function: dynamicMethod],
        shipment_typeContains: [Function: dynamicMethod],
        shipment_typeEndsWith: [Function: dynamicMethod],
        findOneByLinks_purchased_separately: [Function: dynamicMethod],
        findOneByLinks_purchased_separatelyIn: [Function: dynamicMethod],
        findOneByLinks_purchased_separatelyLike: [Function: dynamicMethod],
        findByLinks_purchased_separately: [Function: dynamicMethod],
        findByLinks_purchased_separatelyIn: [Function: dynamicMethod],
        findByLinks_purchased_separatelyLike: [Function: dynamicMethod],
        countByLinks_purchased_separately: [Function: dynamicMethod],
        countByLinks_purchased_separatelyIn: [Function: dynamicMethod],
        countByLinks_purchased_separatelyLike: [Function: dynamicMethod],
        links_purchased_separatelyStartsWith: [Function: dynamicMethod],
        links_purchased_separatelyContains: [Function: dynamicMethod],
        links_purchased_separatelyEndsWith: [Function: dynamicMethod],
        findOneBySamples_title: [Function: dynamicMethod],
        findOneBySamples_titleIn: [Function: dynamicMethod],
        findOneBySamples_titleLike: [Function: dynamicMethod],
        findBySamples_title: [Function: dynamicMethod],
        findBySamples_titleIn: [Function: dynamicMethod],
        findBySamples_titleLike: [Function: dynamicMethod],
        countBySamples_title: [Function: dynamicMethod],
        countBySamples_titleIn: [Function: dynamicMethod],
        countBySamples_titleLike: [Function: dynamicMethod],
        samples_titleStartsWith: [Function: dynamicMethod],
        samples_titleContains: [Function: dynamicMethod],
        samples_titleEndsWith: [Function: dynamicMethod],
        findOneByLinks_title: [Function: dynamicMethod],
        findOneByLinks_titleIn: [Function: dynamicMethod],
        findOneByLinks_titleLike: [Function: dynamicMethod],
        findByLinks_title: [Function: dynamicMethod],
        findByLinks_titleIn: [Function: dynamicMethod],
        findByLinks_titleLike: [Function: dynamicMethod],
        countByLinks_title: [Function: dynamicMethod],
        countByLinks_titleIn: [Function: dynamicMethod],
        countByLinks_titleLike: [Function: dynamicMethod],
        links_titleStartsWith: [Function: dynamicMethod],
        links_titleContains: [Function: dynamicMethod],
        links_titleEndsWith: [Function: dynamicMethod],
        findOneByLinks_exist: [Function: dynamicMethod],
        findOneByLinks_existIn: [Function: dynamicMethod],
        findOneByLinks_existLike: [Function: dynamicMethod],
        findByLinks_exist: [Function: dynamicMethod],
        findByLinks_existIn: [Function: dynamicMethod],
        findByLinks_existLike: [Function: dynamicMethod],
        countByLinks_exist: [Function: dynamicMethod],
        countByLinks_existIn: [Function: dynamicMethod],
        countByLinks_existLike: [Function: dynamicMethod],
        links_existStartsWith: [Function: dynamicMethod],
        links_existContains: [Function: dynamicMethod],
        links_existEndsWith: [Function: dynamicMethod],
        findOneByPrice: [Function: dynamicMethod],
        findOneByPriceIn: [Function: dynamicMethod],
        findOneByPriceLike: [Function: dynamicMethod],
        findByPrice: [Function: dynamicMethod],
        findByPriceIn: [Function: dynamicMethod],
        findByPriceLike: [Function: dynamicMethod],
        countByPrice: [Function: dynamicMethod],
        countByPriceIn: [Function: dynamicMethod],
        countByPriceLike: [Function: dynamicMethod],
        priceStartsWith: [Function: dynamicMethod],
        priceContains: [Function: dynamicMethod],
        priceEndsWith: [Function: dynamicMethod],
        findOneByGroup_price: [Function: dynamicMethod],
        findOneByGroup_priceIn: [Function: dynamicMethod],
        findOneByGroup_priceLike: [Function: dynamicMethod],
        findByGroup_price: [Function: dynamicMethod],
        findByGroup_priceIn: [Function: dynamicMethod],
        findByGroup_priceLike: [Function: dynamicMethod],
        countByGroup_price: [Function: dynamicMethod],
        countByGroup_priceIn: [Function: dynamicMethod],
        countByGroup_priceLike: [Function: dynamicMethod],
        group_priceStartsWith: [Function: dynamicMethod],
        group_priceContains: [Function: dynamicMethod],
        group_priceEndsWith: [Function: dynamicMethod],
        findOneBySpecial_price: [Function: dynamicMethod],
        findOneBySpecial_priceIn: [Function: dynamicMethod],
        findOneBySpecial_priceLike: [Function: dynamicMethod],
        findBySpecial_price: [Function: dynamicMethod],
        findBySpecial_priceIn: [Function: dynamicMethod],
        findBySpecial_priceLike: [Function: dynamicMethod],
        countBySpecial_price: [Function: dynamicMethod],
        countBySpecial_priceIn: [Function: dynamicMethod],
        countBySpecial_priceLike: [Function: dynamicMethod],
        special_priceStartsWith: [Function: dynamicMethod],
        special_priceContains: [Function: dynamicMethod],
        special_priceEndsWith: [Function: dynamicMethod],
        findOneBySpecial_from_date: [Function: dynamicMethod],
        findOneBySpecial_from_dateIn: [Function: dynamicMethod],
        findOneBySpecial_from_dateLike: [Function: dynamicMethod],
        findBySpecial_from_date: [Function: dynamicMethod],
        findBySpecial_from_dateIn: [Function: dynamicMethod],
        findBySpecial_from_dateLike: [Function: dynamicMethod],
        countBySpecial_from_date: [Function: dynamicMethod],
        countBySpecial_from_dateIn: [Function: dynamicMethod],
        countBySpecial_from_dateLike: [Function: dynamicMethod],
        special_from_dateStartsWith: [Function: dynamicMethod],
        special_from_dateContains: [Function: dynamicMethod],
        special_from_dateEndsWith: [Function: dynamicMethod],
        findOneBySpecial_to_date: [Function: dynamicMethod],
        findOneBySpecial_to_dateIn: [Function: dynamicMethod],
        findOneBySpecial_to_dateLike: [Function: dynamicMethod],
        findBySpecial_to_date: [Function: dynamicMethod],
        findBySpecial_to_dateIn: [Function: dynamicMethod],
        findBySpecial_to_dateLike: [Function: dynamicMethod],
        countBySpecial_to_date: [Function: dynamicMethod],
        countBySpecial_to_dateIn: [Function: dynamicMethod],
        countBySpecial_to_dateLike: [Function: dynamicMethod],
        special_to_dateStartsWith: [Function: dynamicMethod],
        special_to_dateContains: [Function: dynamicMethod],
        special_to_dateEndsWith: [Function: dynamicMethod],
        findOneByCost: [Function: dynamicMethod],
        findOneByCostIn: [Function: dynamicMethod],
        findOneByCostLike: [Function: dynamicMethod],
        findByCost: [Function: dynamicMethod],
        findByCostIn: [Function: dynamicMethod],
        findByCostLike: [Function: dynamicMethod],
        countByCost: [Function: dynamicMethod],
        countByCostIn: [Function: dynamicMethod],
        countByCostLike: [Function: dynamicMethod],
        costStartsWith: [Function: dynamicMethod],
        costContains: [Function: dynamicMethod],
        costEndsWith: [Function: dynamicMethod],
        findOneByTier_price: [Function: dynamicMethod],
        findOneByTier_priceIn: [Function: dynamicMethod],
        findOneByTier_priceLike: [Function: dynamicMethod],
        findByTier_price: [Function: dynamicMethod],
        findByTier_priceIn: [Function: dynamicMethod],
        findByTier_priceLike: [Function: dynamicMethod],
        countByTier_price: [Function: dynamicMethod],
        countByTier_priceIn: [Function: dynamicMethod],
        countByTier_priceLike: [Function: dynamicMethod],
        tier_priceStartsWith: [Function: dynamicMethod],
        tier_priceContains: [Function: dynamicMethod],
        tier_priceEndsWith: [Function: dynamicMethod],
        findOneByMinimal_price: [Function: dynamicMethod],
        findOneByMinimal_priceIn: [Function: dynamicMethod],
        findOneByMinimal_priceLike: [Function: dynamicMethod],
        findByMinimal_price: [Function: dynamicMethod],
        findByMinimal_priceIn: [Function: dynamicMethod],
        findByMinimal_priceLike: [Function: dynamicMethod],
        countByMinimal_price: [Function: dynamicMethod],
        countByMinimal_priceIn: [Function: dynamicMethod],
        countByMinimal_priceLike: [Function: dynamicMethod],
        minimal_priceStartsWith: [Function: dynamicMethod],
        minimal_priceContains: [Function: dynamicMethod],
        minimal_priceEndsWith: [Function: dynamicMethod],
        findOneByMsrp_enabled: [Function: dynamicMethod],
        findOneByMsrp_enabledIn: [Function: dynamicMethod],
        findOneByMsrp_enabledLike: [Function: dynamicMethod],
        findByMsrp_enabled: [Function: dynamicMethod],
        findByMsrp_enabledIn: [Function: dynamicMethod],
        findByMsrp_enabledLike: [Function: dynamicMethod],
        countByMsrp_enabled: [Function: dynamicMethod],
        countByMsrp_enabledIn: [Function: dynamicMethod],
        countByMsrp_enabledLike: [Function: dynamicMethod],
        msrp_enabledStartsWith: [Function: dynamicMethod],
        msrp_enabledContains: [Function: dynamicMethod],
        msrp_enabledEndsWith: [Function: dynamicMethod],
        findOneByMsrp_display_actual_price_type: [Function: dynamicMethod],
        findOneByMsrp_display_actual_price_typeIn: [Function: dynamicMethod],
        findOneByMsrp_display_actual_price_typeLike: [Function: dynamicMethod],
        findByMsrp_display_actual_price_type: [Function: dynamicMethod],
        findByMsrp_display_actual_price_typeIn: [Function: dynamicMethod],
        findByMsrp_display_actual_price_typeLike: [Function: dynamicMethod],
        countByMsrp_display_actual_price_type: [Function: dynamicMethod],
        countByMsrp_display_actual_price_typeIn: [Function: dynamicMethod],
        countByMsrp_display_actual_price_typeLike: [Function: dynamicMethod],
        msrp_display_actual_price_typeStartsWith: [Function: dynamicMethod],
        msrp_display_actual_price_typeContains: [Function: dynamicMethod],
        msrp_display_actual_price_typeEndsWith: [Function: dynamicMethod],
        findOneByMsrp: [Function: dynamicMethod],
        findOneByMsrpIn: [Function: dynamicMethod],
        findOneByMsrpLike: [Function: dynamicMethod],
        findByMsrp: [Function: dynamicMethod],
        findByMsrpIn: [Function: dynamicMethod],
        findByMsrpLike: [Function: dynamicMethod],
        countByMsrp: [Function: dynamicMethod],
        countByMsrpIn: [Function: dynamicMethod],
        countByMsrpLike: [Function: dynamicMethod],
        msrpStartsWith: [Function: dynamicMethod],
        msrpContains: [Function: dynamicMethod],
        msrpEndsWith: [Function: dynamicMethod],
        findOneByEnable_googlecheckout: [Function: dynamicMethod],
        findOneByEnable_googlecheckoutIn: [Function: dynamicMethod],
        findOneByEnable_googlecheckoutLike: [Function: dynamicMethod],
        findByEnable_googlecheckout: [Function: dynamicMethod],
        findByEnable_googlecheckoutIn: [Function: dynamicMethod],
        findByEnable_googlecheckoutLike: [Function: dynamicMethod],
        countByEnable_googlecheckout: [Function: dynamicMethod],
        countByEnable_googlecheckoutIn: [Function: dynamicMethod],
        countByEnable_googlecheckoutLike: [Function: dynamicMethod],
        enable_googlecheckoutStartsWith: [Function: dynamicMethod],
        enable_googlecheckoutContains: [Function: dynamicMethod],
        enable_googlecheckoutEndsWith: [Function: dynamicMethod],
        findOneByTax_class_id: [Function: dynamicMethod],
        findOneByTax_class_idIn: [Function: dynamicMethod],
        findOneByTax_class_idLike: [Function: dynamicMethod],
        findByTax_class_id: [Function: dynamicMethod],
        findByTax_class_idIn: [Function: dynamicMethod],
        findByTax_class_idLike: [Function: dynamicMethod],
        countByTax_class_id: [Function: dynamicMethod],
        countByTax_class_idIn: [Function: dynamicMethod],
        countByTax_class_idLike: [Function: dynamicMethod],
        tax_class_idStartsWith: [Function: dynamicMethod],
        tax_class_idContains: [Function: dynamicMethod],
        tax_class_idEndsWith: [Function: dynamicMethod],
        findOneByPrice_view: [Function: dynamicMethod],
        findOneByPrice_viewIn: [Function: dynamicMethod],
        findOneByPrice_viewLike: [Function: dynamicMethod],
        findByPrice_view: [Function: dynamicMethod],
        findByPrice_viewIn: [Function: dynamicMethod],
        findByPrice_viewLike: [Function: dynamicMethod],
        countByPrice_view: [Function: dynamicMethod],
        countByPrice_viewIn: [Function: dynamicMethod],
        countByPrice_viewLike: [Function: dynamicMethod],
        price_viewStartsWith: [Function: dynamicMethod],
        price_viewContains: [Function: dynamicMethod],
        price_viewEndsWith: [Function: dynamicMethod],
        findOneByCost_price: [Function: dynamicMethod],
        findOneByCost_priceIn: [Function: dynamicMethod],
        findOneByCost_priceLike: [Function: dynamicMethod],
        findByCost_price: [Function: dynamicMethod],
        findByCost_priceIn: [Function: dynamicMethod],
        findByCost_priceLike: [Function: dynamicMethod],
        countByCost_price: [Function: dynamicMethod],
        countByCost_priceIn: [Function: dynamicMethod],
        countByCost_priceLike: [Function: dynamicMethod],
        cost_priceStartsWith: [Function: dynamicMethod],
        cost_priceContains: [Function: dynamicMethod],
        cost_priceEndsWith: [Function: dynamicMethod],
        findOneByVwheritage_price_pound: [Function: dynamicMethod],
        findOneByVwheritage_price_poundIn: [Function: dynamicMethod],
        findOneByVwheritage_price_poundLike: [Function: dynamicMethod],
        findByVwheritage_price_pound: [Function: dynamicMethod],
        findByVwheritage_price_poundIn: [Function: dynamicMethod],
        findByVwheritage_price_poundLike: [Function: dynamicMethod],
        countByVwheritage_price_pound: [Function: dynamicMethod],
        countByVwheritage_price_poundIn: [Function: dynamicMethod],
        countByVwheritage_price_poundLike: [Function: dynamicMethod],
        vwheritage_price_poundStartsWith: [Function: dynamicMethod],
        vwheritage_price_poundContains: [Function: dynamicMethod],
        vwheritage_price_poundEndsWith: [Function: dynamicMethod],
        findOneByRecommend_price: [Function: dynamicMethod],
        findOneByRecommend_priceIn: [Function: dynamicMethod],
        findOneByRecommend_priceLike: [Function: dynamicMethod],
        findByRecommend_price: [Function: dynamicMethod],
        findByRecommend_priceIn: [Function: dynamicMethod],
        findByRecommend_priceLike: [Function: dynamicMethod],
        countByRecommend_price: [Function: dynamicMethod],
        countByRecommend_priceIn: [Function: dynamicMethod],
        countByRecommend_priceLike: [Function: dynamicMethod],
        recommend_priceStartsWith: [Function: dynamicMethod],
        recommend_priceContains: [Function: dynamicMethod],
        recommend_priceEndsWith: [Function: dynamicMethod],
        findOneByRecommend_price_netto: [Function: dynamicMethod],
        findOneByRecommend_price_nettoIn: [Function: dynamicMethod],
        findOneByRecommend_price_nettoLike: [Function: dynamicMethod],
        findByRecommend_price_netto: [Function: dynamicMethod],
        findByRecommend_price_nettoIn: [Function: dynamicMethod],
        findByRecommend_price_nettoLike: [Function: dynamicMethod],
        countByRecommend_price_netto: [Function: dynamicMethod],
        countByRecommend_price_nettoIn: [Function: dynamicMethod],
        countByRecommend_price_nettoLike: [Function: dynamicMethod],
        recommend_price_nettoStartsWith: [Function: dynamicMethod],
        recommend_price_nettoContains: [Function: dynamicMethod],
        recommend_price_nettoEndsWith: [Function: dynamicMethod],
        findOneByMeta_title: [Function: dynamicMethod],
        findOneByMeta_titleIn: [Function: dynamicMethod],
        findOneByMeta_titleLike: [Function: dynamicMethod],
        findByMeta_title: [Function: dynamicMethod],
        findByMeta_titleIn: [Function: dynamicMethod],
        findByMeta_titleLike: [Function: dynamicMethod],
        countByMeta_title: [Function: dynamicMethod],
        countByMeta_titleIn: [Function: dynamicMethod],
        countByMeta_titleLike: [Function: dynamicMethod],
        meta_titleStartsWith: [Function: dynamicMethod],
        meta_titleContains: [Function: dynamicMethod],
        meta_titleEndsWith: [Function: dynamicMethod],
        findOneByMeta_keyword: [Function: dynamicMethod],
        findOneByMeta_keywordIn: [Function: dynamicMethod],
        findOneByMeta_keywordLike: [Function: dynamicMethod],
        findByMeta_keyword: [Function: dynamicMethod],
        findByMeta_keywordIn: [Function: dynamicMethod],
        findByMeta_keywordLike: [Function: dynamicMethod],
        countByMeta_keyword: [Function: dynamicMethod],
        countByMeta_keywordIn: [Function: dynamicMethod],
        countByMeta_keywordLike: [Function: dynamicMethod],
        meta_keywordStartsWith: [Function: dynamicMethod],
        meta_keywordContains: [Function: dynamicMethod],
        meta_keywordEndsWith: [Function: dynamicMethod],
        findOneByMeta_description: [Function: dynamicMethod],
        findOneByMeta_descriptionIn: [Function: dynamicMethod],
        findOneByMeta_descriptionLike: [Function: dynamicMethod],
        findByMeta_description: [Function: dynamicMethod],
        findByMeta_descriptionIn: [Function: dynamicMethod],
        findByMeta_descriptionLike: [Function: dynamicMethod],
        countByMeta_description: [Function: dynamicMethod],
        countByMeta_descriptionIn: [Function: dynamicMethod],
        countByMeta_descriptionLike: [Function: dynamicMethod],
        meta_descriptionStartsWith: [Function: dynamicMethod],
        meta_descriptionContains: [Function: dynamicMethod],
        meta_descriptionEndsWith: [Function: dynamicMethod],
        findOneByMeta_autogenerate: [Function: dynamicMethod],
        findOneByMeta_autogenerateIn: [Function: dynamicMethod],
        findOneByMeta_autogenerateLike: [Function: dynamicMethod],
        findByMeta_autogenerate: [Function: dynamicMethod],
        findByMeta_autogenerateIn: [Function: dynamicMethod],
        findByMeta_autogenerateLike: [Function: dynamicMethod],
        countByMeta_autogenerate: [Function: dynamicMethod],
        countByMeta_autogenerateIn: [Function: dynamicMethod],
        countByMeta_autogenerateLike: [Function: dynamicMethod],
        meta_autogenerateStartsWith: [Function: dynamicMethod],
        meta_autogenerateContains: [Function: dynamicMethod],
        meta_autogenerateEndsWith: [Function: dynamicMethod],
        findOneByIs_recurring: [Function: dynamicMethod],
        findOneByIs_recurringIn: [Function: dynamicMethod],
        findOneByIs_recurringLike: [Function: dynamicMethod],
        findByIs_recurring: [Function: dynamicMethod],
        findByIs_recurringIn: [Function: dynamicMethod],
        findByIs_recurringLike: [Function: dynamicMethod],
        countByIs_recurring: [Function: dynamicMethod],
        countByIs_recurringIn: [Function: dynamicMethod],
        countByIs_recurringLike: [Function: dynamicMethod],
        is_recurringStartsWith: [Function: dynamicMethod],
        is_recurringContains: [Function: dynamicMethod],
        is_recurringEndsWith: [Function: dynamicMethod],
        findOneByRecurring_profile: [Function: dynamicMethod],
        findOneByRecurring_profileIn: [Function: dynamicMethod],
        findOneByRecurring_profileLike: [Function: dynamicMethod],
        findByRecurring_profile: [Function: dynamicMethod],
        findByRecurring_profileIn: [Function: dynamicMethod],
        findByRecurring_profileLike: [Function: dynamicMethod],
        countByRecurring_profile: [Function: dynamicMethod],
        countByRecurring_profileIn: [Function: dynamicMethod],
        countByRecurring_profileLike: [Function: dynamicMethod],
        recurring_profileStartsWith: [Function: dynamicMethod],
        recurring_profileContains: [Function: dynamicMethod],
        recurring_profileEndsWith: [Function: dynamicMethod],
        findOneByCustom_design: [Function: dynamicMethod],
        findOneByCustom_designIn: [Function: dynamicMethod],
        findOneByCustom_designLike: [Function: dynamicMethod],
        findByCustom_design: [Function: dynamicMethod],
        findByCustom_designIn: [Function: dynamicMethod],
        findByCustom_designLike: [Function: dynamicMethod],
        countByCustom_design: [Function: dynamicMethod],
        countByCustom_designIn: [Function: dynamicMethod],
        countByCustom_designLike: [Function: dynamicMethod],
        custom_designStartsWith: [Function: dynamicMethod],
        custom_designContains: [Function: dynamicMethod],
        custom_designEndsWith: [Function: dynamicMethod],
        findOneByCustom_design_from: [Function: dynamicMethod],
        findOneByCustom_design_fromIn: [Function: dynamicMethod],
        findOneByCustom_design_fromLike: [Function: dynamicMethod],
        findByCustom_design_from: [Function: dynamicMethod],
        findByCustom_design_fromIn: [Function: dynamicMethod],
        findByCustom_design_fromLike: [Function: dynamicMethod],
        countByCustom_design_from: [Function: dynamicMethod],
        countByCustom_design_fromIn: [Function: dynamicMethod],
        countByCustom_design_fromLike: [Function: dynamicMethod],
        custom_design_fromStartsWith: [Function: dynamicMethod],
        custom_design_fromContains: [Function: dynamicMethod],
        custom_design_fromEndsWith: [Function: dynamicMethod],
        findOneByCustom_design_to: [Function: dynamicMethod],
        findOneByCustom_design_toIn: [Function: dynamicMethod],
        findOneByCustom_design_toLike: [Function: dynamicMethod],
        findByCustom_design_to: [Function: dynamicMethod],
        findByCustom_design_toIn: [Function: dynamicMethod],
        findByCustom_design_toLike: [Function: dynamicMethod],
        countByCustom_design_to: [Function: dynamicMethod],
        countByCustom_design_toIn: [Function: dynamicMethod],
        countByCustom_design_toLike: [Function: dynamicMethod],
        custom_design_toStartsWith: [Function: dynamicMethod],
        custom_design_toContains: [Function: dynamicMethod],
        custom_design_toEndsWith: [Function: dynamicMethod],
        findOneByCustom_layout_update: [Function: dynamicMethod],
        findOneByCustom_layout_updateIn: [Function: dynamicMethod],
        findOneByCustom_layout_updateLike: [Function: dynamicMethod],
        findByCustom_layout_update: [Function: dynamicMethod],
        findByCustom_layout_updateIn: [Function: dynamicMethod],
        findByCustom_layout_updateLike: [Function: dynamicMethod],
        countByCustom_layout_update: [Function: dynamicMethod],
        countByCustom_layout_updateIn: [Function: dynamicMethod],
        countByCustom_layout_updateLike: [Function: dynamicMethod],
        custom_layout_updateStartsWith: [Function: dynamicMethod],
        custom_layout_updateContains: [Function: dynamicMethod],
        custom_layout_updateEndsWith: [Function: dynamicMethod],
        findOneByPage_layout: [Function: dynamicMethod],
        findOneByPage_layoutIn: [Function: dynamicMethod],
        findOneByPage_layoutLike: [Function: dynamicMethod],
        findByPage_layout: [Function: dynamicMethod],
        findByPage_layoutIn: [Function: dynamicMethod],
        findByPage_layoutLike: [Function: dynamicMethod],
        countByPage_layout: [Function: dynamicMethod],
        countByPage_layoutIn: [Function: dynamicMethod],
        countByPage_layoutLike: [Function: dynamicMethod],
        page_layoutStartsWith: [Function: dynamicMethod],
        page_layoutContains: [Function: dynamicMethod],
        page_layoutEndsWith: [Function: dynamicMethod],
        findOneByOptions_container: [Function: dynamicMethod],
        findOneByOptions_containerIn: [Function: dynamicMethod],
        findOneByOptions_containerLike: [Function: dynamicMethod],
        findByOptions_container: [Function: dynamicMethod],
        findByOptions_containerIn: [Function: dynamicMethod],
        findByOptions_containerLike: [Function: dynamicMethod],
        countByOptions_container: [Function: dynamicMethod],
        countByOptions_containerIn: [Function: dynamicMethod],
        countByOptions_containerLike: [Function: dynamicMethod],
        options_containerStartsWith: [Function: dynamicMethod],
        options_containerContains: [Function: dynamicMethod],
        options_containerEndsWith: [Function: dynamicMethod],
        findOneByGift_message_available: [Function: dynamicMethod],
        findOneByGift_message_availableIn: [Function: dynamicMethod],
        findOneByGift_message_availableLike: [Function: dynamicMethod],
        findByGift_message_available: [Function: dynamicMethod],
        findByGift_message_availableIn: [Function: dynamicMethod],
        findByGift_message_availableLike: [Function: dynamicMethod],
        countByGift_message_available: [Function: dynamicMethod],
        countByGift_message_availableIn: [Function: dynamicMethod],
        countByGift_message_availableLike: [Function: dynamicMethod],
        gift_message_availableStartsWith: [Function: dynamicMethod],
        gift_message_availableContains: [Function: dynamicMethod],
        gift_message_availableEndsWith: [Function: dynamicMethod],
        findOneByPackage_id: [Function: dynamicMethod],
        findOneByPackage_idIn: [Function: dynamicMethod],
        findOneByPackage_idLike: [Function: dynamicMethod],
        findByPackage_id: [Function: dynamicMethod],
        findByPackage_idIn: [Function: dynamicMethod],
        findByPackage_idLike: [Function: dynamicMethod],
        countByPackage_id: [Function: dynamicMethod],
        countByPackage_idIn: [Function: dynamicMethod],
        countByPackage_idLike: [Function: dynamicMethod],
        package_idStartsWith: [Function: dynamicMethod],
        package_idContains: [Function: dynamicMethod],
        package_idEndsWith: [Function: dynamicMethod],
        findOneBySuperstageshow: [Function: dynamicMethod],
        findOneBySuperstageshowIn: [Function: dynamicMethod],
        findOneBySuperstageshowLike: [Function: dynamicMethod],
        findBySuperstageshow: [Function: dynamicMethod],
        findBySuperstageshowIn: [Function: dynamicMethod],
        findBySuperstageshowLike: [Function: dynamicMethod],
        countBySuperstageshow: [Function: dynamicMethod],
        countBySuperstageshowIn: [Function: dynamicMethod],
        countBySuperstageshowLike: [Function: dynamicMethod],
        superstageshowStartsWith: [Function: dynamicMethod],
        superstageshowContains: [Function: dynamicMethod],
        superstageshowEndsWith: [Function: dynamicMethod],
        findOneByStock_vwheritage_qty: [Function: dynamicMethod],
        findOneByStock_vwheritage_qtyIn: [Function: dynamicMethod],
        findOneByStock_vwheritage_qtyLike: [Function: dynamicMethod],
        findByStock_vwheritage_qty: [Function: dynamicMethod],
        findByStock_vwheritage_qtyIn: [Function: dynamicMethod],
        findByStock_vwheritage_qtyLike: [Function: dynamicMethod],
        countByStock_vwheritage_qty: [Function: dynamicMethod],
        countByStock_vwheritage_qtyIn: [Function: dynamicMethod],
        countByStock_vwheritage_qtyLike: [Function: dynamicMethod],
        stock_vwheritage_qtyStartsWith: [Function: dynamicMethod],
        stock_vwheritage_qtyContains: [Function: dynamicMethod],
        stock_vwheritage_qtyEndsWith: [Function: dynamicMethod],
        findOneByStock_vwheritage_messagecode: [Function: dynamicMethod],
        findOneByStock_vwheritage_messagecodeIn: [Function: dynamicMethod],
        findOneByStock_vwheritage_messagecodeLike: [Function: dynamicMethod],
        findByStock_vwheritage_messagecode: [Function: dynamicMethod],
        findByStock_vwheritage_messagecodeIn: [Function: dynamicMethod],
        findByStock_vwheritage_messagecodeLike: [Function: dynamicMethod],
        countByStock_vwheritage_messagecode: [Function: dynamicMethod],
        countByStock_vwheritage_messagecodeIn: [Function: dynamicMethod],
        countByStock_vwheritage_messagecodeLike: [Function: dynamicMethod],
        stock_vwheritage_messagecodeStartsWith: [Function: dynamicMethod],
        stock_vwheritage_messagecodeContains: [Function: dynamicMethod],
        stock_vwheritage_messagecodeEndsWith: [Function: dynamicMethod],
        findOneByStock_vwheritage_dueweeks: [Function: dynamicMethod],
        findOneByStock_vwheritage_dueweeksIn: [Function: dynamicMethod],
        findOneByStock_vwheritage_dueweeksLike: [Function: dynamicMethod],
        findByStock_vwheritage_dueweeks: [Function: dynamicMethod],
        findByStock_vwheritage_dueweeksIn: [Function: dynamicMethod],
        findByStock_vwheritage_dueweeksLike: [Function: dynamicMethod],
        countByStock_vwheritage_dueweeks: [Function: dynamicMethod],
        countByStock_vwheritage_dueweeksIn: [Function: dynamicMethod],
        countByStock_vwheritage_dueweeksLike: [Function: dynamicMethod],
        stock_vwheritage_dueweeksStartsWith: [Function: dynamicMethod],
        stock_vwheritage_dueweeksContains: [Function: dynamicMethod],
        stock_vwheritage_dueweeksEndsWith: [Function: dynamicMethod],
        findOneByStock_strichweg_qty: [Function: dynamicMethod],
        findOneByStock_strichweg_qtyIn: [Function: dynamicMethod],
        findOneByStock_strichweg_qtyLike: [Function: dynamicMethod],
        findByStock_strichweg_qty: [Function: dynamicMethod],
        findByStock_strichweg_qtyIn: [Function: dynamicMethod],
        findByStock_strichweg_qtyLike: [Function: dynamicMethod],
        countByStock_strichweg_qty: [Function: dynamicMethod],
        countByStock_strichweg_qtyIn: [Function: dynamicMethod],
        countByStock_strichweg_qtyLike: [Function: dynamicMethod],
        stock_strichweg_qtyStartsWith: [Function: dynamicMethod],
        stock_strichweg_qtyContains: [Function: dynamicMethod],
        stock_strichweg_qtyEndsWith: [Function: dynamicMethod],
        findOneByStock_strichweg_range: [Function: dynamicMethod],
        findOneByStock_strichweg_rangeIn: [Function: dynamicMethod],
        findOneByStock_strichweg_rangeLike: [Function: dynamicMethod],
        findByStock_strichweg_range: [Function: dynamicMethod],
        findByStock_strichweg_rangeIn: [Function: dynamicMethod],
        findByStock_strichweg_rangeLike: [Function: dynamicMethod],
        countByStock_strichweg_range: [Function: dynamicMethod],
        countByStock_strichweg_rangeIn: [Function: dynamicMethod],
        countByStock_strichweg_rangeLike: [Function: dynamicMethod],
        stock_strichweg_rangeStartsWith: [Function: dynamicMethod],
        stock_strichweg_rangeContains: [Function: dynamicMethod],
        stock_strichweg_rangeEndsWith: [Function: dynamicMethod],
        findOneByStock_strichweg_row: [Function: dynamicMethod],
        findOneByStock_strichweg_rowIn: [Function: dynamicMethod],
        findOneByStock_strichweg_rowLike: [Function: dynamicMethod],
        findByStock_strichweg_row: [Function: dynamicMethod],
        findByStock_strichweg_rowIn: [Function: dynamicMethod],
        findByStock_strichweg_rowLike: [Function: dynamicMethod],
        countByStock_strichweg_row: [Function: dynamicMethod],
        countByStock_strichweg_rowIn: [Function: dynamicMethod],
        countByStock_strichweg_rowLike: [Function: dynamicMethod],
        stock_strichweg_rowStartsWith: [Function: dynamicMethod],
        stock_strichweg_rowContains: [Function: dynamicMethod],
        stock_strichweg_rowEndsWith: [Function: dynamicMethod],
        findOneBySpecial_order: [Function: dynamicMethod],
        findOneBySpecial_orderIn: [Function: dynamicMethod],
        findOneBySpecial_orderLike: [Function: dynamicMethod],
        findBySpecial_order: [Function: dynamicMethod],
        findBySpecial_orderIn: [Function: dynamicMethod],
        findBySpecial_orderLike: [Function: dynamicMethod],
        countBySpecial_order: [Function: dynamicMethod],
        countBySpecial_orderIn: [Function: dynamicMethod],
        countBySpecial_orderLike: [Function: dynamicMethod],
        special_orderStartsWith: [Function: dynamicMethod],
        special_orderContains: [Function: dynamicMethod],
        special_orderEndsWith: [Function: dynamicMethod],
        findOneByCloth_sizes: [Function: dynamicMethod],
        findOneByCloth_sizesIn: [Function: dynamicMethod],
        findOneByCloth_sizesLike: [Function: dynamicMethod],
        findByCloth_sizes: [Function: dynamicMethod],
        findByCloth_sizesIn: [Function: dynamicMethod],
        findByCloth_sizesLike: [Function: dynamicMethod],
        countByCloth_sizes: [Function: dynamicMethod],
        countByCloth_sizesIn: [Function: dynamicMethod],
        countByCloth_sizesLike: [Function: dynamicMethod],
        cloth_sizesStartsWith: [Function: dynamicMethod],
        cloth_sizesContains: [Function: dynamicMethod],
        cloth_sizesEndsWith: [Function: dynamicMethod],
        findOneByCore_engine: [Function: dynamicMethod],
        findOneByCore_engineIn: [Function: dynamicMethod],
        findOneByCore_engineLike: [Function: dynamicMethod],
        findByCore_engine: [Function: dynamicMethod],
        findByCore_engineIn: [Function: dynamicMethod],
        findByCore_engineLike: [Function: dynamicMethod],
        countByCore_engine: [Function: dynamicMethod],
        countByCore_engineIn: [Function: dynamicMethod],
        countByCore_engineLike: [Function: dynamicMethod],
        core_engineStartsWith: [Function: dynamicMethod],
        core_engineContains: [Function: dynamicMethod],
        core_engineEndsWith: [Function: dynamicMethod],
        findOneBySize_clothes: [Function: dynamicMethod],
        findOneBySize_clothesIn: [Function: dynamicMethod],
        findOneBySize_clothesLike: [Function: dynamicMethod],
        findBySize_clothes: [Function: dynamicMethod],
        findBySize_clothesIn: [Function: dynamicMethod],
        findBySize_clothesLike: [Function: dynamicMethod],
        countBySize_clothes: [Function: dynamicMethod],
        countBySize_clothesIn: [Function: dynamicMethod],
        countBySize_clothesLike: [Function: dynamicMethod],
        size_clothesStartsWith: [Function: dynamicMethod],
        size_clothesContains: [Function: dynamicMethod],
        size_clothesEndsWith: [Function: dynamicMethod],
        findOneByColour_narrowweave: [Function: dynamicMethod],
        findOneByColour_narrowweaveIn: [Function: dynamicMethod],
        findOneByColour_narrowweaveLike: [Function: dynamicMethod],
        findByColour_narrowweave: [Function: dynamicMethod],
        findByColour_narrowweaveIn: [Function: dynamicMethod],
        findByColour_narrowweaveLike: [Function: dynamicMethod],
        countByColour_narrowweave: [Function: dynamicMethod],
        countByColour_narrowweaveIn: [Function: dynamicMethod],
        countByColour_narrowweaveLike: [Function: dynamicMethod],
        colour_narrowweaveStartsWith: [Function: dynamicMethod],
        colour_narrowweaveContains: [Function: dynamicMethod],
        colour_narrowweaveEndsWith: [Function: dynamicMethod],
        findOneByBenzinhahn: [Function: dynamicMethod],
        findOneByBenzinhahnIn: [Function: dynamicMethod],
        findOneByBenzinhahnLike: [Function: dynamicMethod],
        findByBenzinhahn: [Function: dynamicMethod],
        findByBenzinhahnIn: [Function: dynamicMethod],
        findByBenzinhahnLike: [Function: dynamicMethod],
        countByBenzinhahn: [Function: dynamicMethod],
        countByBenzinhahnIn: [Function: dynamicMethod],
        countByBenzinhahnLike: [Function: dynamicMethod],
        benzinhahnStartsWith: [Function: dynamicMethod],
        benzinhahnContains: [Function: dynamicMethod],
        benzinhahnEndsWith: [Function: dynamicMethod],
        findOneByCarpet_floopan: [Function: dynamicMethod],
        findOneByCarpet_floopanIn: [Function: dynamicMethod],
        findOneByCarpet_floopanLike: [Function: dynamicMethod],
        findByCarpet_floopan: [Function: dynamicMethod],
        findByCarpet_floopanIn: [Function: dynamicMethod],
        findByCarpet_floopanLike: [Function: dynamicMethod],
        countByCarpet_floopan: [Function: dynamicMethod],
        countByCarpet_floopanIn: [Function: dynamicMethod],
        countByCarpet_floopanLike: [Function: dynamicMethod],
        carpet_floopanStartsWith: [Function: dynamicMethod],
        carpet_floopanContains: [Function: dynamicMethod],
        carpet_floopanEndsWith: [Function: dynamicMethod],
        findOneByCarpet_footrest: [Function: dynamicMethod],
        findOneByCarpet_footrestIn: [Function: dynamicMethod],
        findOneByCarpet_footrestLike: [Function: dynamicMethod],
        findByCarpet_footrest: [Function: dynamicMethod],
        findByCarpet_footrestIn: [Function: dynamicMethod],
        findByCarpet_footrestLike: [Function: dynamicMethod],
        countByCarpet_footrest: [Function: dynamicMethod],
        countByCarpet_footrestIn: [Function: dynamicMethod],
        countByCarpet_footrestLike: [Function: dynamicMethod],
        carpet_footrestStartsWith: [Function: dynamicMethod],
        carpet_footrestContains: [Function: dynamicMethod],
        carpet_footrestEndsWith: [Function: dynamicMethod],
        findOneByCarpet_mod_sill: [Function: dynamicMethod],
        findOneByCarpet_mod_sillIn: [Function: dynamicMethod],
        findOneByCarpet_mod_sillLike: [Function: dynamicMethod],
        findByCarpet_mod_sill: [Function: dynamicMethod],
        findByCarpet_mod_sillIn: [Function: dynamicMethod],
        findByCarpet_mod_sillLike: [Function: dynamicMethod],
        countByCarpet_mod_sill: [Function: dynamicMethod],
        countByCarpet_mod_sillIn: [Function: dynamicMethod],
        countByCarpet_mod_sillLike: [Function: dynamicMethod],
        carpet_mod_sillStartsWith: [Function: dynamicMethod],
        carpet_mod_sillContains: [Function: dynamicMethod],
        carpet_mod_sillEndsWith: [Function: dynamicMethod],
        findOneByStock_data: [Function: dynamicMethod],
        findOneByStock_dataIn: [Function: dynamicMethod],
        findOneByStock_dataLike: [Function: dynamicMethod],
        findByStock_data: [Function: dynamicMethod],
        findByStock_dataIn: [Function: dynamicMethod],
        findByStock_dataLike: [Function: dynamicMethod],
        countByStock_data: [Function: dynamicMethod],
        countByStock_dataIn: [Function: dynamicMethod],
        countByStock_dataLike: [Function: dynamicMethod],
        stock_dataStartsWith: [Function: dynamicMethod],
        stock_dataContains: [Function: dynamicMethod],
        stock_dataEndsWith: [Function: dynamicMethod],
        findOneByProduct_id: [Function: dynamicMethod],
        findOneByProduct_idIn: [Function: dynamicMethod],
        findOneByProduct_idLike: [Function: dynamicMethod],
        findByProduct_id: [Function: dynamicMethod],
        findByProduct_idIn: [Function: dynamicMethod],
        findByProduct_idLike: [Function: dynamicMethod],
        countByProduct_id: [Function: dynamicMethod],
        countByProduct_idIn: [Function: dynamicMethod],
        countByProduct_idLike: [Function: dynamicMethod],
        product_idStartsWith: [Function: dynamicMethod],
        product_idContains: [Function: dynamicMethod],
        product_idEndsWith: [Function: dynamicMethod],
        findOneById: [Function: dynamicMethod],
        findOneByIdIn: [Function: dynamicMethod],
        findOneByIdLike: [Function: dynamicMethod],
        findById: [Function: dynamicMethod],
        findByIdIn: [Function: dynamicMethod],
        findByIdLike: [Function: dynamicMethod],
        countById: [Function: dynamicMethod],
        countByIdIn: [Function: dynamicMethod],
        countByIdLike: [Function: dynamicMethod],
        idStartsWith: [Function: dynamicMethod],
        idContains: [Function: dynamicMethod],
        idEndsWith: [Function: dynamicMethod],
        findOneByCreatedAt: [Function: dynamicMethod],
        findOneByCreatedAtIn: [Function: dynamicMethod],
        findOneByCreatedAtLike: [Function: dynamicMethod],
        findByCreatedAt: [Function: dynamicMethod],
        findByCreatedAtIn: [Function: dynamicMethod],
        findByCreatedAtLike: [Function: dynamicMethod],
        countByCreatedAt: [Function: dynamicMethod],
        countByCreatedAtIn: [Function: dynamicMethod],
        countByCreatedAtLike: [Function: dynamicMethod],
        createdAtStartsWith: [Function: dynamicMethod],
        createdAtContains: [Function: dynamicMethod],
        createdAtEndsWith: [Function: dynamicMethod],
        findOneByUpdatedAt: [Function: dynamicMethod],
        findOneByUpdatedAtIn: [Function: dynamicMethod],
        findOneByUpdatedAtLike: [Function: dynamicMethod],
        findByUpdatedAt: [Function: dynamicMethod],
        findByUpdatedAtIn: [Function: dynamicMethod],
        findByUpdatedAtLike: [Function: dynamicMethod],
        countByUpdatedAt: [Function: dynamicMethod],
        countByUpdatedAtIn: [Function: dynamicMethod],
        countByUpdatedAtLike: [Function: dynamicMethod],
        updatedAtStartsWith: [Function: dynamicMethod],
        updatedAtContains: [Function: dynamicMethod],
        updatedAtEndsWith: [Function: dynamicMethod] },
     store: 
      { identity: 'store',
        adapter: [Object],
        attributes: [Object],
        _cast: [Object],
        _schema: [Object],
        _validator: [Object],
        _callbacks: [Object],
        _instanceMethods: {},
        autoPK: true,
        autoCreatedAt: true,
        autoUpdatedAt: true,
        hasSchema: true,
        migrate: 'alter',
        _model: [Object],
        _transformer: [Object],
        _tableName: 'store',
        _adapterDefs: [Object],
        _adapter: [Object],
        syncable: [Function],
        defaults: [Function],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        product_items: [Function],
        store_tree: [Function],
        config: [Function],
        findOneById: [Function: dynamicMethod],
        findOneByIdIn: [Function: dynamicMethod],
        findOneByIdLike: [Function: dynamicMethod],
        findById: [Function: dynamicMethod],
        findByIdIn: [Function: dynamicMethod],
        findByIdLike: [Function: dynamicMethod],
        countById: [Function: dynamicMethod],
        countByIdIn: [Function: dynamicMethod],
        countByIdLike: [Function: dynamicMethod],
        idStartsWith: [Function: dynamicMethod],
        idContains: [Function: dynamicMethod],
        idEndsWith: [Function: dynamicMethod],
        findOneByCode: [Function: dynamicMethod],
        findOneByCodeIn: [Function: dynamicMethod],
        findOneByCodeLike: [Function: dynamicMethod],
        findByCode: [Function: dynamicMethod],
        findByCodeIn: [Function: dynamicMethod],
        findByCodeLike: [Function: dynamicMethod],
        countByCode: [Function: dynamicMethod],
        countByCodeIn: [Function: dynamicMethod],
        countByCodeLike: [Function: dynamicMethod],
        codeStartsWith: [Function: dynamicMethod],
        codeContains: [Function: dynamicMethod],
        codeEndsWith: [Function: dynamicMethod],
        findOneByWebsite_id: [Function: dynamicMethod],
        findOneByWebsite_idIn: [Function: dynamicMethod],
        findOneByWebsite_idLike: [Function: dynamicMethod],
        findByWebsite_id: [Function: dynamicMethod],
        findByWebsite_idIn: [Function: dynamicMethod],
        findByWebsite_idLike: [Function: dynamicMethod],
        countByWebsite_id: [Function: dynamicMethod],
        countByWebsite_idIn: [Function: dynamicMethod],
        countByWebsite_idLike: [Function: dynamicMethod],
        website_idStartsWith: [Function: dynamicMethod],
        website_idContains: [Function: dynamicMethod],
        website_idEndsWith: [Function: dynamicMethod],
        findOneByGroup_id: [Function: dynamicMethod],
        findOneByGroup_idIn: [Function: dynamicMethod],
        findOneByGroup_idLike: [Function: dynamicMethod],
        findByGroup_id: [Function: dynamicMethod],
        findByGroup_idIn: [Function: dynamicMethod],
        findByGroup_idLike: [Function: dynamicMethod],
        countByGroup_id: [Function: dynamicMethod],
        countByGroup_idIn: [Function: dynamicMethod],
        countByGroup_idLike: [Function: dynamicMethod],
        group_idStartsWith: [Function: dynamicMethod],
        group_idContains: [Function: dynamicMethod],
        group_idEndsWith: [Function: dynamicMethod],
        findOneByName: [Function: dynamicMethod],
        findOneByNameIn: [Function: dynamicMethod],
        findOneByNameLike: [Function: dynamicMethod],
        findByName: [Function: dynamicMethod],
        findByNameIn: [Function: dynamicMethod],
        findByNameLike: [Function: dynamicMethod],
        countByName: [Function: dynamicMethod],
        countByNameIn: [Function: dynamicMethod],
        countByNameLike: [Function: dynamicMethod],
        nameStartsWith: [Function: dynamicMethod],
        nameContains: [Function: dynamicMethod],
        nameEndsWith: [Function: dynamicMethod],
        findOneBySort_order: [Function: dynamicMethod],
        findOneBySort_orderIn: [Function: dynamicMethod],
        findOneBySort_orderLike: [Function: dynamicMethod],
        findBySort_order: [Function: dynamicMethod],
        findBySort_orderIn: [Function: dynamicMethod],
        findBySort_orderLike: [Function: dynamicMethod],
        countBySort_order: [Function: dynamicMethod],
        countBySort_orderIn: [Function: dynamicMethod],
        countBySort_orderLike: [Function: dynamicMethod],
        sort_orderStartsWith: [Function: dynamicMethod],
        sort_orderContains: [Function: dynamicMethod],
        sort_orderEndsWith: [Function: dynamicMethod],
        findOneByIs_active: [Function: dynamicMethod],
        findOneByIs_activeIn: [Function: dynamicMethod],
        findOneByIs_activeLike: [Function: dynamicMethod],
        findByIs_active: [Function: dynamicMethod],
        findByIs_activeIn: [Function: dynamicMethod],
        findByIs_activeLike: [Function: dynamicMethod],
        countByIs_active: [Function: dynamicMethod],
        countByIs_activeIn: [Function: dynamicMethod],
        countByIs_activeLike: [Function: dynamicMethod],
        is_activeStartsWith: [Function: dynamicMethod],
        is_activeContains: [Function: dynamicMethod],
        is_activeEndsWith: [Function: dynamicMethod],
        findOneByCreatedAt: [Function: dynamicMethod],
        findOneByCreatedAtIn: [Function: dynamicMethod],
        findOneByCreatedAtLike: [Function: dynamicMethod],
        findByCreatedAt: [Function: dynamicMethod],
        findByCreatedAtIn: [Function: dynamicMethod],
        findByCreatedAtLike: [Function: dynamicMethod],
        countByCreatedAt: [Function: dynamicMethod],
        countByCreatedAtIn: [Function: dynamicMethod],
        countByCreatedAtLike: [Function: dynamicMethod],
        createdAtStartsWith: [Function: dynamicMethod],
        createdAtContains: [Function: dynamicMethod],
        createdAtEndsWith: [Function: dynamicMethod],
        findOneByUpdatedAt: [Function: dynamicMethod],
        findOneByUpdatedAtIn: [Function: dynamicMethod],
        findOneByUpdatedAtLike: [Function: dynamicMethod],
        findByUpdatedAt: [Function: dynamicMethod],
        findByUpdatedAtIn: [Function: dynamicMethod],
        findByUpdatedAtLike: [Function: dynamicMethod],
        countByUpdatedAt: [Function: dynamicMethod],
        countByUpdatedAtIn: [Function: dynamicMethod],
        countByUpdatedAtLike: [Function: dynamicMethod],
        updatedAtStartsWith: [Function: dynamicMethod],
        updatedAtContains: [Function: dynamicMethod],
        updatedAtEndsWith: [Function: dynamicMethod] },
     storecache: 
      { identity: 'storecache',
        adapter: [Object],
        attributes: [Object],
        _cast: [Object],
        _schema: [Object],
        _validator: [Object],
        _callbacks: [Object],
        _instanceMethods: {},
        autoPK: true,
        autoCreatedAt: true,
        autoUpdatedAt: true,
        hasSchema: false,
        migrate: 'alter',
        _model: [Object],
        _transformer: [Object],
        _tableName: 'storecache',
        _adapterDefs: [Object],
        _adapter: [Object],
        syncable: [Function],
        defaults: [Function],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        native: [Function],
        config: [Function],
        findOneById: [Function: dynamicMethod],
        findOneByIdIn: [Function: dynamicMethod],
        findOneByIdLike: [Function: dynamicMethod],
        findById: [Function: dynamicMethod],
        findByIdIn: [Function: dynamicMethod],
        findByIdLike: [Function: dynamicMethod],
        countById: [Function: dynamicMethod],
        countByIdIn: [Function: dynamicMethod],
        countByIdLike: [Function: dynamicMethod],
        idStartsWith: [Function: dynamicMethod],
        idContains: [Function: dynamicMethod],
        idEndsWith: [Function: dynamicMethod],
        findOneByCode: [Function: dynamicMethod],
        findOneByCodeIn: [Function: dynamicMethod],
        findOneByCodeLike: [Function: dynamicMethod],
        findByCode: [Function: dynamicMethod],
        findByCodeIn: [Function: dynamicMethod],
        findByCodeLike: [Function: dynamicMethod],
        countByCode: [Function: dynamicMethod],
        countByCodeIn: [Function: dynamicMethod],
        countByCodeLike: [Function: dynamicMethod],
        codeStartsWith: [Function: dynamicMethod],
        codeContains: [Function: dynamicMethod],
        codeEndsWith: [Function: dynamicMethod],
        findOneByWebsite_id: [Function: dynamicMethod],
        findOneByWebsite_idIn: [Function: dynamicMethod],
        findOneByWebsite_idLike: [Function: dynamicMethod],
        findByWebsite_id: [Function: dynamicMethod],
        findByWebsite_idIn: [Function: dynamicMethod],
        findByWebsite_idLike: [Function: dynamicMethod],
        countByWebsite_id: [Function: dynamicMethod],
        countByWebsite_idIn: [Function: dynamicMethod],
        countByWebsite_idLike: [Function: dynamicMethod],
        website_idStartsWith: [Function: dynamicMethod],
        website_idContains: [Function: dynamicMethod],
        website_idEndsWith: [Function: dynamicMethod],
        findOneByGroup_id: [Function: dynamicMethod],
        findOneByGroup_idIn: [Function: dynamicMethod],
        findOneByGroup_idLike: [Function: dynamicMethod],
        findByGroup_id: [Function: dynamicMethod],
        findByGroup_idIn: [Function: dynamicMethod],
        findByGroup_idLike: [Function: dynamicMethod],
        countByGroup_id: [Function: dynamicMethod],
        countByGroup_idIn: [Function: dynamicMethod],
        countByGroup_idLike: [Function: dynamicMethod],
        group_idStartsWith: [Function: dynamicMethod],
        group_idContains: [Function: dynamicMethod],
        group_idEndsWith: [Function: dynamicMethod],
        findOneByName: [Function: dynamicMethod],
        findOneByNameIn: [Function: dynamicMethod],
        findOneByNameLike: [Function: dynamicMethod],
        findByName: [Function: dynamicMethod],
        findByNameIn: [Function: dynamicMethod],
        findByNameLike: [Function: dynamicMethod],
        countByName: [Function: dynamicMethod],
        countByNameIn: [Function: dynamicMethod],
        countByNameLike: [Function: dynamicMethod],
        nameStartsWith: [Function: dynamicMethod],
        nameContains: [Function: dynamicMethod],
        nameEndsWith: [Function: dynamicMethod],
        findOneBySort_order: [Function: dynamicMethod],
        findOneBySort_orderIn: [Function: dynamicMethod],
        findOneBySort_orderLike: [Function: dynamicMethod],
        findBySort_order: [Function: dynamicMethod],
        findBySort_orderIn: [Function: dynamicMethod],
        findBySort_orderLike: [Function: dynamicMethod],
        countBySort_order: [Function: dynamicMethod],
        countBySort_orderIn: [Function: dynamicMethod],
        countBySort_orderLike: [Function: dynamicMethod],
        sort_orderStartsWith: [Function: dynamicMethod],
        sort_orderContains: [Function: dynamicMethod],
        sort_orderEndsWith: [Function: dynamicMethod],
        findOneByIs_active: [Function: dynamicMethod],
        findOneByIs_activeIn: [Function: dynamicMethod],
        findOneByIs_activeLike: [Function: dynamicMethod],
        findByIs_active: [Function: dynamicMethod],
        findByIs_activeIn: [Function: dynamicMethod],
        findByIs_activeLike: [Function: dynamicMethod],
        countByIs_active: [Function: dynamicMethod],
        countByIs_activeIn: [Function: dynamicMethod],
        countByIs_activeLike: [Function: dynamicMethod],
        is_activeStartsWith: [Function: dynamicMethod],
        is_activeContains: [Function: dynamicMethod],
        is_activeEndsWith: [Function: dynamicMethod],
        findOneByCreatedAt: [Function: dynamicMethod],
        findOneByCreatedAtIn: [Function: dynamicMethod],
        findOneByCreatedAtLike: [Function: dynamicMethod],
        findByCreatedAt: [Function: dynamicMethod],
        findByCreatedAtIn: [Function: dynamicMethod],
        findByCreatedAtLike: [Function: dynamicMethod],
        countByCreatedAt: [Function: dynamicMethod],
        countByCreatedAtIn: [Function: dynamicMethod],
        countByCreatedAtLike: [Function: dynamicMethod],
        createdAtStartsWith: [Function: dynamicMethod],
        createdAtContains: [Function: dynamicMethod],
        createdAtEndsWith: [Function: dynamicMethod],
        findOneByUpdatedAt: [Function: dynamicMethod],
        findOneByUpdatedAtIn: [Function: dynamicMethod],
        findOneByUpdatedAtLike: [Function: dynamicMethod],
        findByUpdatedAt: [Function: dynamicMethod],
        findByUpdatedAtIn: [Function: dynamicMethod],
        findByUpdatedAtLike: [Function: dynamicMethod],
        countByUpdatedAt: [Function: dynamicMethod],
        countByUpdatedAtIn: [Function: dynamicMethod],
        countByUpdatedAtLike: [Function: dynamicMethod],
        updatedAtStartsWith: [Function: dynamicMethod],
        updatedAtContains: [Function: dynamicMethod],
        updatedAtEndsWith: [Function: dynamicMethod] },
     user: 
      { identity: 'user',
        adapter: [Object],
        attributes: [Object],
        _cast: [Object],
        _schema: [Object],
        _validator: [Object],
        _callbacks: [Object],
        _instanceMethods: {},
        autoPK: true,
        autoCreatedAt: true,
        autoUpdatedAt: true,
        hasSchema: true,
        migrate: 'alter',
        _model: [Object],
        _transformer: [Object],
        _tableName: 'user',
        _adapterDefs: [Object],
        _adapter: [Object],
        syncable: [Function],
        defaults: [Function],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        native: [Function],
        config: [Function],
        findOneByEmail: [Function: dynamicMethod],
        findOneByEmailIn: [Function: dynamicMethod],
        findOneByEmailLike: [Function: dynamicMethod],
        findByEmail: [Function: dynamicMethod],
        findByEmailIn: [Function: dynamicMethod],
        findByEmailLike: [Function: dynamicMethod],
        countByEmail: [Function: dynamicMethod],
        countByEmailIn: [Function: dynamicMethod],
        countByEmailLike: [Function: dynamicMethod],
        emailStartsWith: [Function: dynamicMethod],
        emailContains: [Function: dynamicMethod],
        emailEndsWith: [Function: dynamicMethod],
        findOneByName: [Function: dynamicMethod],
        findOneByNameIn: [Function: dynamicMethod],
        findOneByNameLike: [Function: dynamicMethod],
        findByName: [Function: dynamicMethod],
        findByNameIn: [Function: dynamicMethod],
        findByNameLike: [Function: dynamicMethod],
        countByName: [Function: dynamicMethod],
        countByNameIn: [Function: dynamicMethod],
        countByNameLike: [Function: dynamicMethod],
        nameStartsWith: [Function: dynamicMethod],
        nameContains: [Function: dynamicMethod],
        nameEndsWith: [Function: dynamicMethod],
        findOneByColor: [Function: dynamicMethod],
        findOneByColorIn: [Function: dynamicMethod],
        findOneByColorLike: [Function: dynamicMethod],
        findByColor: [Function: dynamicMethod],
        findByColorIn: [Function: dynamicMethod],
        findByColorLike: [Function: dynamicMethod],
        countByColor: [Function: dynamicMethod],
        countByColorIn: [Function: dynamicMethod],
        countByColorLike: [Function: dynamicMethod],
        colorStartsWith: [Function: dynamicMethod],
        colorContains: [Function: dynamicMethod],
        colorEndsWith: [Function: dynamicMethod],
        findOneById: [Function: dynamicMethod],
        findOneByIdIn: [Function: dynamicMethod],
        findOneByIdLike: [Function: dynamicMethod],
        findById: [Function: dynamicMethod],
        findByIdIn: [Function: dynamicMethod],
        findByIdLike: [Function: dynamicMethod],
        countById: [Function: dynamicMethod],
        countByIdIn: [Function: dynamicMethod],
        countByIdLike: [Function: dynamicMethod],
        idStartsWith: [Function: dynamicMethod],
        idContains: [Function: dynamicMethod],
        idEndsWith: [Function: dynamicMethod],
        findOneByCreatedAt: [Function: dynamicMethod],
        findOneByCreatedAtIn: [Function: dynamicMethod],
        findOneByCreatedAtLike: [Function: dynamicMethod],
        findByCreatedAt: [Function: dynamicMethod],
        findByCreatedAtIn: [Function: dynamicMethod],
        findByCreatedAtLike: [Function: dynamicMethod],
        countByCreatedAt: [Function: dynamicMethod],
        countByCreatedAtIn: [Function: dynamicMethod],
        countByCreatedAtLike: [Function: dynamicMethod],
        createdAtStartsWith: [Function: dynamicMethod],
        createdAtContains: [Function: dynamicMethod],
        createdAtEndsWith: [Function: dynamicMethod],
        findOneByUpdatedAt: [Function: dynamicMethod],
        findOneByUpdatedAtIn: [Function: dynamicMethod],
        findOneByUpdatedAtLike: [Function: dynamicMethod],
        findByUpdatedAt: [Function: dynamicMethod],
        findByUpdatedAtIn: [Function: dynamicMethod],
        findByUpdatedAtLike: [Function: dynamicMethod],
        countByUpdatedAt: [Function: dynamicMethod],
        countByUpdatedAtIn: [Function: dynamicMethod],
        countByUpdatedAtLike: [Function: dynamicMethod],
        updatedAtStartsWith: [Function: dynamicMethod],
        updatedAtContains: [Function: dynamicMethod],
        updatedAtEndsWith: [Function: dynamicMethod],
        findOneByEncrypted_password: [Function: dynamicMethod],
        findOneByEncrypted_passwordIn: [Function: dynamicMethod],
        findOneByEncrypted_passwordLike: [Function: dynamicMethod],
        findByEncrypted_password: [Function: dynamicMethod],
        findByEncrypted_passwordIn: [Function: dynamicMethod],
        findByEncrypted_passwordLike: [Function: dynamicMethod],
        countByEncrypted_password: [Function: dynamicMethod],
        countByEncrypted_passwordIn: [Function: dynamicMethod],
        countByEncrypted_passwordLike: [Function: dynamicMethod],
        encrypted_passwordStartsWith: [Function: dynamicMethod],
        encrypted_passwordContains: [Function: dynamicMethod],
        encrypted_passwordEndsWith: [Function: dynamicMethod] },
     vwheritageimage: 
      { identity: 'vwheritageimage',
        adapter: [Object],
        attributes: {},
        _cast: [Object],
        _schema: [Object],
        _validator: [Object],
        _callbacks: [Object],
        _instanceMethods: {},
        autoPK: true,
        autoCreatedAt: true,
        autoUpdatedAt: true,
        hasSchema: true,
        migrate: 'alter',
        _model: [Object],
        _transformer: [Object],
        _tableName: 'vwheritageimage',
        _adapterDefs: [Object],
        _adapter: [Object],
        syncable: [Function],
        defaults: [Function],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        config: [Function],
        findOneById: [Function: dynamicMethod],
        findOneByIdIn: [Function: dynamicMethod],
        findOneByIdLike: [Function: dynamicMethod],
        findById: [Function: dynamicMethod],
        findByIdIn: [Function: dynamicMethod],
        findByIdLike: [Function: dynamicMethod],
        countById: [Function: dynamicMethod],
        countByIdIn: [Function: dynamicMethod],
        countByIdLike: [Function: dynamicMethod],
        idStartsWith: [Function: dynamicMethod],
        idContains: [Function: dynamicMethod],
        idEndsWith: [Function: dynamicMethod],
        findOneByCreatedAt: [Function: dynamicMethod],
        findOneByCreatedAtIn: [Function: dynamicMethod],
        findOneByCreatedAtLike: [Function: dynamicMethod],
        findByCreatedAt: [Function: dynamicMethod],
        findByCreatedAtIn: [Function: dynamicMethod],
        findByCreatedAtLike: [Function: dynamicMethod],
        countByCreatedAt: [Function: dynamicMethod],
        countByCreatedAtIn: [Function: dynamicMethod],
        countByCreatedAtLike: [Function: dynamicMethod],
        createdAtStartsWith: [Function: dynamicMethod],
        createdAtContains: [Function: dynamicMethod],
        createdAtEndsWith: [Function: dynamicMethod],
        findOneByUpdatedAt: [Function: dynamicMethod],
        findOneByUpdatedAtIn: [Function: dynamicMethod],
        findOneByUpdatedAtLike: [Function: dynamicMethod],
        findByUpdatedAt: [Function: dynamicMethod],
        findByUpdatedAtIn: [Function: dynamicMethod],
        findByUpdatedAtLike: [Function: dynamicMethod],
        countByUpdatedAt: [Function: dynamicMethod],
        countByUpdatedAtIn: [Function: dynamicMethod],
        countByUpdatedAtLike: [Function: dynamicMethod],
        updatedAtStartsWith: [Function: dynamicMethod],
        updatedAtContains: [Function: dynamicMethod],
        updatedAtEndsWith: [Function: dynamicMethod] },
     vwheritageproduct: 
      { identity: 'vwheritageproduct',
        adapter: [Object],
        attributes: {},
        _cast: [Object],
        _schema: [Object],
        _validator: [Object],
        _callbacks: [Object],
        _instanceMethods: {},
        autoPK: true,
        autoCreatedAt: true,
        autoUpdatedAt: true,
        hasSchema: true,
        migrate: 'alter',
        _model: [Object],
        _transformer: [Object],
        _tableName: 'vwheritageproduct',
        _adapterDefs: [Object],
        _adapter: [Object],
        syncable: [Function],
        defaults: [Function],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        config: [Function],
        findOneById: [Function: dynamicMethod],
        findOneByIdIn: [Function: dynamicMethod],
        findOneByIdLike: [Function: dynamicMethod],
        findById: [Function: dynamicMethod],
        findByIdIn: [Function: dynamicMethod],
        findByIdLike: [Function: dynamicMethod],
        countById: [Function: dynamicMethod],
        countByIdIn: [Function: dynamicMethod],
        countByIdLike: [Function: dynamicMethod],
        idStartsWith: [Function: dynamicMethod],
        idContains: [Function: dynamicMethod],
        idEndsWith: [Function: dynamicMethod],
        findOneByCreatedAt: [Function: dynamicMethod],
        findOneByCreatedAtIn: [Function: dynamicMethod],
        findOneByCreatedAtLike: [Function: dynamicMethod],
        findByCreatedAt: [Function: dynamicMethod],
        findByCreatedAtIn: [Function: dynamicMethod],
        findByCreatedAtLike: [Function: dynamicMethod],
        countByCreatedAt: [Function: dynamicMethod],
        countByCreatedAtIn: [Function: dynamicMethod],
        countByCreatedAtLike: [Function: dynamicMethod],
        createdAtStartsWith: [Function: dynamicMethod],
        createdAtContains: [Function: dynamicMethod],
        createdAtEndsWith: [Function: dynamicMethod],
        findOneByUpdatedAt: [Function: dynamicMethod],
        findOneByUpdatedAtIn: [Function: dynamicMethod],
        findOneByUpdatedAtLike: [Function: dynamicMethod],
        findByUpdatedAt: [Function: dynamicMethod],
        findByUpdatedAtIn: [Function: dynamicMethod],
        findByUpdatedAtLike: [Function: dynamicMethod],
        countByUpdatedAt: [Function: dynamicMethod],
        countByUpdatedAtIn: [Function: dynamicMethod],
        countByUpdatedAtLike: [Function: dynamicMethod],
        updatedAtStartsWith: [Function: dynamicMethod],
        updatedAtContains: [Function: dynamicMethod],
        updatedAtEndsWith: [Function: dynamicMethod] } },
  adapters: 
   { 'sails-magento': 
      { syncable: true,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        describe: [Function],
        drop: [Function],
        alter: [Function],
        create: [Function],
        findOne: [Function],
        findAll: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        product_items: [Function],
        store_tree: [Function] },
     'sails-mongo': 
      { syncable: true,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        describe: [Function],
        define: [Function],
        drop: [Function],
        native: [Function],
        create: [Function],
        createEach: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        identity: 'sails-mongo' },
     'sails-vwheritage': 
      { syncable: false,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        describe: [Function],
        drop: [Function],
        create: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function] } },
  views: 
   { '403': true,
     '404': true,
     '500': true,
     index: true,
     layout: true,
     templateCache: true,
     templates: { content: [Object], partials: [Object] } },
  controllers: 
   { attributesetcache: 
      { import: [Function],
        _config: {},
        identity: 'attributesetcache',
        globalId: 'AttributeSetCache' },
     attributeset: 
      { exportToCache: [Function],
        _config: {},
        identity: 'attributeset',
        globalId: 'AttributeSet' },
     category: { _config: {}, identity: 'category', globalId: 'Category' },
     customer: { _config: {}, identity: 'customer', globalId: 'Customer' },
     index: 
      { index: [Function],
        _config: {},
        identity: 'index',
        globalId: 'Index' },
     productattribute: 
      { _config: {},
        identity: 'productattribute',
        globalId: 'ProductAttribute' },
     productcache: 
      { import: [Function],
        _config: {},
        identity: 'productcache',
        globalId: 'ProductCache' },
     product: 
      { exportOneToCache: [Function],
        exportToCache: [Function],
        generateAttributes: [Function],
        _config: {},
        identity: 'product',
        globalId: 'Product' },
     session: 
      { create: [Function],
        destroy: [Function],
        _config: {},
        identity: 'session',
        globalId: 'Session' },
     storecache: 
      { import: [Function],
        _config: {},
        identity: 'storecache',
        globalId: 'StoreCache' },
     store: 
      { exportToCache: [Function],
        tree: [Function],
        _config: {},
        identity: 'store',
        globalId: 'Store' },
     user: 
      { create: [Function],
        _config: {},
        identity: 'user',
        globalId: 'User' },
     vwheritageimage: 
      { _config: {},
        identity: 'vwheritageimage',
        globalId: 'VWHeritageImage' },
     vwheritageproduct: 
      { _config: {},
        identity: 'vwheritageproduct',
        globalId: 'VWHeritageProduct' } },
  ws: 
   { server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 0,
        connections: [Getter/Setter],
        _handle: null,
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000 },
     namespaces: { '': [Object] },
     sockets: 
      { manager: [Circular],
        name: '',
        sockets: {},
        auth: false,
        flags: [Object],
        _events: [Object] },
     _events: 
      { 'set:transports': [Object],
        'set:store': [Function],
        'set:origins': [Function],
        'set:flash policy port': [Function],
        'set:flash policy server': [Function] },
     settings: 
      { origins: '*:*',
        log: true,
        store: [Object],
        logger: [Object],
        static: [Object],
        heartbeats: true,
        resource: '/socket.io',
        transports: [Object],
        authorization: [Function: socketAttemptingToConnect],
        blacklist: [Object],
        'log level': 3,
        'log colors': false,
        'close timeout': 60,
        'heartbeat interval': 25,
        'heartbeat timeout': 60,
        'polling duration': 20,
        'flash policy server': false,
        'flash policy port': 10843,
        'destroy upgrade': true,
        'destroy buffer size': '10E7',
        'browser client': true,
        'browser client cache': true,
        'browser client minification': false,
        'browser client etag': false,
        'browser client expires': 315360000,
        'browser client gzip': false,
        'browser client handler': false,
        'client store expiration': 15,
        'match origin protocol': false,
        onConnect: [Function],
        onDisconnect: [Function] },
     handshaken: {},
     connected: {},
     open: {},
     closed: {},
     rooms: {},
     roomClients: {},
     oldListeners: [ [Object] ],
     sequenceNumber: -1107209948 },
  io: 
   { server: 
      { domain: null,
        _events: [Object],
        _maxListeners: 10,
        _connections: 0,
        connections: [Getter/Setter],
        _handle: null,
        _usingSlaves: false,
        _slaves: [],
        allowHalfOpen: true,
        httpAllowHalfOpen: false,
        timeout: 120000 },
     namespaces: { '': [Object] },
     sockets: 
      { manager: [Circular],
        name: '',
        sockets: {},
        auth: false,
        flags: [Object],
        _events: [Object] },
     _events: 
      { 'set:transports': [Object],
        'set:store': [Function],
        'set:origins': [Function],
        'set:flash policy port': [Function],
        'set:flash policy server': [Function] },
     settings: 
      { origins: '*:*',
        log: true,
        store: [Object],
        logger: [Object],
        static: [Object],
        heartbeats: true,
        resource: '/socket.io',
        transports: [Object],
        authorization: [Function: socketAttemptingToConnect],
        blacklist: [Object],
        'log level': 3,
        'log colors': false,
        'close timeout': 60,
        'heartbeat interval': 25,
        'heartbeat timeout': 60,
        'polling duration': 20,
        'flash policy server': false,
        'flash policy port': 10843,
        'destroy upgrade': true,
        'destroy buffer size': '10E7',
        'browser client': true,
        'browser client cache': true,
        'browser client minification': false,
        'browser client etag': false,
        'browser client expires': 315360000,
        'browser client gzip': false,
        'browser client handler': false,
        'client store expiration': 15,
        'match origin protocol': false,
        onConnect: [Function],
        onDisconnect: [Function] },
     handshaken: {},
     connected: {},
     open: {},
     closed: {},
     rooms: {},
     roomClients: {},
     oldListeners: [ [Object] ],
     sequenceNumber: -1107209948 },
  adHocAdapters: 
   { adhoc_adapter_0: 
      { syncable: true,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        describe: [Function],
        drop: [Function],
        alter: [Function],
        create: [Function],
        findOne: [Function],
        findAll: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        product_items: [Function],
        store_tree: [Function],
        config: [Object] },
     adhoc_adapter_1: 
      { syncable: true,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        describe: [Function],
        define: [Function],
        drop: [Function],
        native: [Function],
        create: [Function],
        createEach: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        identity: 'sails-mongo',
        config: [Object] },
     adhoc_adapter_2: 
      { syncable: true,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        describe: [Function],
        drop: [Function],
        alter: [Function],
        create: [Function],
        findOne: [Function],
        findAll: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        product_items: [Function],
        store_tree: [Function],
        config: [Object] },
     adhoc_adapter_3: 
      { syncable: true,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        describe: [Function],
        drop: [Function],
        alter: [Function],
        create: [Function],
        findOne: [Function],
        findAll: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        product_items: [Function],
        store_tree: [Function],
        config: [Object] },
     adhoc_adapter_4: 
      { syncable: true,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        describe: [Function],
        drop: [Function],
        alter: [Function],
        create: [Function],
        findOne: [Function],
        findAll: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        product_items: [Function],
        store_tree: [Function],
        config: [Object] },
     adhoc_adapter_5: 
      { syncable: true,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        describe: [Function],
        define: [Function],
        drop: [Function],
        native: [Function],
        create: [Function],
        createEach: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        identity: 'sails-mongo',
        config: [Object] },
     adhoc_adapter_6: 
      { syncable: true,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        describe: [Function],
        define: [Function],
        drop: [Function],
        native: [Function],
        create: [Function],
        createEach: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        identity: 'sails-mongo',
        config: [Object] },
     adhoc_adapter_7: 
      { syncable: true,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        describe: [Function],
        drop: [Function],
        alter: [Function],
        create: [Function],
        findOne: [Function],
        findAll: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        product_items: [Function],
        store_tree: [Function],
        config: [Object] },
     adhoc_adapter_8: 
      { syncable: true,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        describe: [Function],
        define: [Function],
        drop: [Function],
        native: [Function],
        create: [Function],
        createEach: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        identity: 'sails-mongo',
        config: [Object] },
     adhoc_adapter_9: 
      { syncable: true,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        describe: [Function],
        define: [Function],
        drop: [Function],
        native: [Function],
        create: [Function],
        createEach: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        identity: 'sails-mongo',
        config: [Object] },
     adhoc_adapter_10: 
      { syncable: false,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        describe: [Function],
        drop: [Function],
        create: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        config: [Object] },
     adhoc_adapter_11: 
      { syncable: false,
        defaults: [Object],
        registerCollection: [Function],
        teardown: [Function],
        define: [Function],
        describe: [Function],
        drop: [Function],
        create: [Function],
        find: [Function],
        update: [Function],
        destroy: [Function],
        stream: [Function],
        config: [Object] } },
  middleware: 
   { load: [Function: bound],
     request: {},
     orm: {},
     views: 
      { '403': [Object],
        '404': [Object],
        '500': [Object],
        index: [Object],
        layout: [Object],
        templateCache: [Object],
        templates: [Object] },
     controllers: 
      { attributesetcache: [Object],
        attributeset: [Object],
        category: [Object],
        customer: [Object],
        index: [Object],
        productattribute: [Object],
        productcache: [Object],
        product: [Object],
        session: [Object],
        storecache: [Object],
        store: [Object],
        user: [Object],
        vwheritageimage: [Object],
        vwheritageproduct: [Object] },
     sockets: {},
     pubsub: {},
     policies: { isauthenticated: [Object] },
     csrf: {},
     cors: {},
     i18n: {},
     http: {} },
  router: 
   { bind: [Function: bound],
     flush: [Function: bound],
     load: [Function: bound],
     reset: [Function: bound],
     route: [Function: bound],
     unbind: [Function: bound],
     wildcard: [Function: bound],
     staticRoutes: { '/': [Object], '/user/create': [Function] },
     log: 
      { [Function]
        log: [Function],
        debug: [Function],
        verbose: [Function],
        info: [Function],
        warn: [Function],
        error: [Function],
        ship: [Function] },
     _app: 
      { [Function: app]
        use: [Function],
        handle: [Function],
        listen: [Function],
        setMaxListeners: [Function],
        emit: [Function],
        addListener: [Function],
        on: [Function],
        once: [Function],
        removeListener: [Function],
        removeAllListeners: [Function],
        listeners: [Function],
        route: '/',
        stack: [Object],
        init: [Function],
        defaultConfiguration: [Function],
        engine: [Function],
        param: [Function],
        set: [Function],
        path: [Function],
        enabled: [Function],
        disabled: [Function],
        enable: [Function],
        disable: [Function],
        configure: [Function],
        get: [Function],
        post: [Function],
        put: [Function],
        head: [Function],
        delete: [Function],
        options: [Function],
        trace: [Function],
        copy: [Function],
        lock: [Function],
        mkcol: [Function],
        move: [Function],
        propfind: [Function],
        proppatch: [Function],
        unlock: [Function],
        report: [Function],
        mkactivity: [Function],
        checkout: [Function],
        merge: [Function],
        'm-search': [Function],
        notify: [Function],
        subscribe: [Function],
        unsubscribe: [Function],
        patch: [Function],
        all: [Function],
        del: [Function],
        render: [Function],
        request: [Object],
        response: [Object],
        cache: {},
        settings: [Object],
        engines: {},
        _events: [Object],
        _router: [Object],
        routes: [Object],
        router: [Getter],
        locals: [Object],
        _usedRouter: true } },
  services: 
   { dnodeservice: 
      { server: [Function],
        identity: 'dnodeservice',
        globalId: 'DNodeService' },
     exporttocacheservice: 
      { [Function]
        identity: 'exporttocacheservice',
        globalId: 'ExportToCacheService' },
     productmodelattributesgeneratorservice: 
      { generator: [Object],
        identity: 'productmodelattributesgeneratorservice',
        globalId: 'ProductModelAttributesGeneratorService' } } }
[32minfo[39m: 
[32minfo[39m: Starting DNode Server...
[32minfo[39m:  _____  _   _           _      
[32minfo[39m: |  __ \| \ | |         | |     
[32minfo[39m: | |  | |  \| | ___   __| | ___ 
[32minfo[39m: | |  | | . ` |/ _ \ / _` |/ _ \
[32minfo[39m: | |__| | |\  | (_) | (_| |  __/
[32minfo[39m: |_____/|_| \_|\___/ \__,_|\___|
[32minfo[39m: 
[32minfo[39m: listening on port 7070
[32minfo[39m: admin checked
[32minfo[39m: 
[32minfo[39m: 
[32minfo[39m:    Sails.js           <|
[32minfo[39m:    v0.9.7              |\
[32minfo[39m:                       /|.\
[32minfo[39m:                      / || \
[32minfo[39m:                    ,'  |'  \
[32minfo[39m:                 .-'.-==|/_--'
[32minfo[39m:                 `--'-------' 
[32minfo[39m:    __---___--___---___--___---___--___
[32minfo[39m:  ____---___--___---___--___---___--___-__
[32minfo[39m: 
[32minfo[39m: Server lifted in `/media/sf_jumplink/Projekte/git/magento-sails-angularjs`
[32minfo[39m: To see your app, visit http://localhost:1337
[32minfo[39m: To shut down Sails, press <CTRL> + C at any time.


